// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VPNGatewayConnectionDPD v p n gateway connection d p d
// swagger:model VPNGatewayConnectionDPD
type VPNGatewayConnectionDPD struct {

	// Dead Peer Detection actions
	// Enum: [restart clear hold none]
	Action *string `json:"action,omitempty"`

	// Dead Peer Detection interval in seconds
	Interval *int64 `json:"interval,omitempty"`

	// Dead Peer Detection timeout in seconds
	Timeout *int64 `json:"timeout,omitempty"`
}

// Validate validates this v p n gateway connection d p d
func (m *VPNGatewayConnectionDPD) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vPNGatewayConnectionDPDTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["restart","clear","hold","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vPNGatewayConnectionDPDTypeActionPropEnum = append(vPNGatewayConnectionDPDTypeActionPropEnum, v)
	}
}

const (

	// VPNGatewayConnectionDPDActionRestart captures enum value "restart"
	VPNGatewayConnectionDPDActionRestart string = "restart"

	// VPNGatewayConnectionDPDActionClear captures enum value "clear"
	VPNGatewayConnectionDPDActionClear string = "clear"

	// VPNGatewayConnectionDPDActionHold captures enum value "hold"
	VPNGatewayConnectionDPDActionHold string = "hold"

	// VPNGatewayConnectionDPDActionNone captures enum value "none"
	VPNGatewayConnectionDPDActionNone string = "none"
)

// prop value enum
func (m *VPNGatewayConnectionDPD) validateActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, vPNGatewayConnectionDPDTypeActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VPNGatewayConnectionDPD) validateAction(formats strfmt.Registry) error {

	if swag.IsZero(m.Action) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionEnum("action", "body", *m.Action); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VPNGatewayConnectionDPD) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VPNGatewayConnectionDPD) UnmarshalBinary(b []byte) error {
	var res VPNGatewayConnectionDPD
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
