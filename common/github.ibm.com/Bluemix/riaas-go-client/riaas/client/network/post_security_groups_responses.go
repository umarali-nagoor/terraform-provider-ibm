// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PostSecurityGroupsReader is a Reader for the PostSecurityGroups structure.
type PostSecurityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSecurityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostSecurityGroupsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSecurityGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostSecurityGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSecurityGroupsCreated creates a PostSecurityGroupsCreated with default headers values
func NewPostSecurityGroupsCreated() *PostSecurityGroupsCreated {
	return &PostSecurityGroupsCreated{}
}

/*PostSecurityGroupsCreated handles this case with default header values.

dummy
*/
type PostSecurityGroupsCreated struct {
	Payload *models.SecurityGroup
}

func (o *PostSecurityGroupsCreated) Error() string {
	return fmt.Sprintf("[POST /security_groups][%d] postSecurityGroupsCreated  %+v", 201, o.Payload)
}

func (o *PostSecurityGroupsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecurityGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSecurityGroupsBadRequest creates a PostSecurityGroupsBadRequest with default headers values
func NewPostSecurityGroupsBadRequest() *PostSecurityGroupsBadRequest {
	return &PostSecurityGroupsBadRequest{}
}

/*PostSecurityGroupsBadRequest handles this case with default header values.

error
*/
type PostSecurityGroupsBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostSecurityGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /security_groups][%d] postSecurityGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *PostSecurityGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSecurityGroupsInternalServerError creates a PostSecurityGroupsInternalServerError with default headers values
func NewPostSecurityGroupsInternalServerError() *PostSecurityGroupsInternalServerError {
	return &PostSecurityGroupsInternalServerError{}
}

/*PostSecurityGroupsInternalServerError handles this case with default header values.

error
*/
type PostSecurityGroupsInternalServerError struct {
	Payload *models.Riaaserror
}

func (o *PostSecurityGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /security_groups][%d] postSecurityGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSecurityGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostSecurityGroupsBody SecurityGroupTemplate
swagger:model PostSecurityGroupsBody
*/
type PostSecurityGroupsBody struct {

	// The user-assigned name of this security group. If the user does not provide a name, one will be automatically assigned. Security group names must be unique, within the scope of a user account.
	Name string `json:"name,omitempty"`

	// resource group
	ResourceGroup *PostSecurityGroupsParamsBodyResourceGroup `json:"resource_group,omitempty"`

	// Collection of rule templates for rules to be created along with the security group
	Rules []*RulesItems0 `json:"rules,omitempty"`

	// vpc
	Vpc *PostSecurityGroupsParamsBodyVpc `json:"vpc,omitempty"`
}

// Validate validates this post security groups body
func (o *PostSecurityGroupsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResourceGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVpc(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostSecurityGroupsBody) validateResourceGroup(formats strfmt.Registry) error {

	if swag.IsZero(o.ResourceGroup) { // not required
		return nil
	}

	if o.ResourceGroup != nil {
		if err := o.ResourceGroup.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "resource_group")
			}
			return err
		}
	}

	return nil
}

func (o *PostSecurityGroupsBody) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostSecurityGroupsBody) validateVpc(formats strfmt.Registry) error {

	if swag.IsZero(o.Vpc) { // not required
		return nil
	}

	if o.Vpc != nil {
		if err := o.Vpc.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "vpc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostSecurityGroupsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostSecurityGroupsBody) UnmarshalBinary(b []byte) error {
	var res PostSecurityGroupsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostSecurityGroupsParamsBodyResourceGroup The resource group for this security group
swagger:model PostSecurityGroupsParamsBodyResourceGroup
*/
type PostSecurityGroupsParamsBodyResourceGroup struct {

	// The unique identifier for this resource group
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`
}

// Validate validates this post security groups params body resource group
func (o *PostSecurityGroupsParamsBodyResourceGroup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostSecurityGroupsParamsBodyResourceGroup) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"resource_group"+"."+"id", "body", "uuid", o.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostSecurityGroupsParamsBodyResourceGroup) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostSecurityGroupsParamsBodyResourceGroup) UnmarshalBinary(b []byte) error {
	var res PostSecurityGroupsParamsBodyResourceGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostSecurityGroupsParamsBodyVpc VPCIdentityByName
//
// The VPC the server is to be a part of
swagger:model PostSecurityGroupsParamsBodyVpc
*/
type PostSecurityGroupsParamsBodyVpc struct {

	// The CRN for this VPC
	Crn string `json:"crn,omitempty"`

	// The unique identifier for this VPC
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// The user-defined name for this VPC
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	Name string `json:"name,omitempty"`
}

// Validate validates this post security groups params body vpc
func (o *PostSecurityGroupsParamsBodyVpc) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostSecurityGroupsParamsBodyVpc) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"vpc"+"."+"id", "body", "uuid", o.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostSecurityGroupsParamsBodyVpc) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"vpc"+"."+"name", "body", string(o.Name), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostSecurityGroupsParamsBodyVpc) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostSecurityGroupsParamsBodyVpc) UnmarshalBinary(b []byte) error {
	var res PostSecurityGroupsParamsBodyVpc
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RulesItems0Remote SecurityGroupIdentityByName
//
// Uniquely identifies a security group using any one of ID, CRN, or name.
swagger:model RulesItems0Remote
*/
type RulesItems0Remote struct {

	// A single IPv4 or IPv6 address.
	Address string `json:"address,omitempty"`

	// A range of IPv4 or IPv6 addresses, in CIDR format.
	CidrBlock string `json:"cidr_block,omitempty"`

	// The security group's CRN
	Crn string `json:"crn,omitempty"`

	// The security group's unique identifier.
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// The security group's user-defined name.
	// Required: true
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	Name *string `json:"name"`
}

// Validate validates this rules items0 remote
func (o *RulesItems0Remote) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RulesItems0Remote) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("remote"+"."+"id", "body", "uuid", o.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *RulesItems0Remote) validateName(formats strfmt.Registry) error {

	if err := validate.Required("remote"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	if err := validate.Pattern("remote"+"."+"name", "body", string(*o.Name), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RulesItems0Remote) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RulesItems0Remote) UnmarshalBinary(b []byte) error {
	var res RulesItems0Remote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
