// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchVpnGatewaysIDReader is a Reader for the PatchVpnGatewaysID structure.
type PatchVpnGatewaysIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchVpnGatewaysIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchVpnGatewaysIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchVpnGatewaysIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchVpnGatewaysIDOK creates a PatchVpnGatewaysIDOK with default headers values
func NewPatchVpnGatewaysIDOK() *PatchVpnGatewaysIDOK {
	return &PatchVpnGatewaysIDOK{}
}

/*PatchVpnGatewaysIDOK handles this case with default header values.

The VPN gateway was updated successfully.
*/
type PatchVpnGatewaysIDOK struct {
	Payload *models.VPNGateway
}

func (o *PatchVpnGatewaysIDOK) Error() string {
	return fmt.Sprintf("[PATCH /vpn_gateways/{id}][%d] patchVpnGatewaysIdOK  %+v", 200, o.Payload)
}

func (o *PatchVpnGatewaysIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VPNGateway)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchVpnGatewaysIDBadRequest creates a PatchVpnGatewaysIDBadRequest with default headers values
func NewPatchVpnGatewaysIDBadRequest() *PatchVpnGatewaysIDBadRequest {
	return &PatchVpnGatewaysIDBadRequest{}
}

/*PatchVpnGatewaysIDBadRequest handles this case with default header values.

An invalid VPN gateway patch was provided.
*/
type PatchVpnGatewaysIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchVpnGatewaysIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /vpn_gateways/{id}][%d] patchVpnGatewaysIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchVpnGatewaysIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
