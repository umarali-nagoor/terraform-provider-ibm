// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams creates a new PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams object
// with the default values initialized.
func NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams() *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	var ()
	return &PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithTimeout creates a new PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithTimeout(timeout time.Duration) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	var ()
	return &PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams{

		timeout: timeout,
	}
}

// NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithContext creates a new PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithContext(ctx context.Context) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	var ()
	return &PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams{

		Context: ctx,
	}
}

// NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithHTTPClient creates a new PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParamsWithHTTPClient(client *http.Client) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	var ()
	return &PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams{
		HTTPClient: client,
	}
}

/*PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams contains all the parameters to send to the API endpoint
for the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length operation typically these are written to a http.Request
*/
type PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams struct {

	/*Generation
	  The infrastructure generation for the request.

	*/
	Generation int64
	/*ID
	  The VPN connection identifier

	*/
	ID string
	/*PrefixAddress
	  The prefix address part of the CIDR

	*/
	PrefixAddress string
	/*PrefixLength
	  The prefix length part of the CIDR

	*/
	PrefixLength string
	/*Version
	  Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version.

	*/
	Version string
	/*VpnGatewayID
	  The VPN gateway identifier

	*/
	VpnGatewayID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithTimeout(timeout time.Duration) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithContext(ctx context.Context) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithHTTPClient(client *http.Client) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGeneration adds the generation to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithGeneration(generation int64) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetGeneration(generation)
	return o
}

// SetGeneration adds the generation to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetGeneration(generation int64) {
	o.Generation = generation
}

// WithID adds the id to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithID(id string) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetID(id string) {
	o.ID = id
}

// WithPrefixAddress adds the prefixAddress to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithPrefixAddress(prefixAddress string) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetPrefixAddress(prefixAddress)
	return o
}

// SetPrefixAddress adds the prefixAddress to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetPrefixAddress(prefixAddress string) {
	o.PrefixAddress = prefixAddress
}

// WithPrefixLength adds the prefixLength to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithPrefixLength(prefixLength string) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetPrefixLength(prefixLength)
	return o
}

// SetPrefixLength adds the prefixLength to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetPrefixLength(prefixLength string) {
	o.PrefixLength = prefixLength
}

// WithVersion adds the version to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithVersion(version string) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetVersion(version string) {
	o.Version = version
}

// WithVpnGatewayID adds the vpnGatewayID to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WithVpnGatewayID(vpnGatewayID string) *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams {
	o.SetVpnGatewayID(vpnGatewayID)
	return o
}

// SetVpnGatewayID adds the vpnGatewayId to the put vpn gateways vpn gateway ID connections ID peer cidrs prefix address prefix length params
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) SetVpnGatewayID(vpnGatewayID string) {
	o.VpnGatewayID = vpnGatewayID
}

// WriteToRequest writes these params to a swagger request
func (o *PutVpnGatewaysVpnGatewayIDConnectionsIDPeerCidrsPrefixAddressPrefixLengthParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param generation
	qrGeneration := o.Generation
	qGeneration := swag.FormatInt64(qrGeneration)
	if qGeneration != "" {
		if err := r.SetQueryParam("generation", qGeneration); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param prefix_address
	if err := r.SetPathParam("prefix_address", o.PrefixAddress); err != nil {
		return err
	}

	// path param prefix_length
	if err := r.SetPathParam("prefix_length", o.PrefixLength); err != nil {
		return err
	}

	// query param version
	qrVersion := o.Version
	qVersion := qrVersion
	if qVersion != "" {
		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	// path param vpn_gateway_id
	if err := r.SetPathParam("vpn_gateway_id", o.VpnGatewayID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
