// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PostIkePoliciesReader is a Reader for the PostIkePolicies structure.
type PostIkePoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIkePoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostIkePoliciesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostIkePoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostIkePoliciesCreated creates a PostIkePoliciesCreated with default headers values
func NewPostIkePoliciesCreated() *PostIkePoliciesCreated {
	return &PostIkePoliciesCreated{}
}

/*PostIkePoliciesCreated handles this case with default header values.

The IKE policy was created successfully.
*/
type PostIkePoliciesCreated struct {
	Payload *models.IKEPolicy
}

func (o *PostIkePoliciesCreated) Error() string {
	return fmt.Sprintf("[POST /ike_policies][%d] postIkePoliciesCreated  %+v", 201, o.Payload)
}

func (o *PostIkePoliciesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IKEPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIkePoliciesBadRequest creates a PostIkePoliciesBadRequest with default headers values
func NewPostIkePoliciesBadRequest() *PostIkePoliciesBadRequest {
	return &PostIkePoliciesBadRequest{}
}

/*PostIkePoliciesBadRequest handles this case with default header values.

An invalid IKE policy template was provided.
*/
type PostIkePoliciesBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostIkePoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /ike_policies][%d] postIkePoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *PostIkePoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
