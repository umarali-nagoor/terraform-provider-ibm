// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// GetVpnGatewaysVpnGatewayIDConnectionsReader is a Reader for the GetVpnGatewaysVpnGatewayIDConnections structure.
type GetVpnGatewaysVpnGatewayIDConnectionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVpnGatewaysVpnGatewayIDConnectionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVpnGatewaysVpnGatewayIDConnectionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetVpnGatewaysVpnGatewayIDConnectionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVpnGatewaysVpnGatewayIDConnectionsOK creates a GetVpnGatewaysVpnGatewayIDConnectionsOK with default headers values
func NewGetVpnGatewaysVpnGatewayIDConnectionsOK() *GetVpnGatewaysVpnGatewayIDConnectionsOK {
	return &GetVpnGatewaysVpnGatewayIDConnectionsOK{}
}

/*GetVpnGatewaysVpnGatewayIDConnectionsOK handles this case with default header values.

The VPN connections were retrieved successfully.
*/
type GetVpnGatewaysVpnGatewayIDConnectionsOK struct {
	Payload *models.VPNGatewayConnectionCollection
}

func (o *GetVpnGatewaysVpnGatewayIDConnectionsOK) Error() string {
	return fmt.Sprintf("[GET /vpn_gateways/{vpn_gateway_id}/connections][%d] getVpnGatewaysVpnGatewayIdConnectionsOK  %+v", 200, o.Payload)
}

func (o *GetVpnGatewaysVpnGatewayIDConnectionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VPNGatewayConnectionCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVpnGatewaysVpnGatewayIDConnectionsNotFound creates a GetVpnGatewaysVpnGatewayIDConnectionsNotFound with default headers values
func NewGetVpnGatewaysVpnGatewayIDConnectionsNotFound() *GetVpnGatewaysVpnGatewayIDConnectionsNotFound {
	return &GetVpnGatewaysVpnGatewayIDConnectionsNotFound{}
}

/*GetVpnGatewaysVpnGatewayIDConnectionsNotFound handles this case with default header values.

A VPN gateway with the specified identifier could not be found.
*/
type GetVpnGatewaysVpnGatewayIDConnectionsNotFound struct {
	Payload *models.Riaaserror
}

func (o *GetVpnGatewaysVpnGatewayIDConnectionsNotFound) Error() string {
	return fmt.Sprintf("[GET /vpn_gateways/{vpn_gateway_id}/connections][%d] getVpnGatewaysVpnGatewayIdConnectionsNotFound  %+v", 404, o.Payload)
}

func (o *GetVpnGatewaysVpnGatewayIDConnectionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
