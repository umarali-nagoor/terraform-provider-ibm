// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PostIpsecPoliciesReader is a Reader for the PostIpsecPolicies structure.
type PostIpsecPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpsecPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostIpsecPoliciesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostIpsecPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostIpsecPoliciesCreated creates a PostIpsecPoliciesCreated with default headers values
func NewPostIpsecPoliciesCreated() *PostIpsecPoliciesCreated {
	return &PostIpsecPoliciesCreated{}
}

/*PostIpsecPoliciesCreated handles this case with default header values.

The IPsec policy was created successfully.
*/
type PostIpsecPoliciesCreated struct {
	Payload *models.IpsecPolicy
}

func (o *PostIpsecPoliciesCreated) Error() string {
	return fmt.Sprintf("[POST /ipsec_policies][%d] postIpsecPoliciesCreated  %+v", 201, o.Payload)
}

func (o *PostIpsecPoliciesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpsecPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIpsecPoliciesBadRequest creates a PostIpsecPoliciesBadRequest with default headers values
func NewPostIpsecPoliciesBadRequest() *PostIpsecPoliciesBadRequest {
	return &PostIpsecPoliciesBadRequest{}
}

/*PostIpsecPoliciesBadRequest handles this case with default header values.

An invalid IPsec policy template was provided.
*/
type PostIpsecPoliciesBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PostIpsecPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[POST /ipsec_policies][%d] postIpsecPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *PostIpsecPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
