// Code generated by go-swagger; DO NOT EDIT.

package v_p_naa_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams creates a new GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams object
// with the default values initialized.
func NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams() *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	var ()
	return &GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithTimeout creates a new GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithTimeout(timeout time.Duration) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	var ()
	return &GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams{

		timeout: timeout,
	}
}

// NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithContext creates a new GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithContext(ctx context.Context) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	var ()
	return &GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams{

		Context: ctx,
	}
}

// NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithHTTPClient creates a new GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParamsWithHTTPClient(client *http.Client) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	var ()
	return &GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams{
		HTTPClient: client,
	}
}

/*GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams contains all the parameters to send to the API endpoint
for the get vpn gateways vpn gateway ID connections ID local cidrs operation typically these are written to a http.Request
*/
type GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams struct {

	/*Generation
	  The infrastructure generation for the request.

	*/
	Generation int64
	/*ID
	  The VPN connection identifier

	*/
	ID string
	/*Version
	  Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version.

	*/
	Version string
	/*VpnGatewayID
	  The VPN gateway identifier

	*/
	VpnGatewayID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithTimeout(timeout time.Duration) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithContext(ctx context.Context) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithHTTPClient(client *http.Client) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGeneration adds the generation to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithGeneration(generation int64) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetGeneration(generation)
	return o
}

// SetGeneration adds the generation to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetGeneration(generation int64) {
	o.Generation = generation
}

// WithID adds the id to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithID(id string) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetID(id string) {
	o.ID = id
}

// WithVersion adds the version to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithVersion(version string) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetVersion(version string) {
	o.Version = version
}

// WithVpnGatewayID adds the vpnGatewayID to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WithVpnGatewayID(vpnGatewayID string) *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams {
	o.SetVpnGatewayID(vpnGatewayID)
	return o
}

// SetVpnGatewayID adds the vpnGatewayId to the get vpn gateways vpn gateway ID connections ID local cidrs params
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) SetVpnGatewayID(vpnGatewayID string) {
	o.VpnGatewayID = vpnGatewayID
}

// WriteToRequest writes these params to a swagger request
func (o *GetVpnGatewaysVpnGatewayIDConnectionsIDLocalCidrsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param generation
	qrGeneration := o.Generation
	qGeneration := swag.FormatInt64(qrGeneration)
	if qGeneration != "" {
		if err := r.SetQueryParam("generation", qGeneration); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// query param version
	qrVersion := o.Version
	qVersion := qrVersion
	if qVersion != "" {
		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	// path param vpn_gateway_id
	if err := r.SetPathParam("vpn_gateway_id", o.VpnGatewayID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
