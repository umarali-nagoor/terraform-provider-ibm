// Code generated by go-swagger; DO NOT EDIT.

package l_baas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchLoadBalancersIDPoolsPoolIDReader is a Reader for the PatchLoadBalancersIDPoolsPoolID structure.
type PatchLoadBalancersIDPoolsPoolIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLoadBalancersIDPoolsPoolIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchLoadBalancersIDPoolsPoolIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchLoadBalancersIDPoolsPoolIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchLoadBalancersIDPoolsPoolIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchLoadBalancersIDPoolsPoolIDOK creates a PatchLoadBalancersIDPoolsPoolIDOK with default headers values
func NewPatchLoadBalancersIDPoolsPoolIDOK() *PatchLoadBalancersIDPoolsPoolIDOK {
	return &PatchLoadBalancersIDPoolsPoolIDOK{}
}

/*PatchLoadBalancersIDPoolsPoolIDOK handles this case with default header values.

The pool update request was accepted.
*/
type PatchLoadBalancersIDPoolsPoolIDOK struct {
	Payload *models.Pool
}

func (o *PatchLoadBalancersIDPoolsPoolIDOK) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/pools/{pool_id}][%d] patchLoadBalancersIdPoolsPoolIdOK  %+v", 200, o.Payload)
}

func (o *PatchLoadBalancersIDPoolsPoolIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDPoolsPoolIDBadRequest creates a PatchLoadBalancersIDPoolsPoolIDBadRequest with default headers values
func NewPatchLoadBalancersIDPoolsPoolIDBadRequest() *PatchLoadBalancersIDPoolsPoolIDBadRequest {
	return &PatchLoadBalancersIDPoolsPoolIDBadRequest{}
}

/*PatchLoadBalancersIDPoolsPoolIDBadRequest handles this case with default header values.

An invalid pool template was provided.
*/
type PatchLoadBalancersIDPoolsPoolIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDPoolsPoolIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/pools/{pool_id}][%d] patchLoadBalancersIdPoolsPoolIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLoadBalancersIDPoolsPoolIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDPoolsPoolIDNotFound creates a PatchLoadBalancersIDPoolsPoolIDNotFound with default headers values
func NewPatchLoadBalancersIDPoolsPoolIDNotFound() *PatchLoadBalancersIDPoolsPoolIDNotFound {
	return &PatchLoadBalancersIDPoolsPoolIDNotFound{}
}

/*PatchLoadBalancersIDPoolsPoolIDNotFound handles this case with default header values.

A pool with the specified identifier could not be found.
*/
type PatchLoadBalancersIDPoolsPoolIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDPoolsPoolIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/pools/{pool_id}][%d] patchLoadBalancersIdPoolsPoolIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLoadBalancersIDPoolsPoolIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
