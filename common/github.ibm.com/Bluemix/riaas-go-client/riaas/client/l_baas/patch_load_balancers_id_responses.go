// Code generated by go-swagger; DO NOT EDIT.

package l_baas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchLoadBalancersIDReader is a Reader for the PatchLoadBalancersID structure.
type PatchLoadBalancersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLoadBalancersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchLoadBalancersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchLoadBalancersIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchLoadBalancersIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchLoadBalancersIDOK creates a PatchLoadBalancersIDOK with default headers values
func NewPatchLoadBalancersIDOK() *PatchLoadBalancersIDOK {
	return &PatchLoadBalancersIDOK{}
}

/*PatchLoadBalancersIDOK handles this case with default header values.

The load balancer provision request was accepted.
*/
type PatchLoadBalancersIDOK struct {
	Payload *models.LoadBalancer
}

func (o *PatchLoadBalancersIDOK) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}][%d] patchLoadBalancersIdOK  %+v", 200, o.Payload)
}

func (o *PatchLoadBalancersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoadBalancer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDBadRequest creates a PatchLoadBalancersIDBadRequest with default headers values
func NewPatchLoadBalancersIDBadRequest() *PatchLoadBalancersIDBadRequest {
	return &PatchLoadBalancersIDBadRequest{}
}

/*PatchLoadBalancersIDBadRequest handles this case with default header values.

An invalid load balancer template was provided.
*/
type PatchLoadBalancersIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}][%d] patchLoadBalancersIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLoadBalancersIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDNotFound creates a PatchLoadBalancersIDNotFound with default headers values
func NewPatchLoadBalancersIDNotFound() *PatchLoadBalancersIDNotFound {
	return &PatchLoadBalancersIDNotFound{}
}

/*PatchLoadBalancersIDNotFound handles this case with default header values.

A load balancer with the specified identifier could not be found.
*/
type PatchLoadBalancersIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}][%d] patchLoadBalancersIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLoadBalancersIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
