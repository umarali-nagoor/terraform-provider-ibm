// Code generated by go-swagger; DO NOT EDIT.

package l_baas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchLoadBalancersIDListenersListenerIDReader is a Reader for the PatchLoadBalancersIDListenersListenerID structure.
type PatchLoadBalancersIDListenersListenerIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLoadBalancersIDListenersListenerIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchLoadBalancersIDListenersListenerIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchLoadBalancersIDListenersListenerIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchLoadBalancersIDListenersListenerIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchLoadBalancersIDListenersListenerIDOK creates a PatchLoadBalancersIDListenersListenerIDOK with default headers values
func NewPatchLoadBalancersIDListenersListenerIDOK() *PatchLoadBalancersIDListenersListenerIDOK {
	return &PatchLoadBalancersIDListenersListenerIDOK{}
}

/*PatchLoadBalancersIDListenersListenerIDOK handles this case with default header values.

The listener update request was accepted.
*/
type PatchLoadBalancersIDListenersListenerIDOK struct {
	Payload *models.Listener
}

func (o *PatchLoadBalancersIDListenersListenerIDOK) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/listeners/{listener_id}][%d] patchLoadBalancersIdListenersListenerIdOK  %+v", 200, o.Payload)
}

func (o *PatchLoadBalancersIDListenersListenerIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Listener)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDListenersListenerIDBadRequest creates a PatchLoadBalancersIDListenersListenerIDBadRequest with default headers values
func NewPatchLoadBalancersIDListenersListenerIDBadRequest() *PatchLoadBalancersIDListenersListenerIDBadRequest {
	return &PatchLoadBalancersIDListenersListenerIDBadRequest{}
}

/*PatchLoadBalancersIDListenersListenerIDBadRequest handles this case with default header values.

An invalid listener template was provided.
*/
type PatchLoadBalancersIDListenersListenerIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDListenersListenerIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/listeners/{listener_id}][%d] patchLoadBalancersIdListenersListenerIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLoadBalancersIDListenersListenerIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLoadBalancersIDListenersListenerIDNotFound creates a PatchLoadBalancersIDListenersListenerIDNotFound with default headers values
func NewPatchLoadBalancersIDListenersListenerIDNotFound() *PatchLoadBalancersIDListenersListenerIDNotFound {
	return &PatchLoadBalancersIDListenersListenerIDNotFound{}
}

/*PatchLoadBalancersIDListenersListenerIDNotFound handles this case with default header values.

A load balancer with the specified identifier could not be found.
*/
type PatchLoadBalancersIDListenersListenerIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchLoadBalancersIDListenersListenerIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /load_balancers/{id}/listeners/{listener_id}][%d] patchLoadBalancersIdListenersListenerIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLoadBalancersIDListenersListenerIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
