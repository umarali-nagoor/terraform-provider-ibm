// Code generated by go-swagger; DO NOT EDIT.

package v_p_cs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// ListVpcRoutesReader is a Reader for the ListVpcRoutes structure.
type ListVpcRoutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVpcRoutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVpcRoutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewListVpcRoutesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListVpcRoutesOK creates a ListVpcRoutesOK with default headers values
func NewListVpcRoutesOK() *ListVpcRoutesOK {
	return &ListVpcRoutesOK{}
}

/*ListVpcRoutesOK handles this case with default header values.

The routes were retrieved successfully.
*/
type ListVpcRoutesOK struct {
	Payload *models.RouteCollection
}

func (o *ListVpcRoutesOK) Error() string {
	return fmt.Sprintf("[GET /vpcs/{vpc_id}/routes][%d] listVpcRoutesOK  %+v", 200, o.Payload)
}

func (o *ListVpcRoutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVpcRoutesNotFound creates a ListVpcRoutesNotFound with default headers values
func NewListVpcRoutesNotFound() *ListVpcRoutesNotFound {
	return &ListVpcRoutesNotFound{}
}

/*ListVpcRoutesNotFound handles this case with default header values.

The specified VPC could not be found.
*/
type ListVpcRoutesNotFound struct {
	Payload *models.Riaaserror
}

func (o *ListVpcRoutesNotFound) Error() string {
	return fmt.Sprintf("[GET /vpcs/{vpc_id}/routes][%d] listVpcRoutesNotFound  %+v", 404, o.Payload)
}

func (o *ListVpcRoutesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
