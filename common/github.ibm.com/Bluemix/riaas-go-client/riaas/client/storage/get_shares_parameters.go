// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSharesParams creates a new GetSharesParams object
// with the default values initialized.
func NewGetSharesParams() *GetSharesParams {
	var ()
	return &GetSharesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSharesParamsWithTimeout creates a new GetSharesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSharesParamsWithTimeout(timeout time.Duration) *GetSharesParams {
	var ()
	return &GetSharesParams{

		timeout: timeout,
	}
}

// NewGetSharesParamsWithContext creates a new GetSharesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSharesParamsWithContext(ctx context.Context) *GetSharesParams {
	var ()
	return &GetSharesParams{

		Context: ctx,
	}
}

// NewGetSharesParamsWithHTTPClient creates a new GetSharesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSharesParamsWithHTTPClient(client *http.Client) *GetSharesParams {
	var ()
	return &GetSharesParams{
		HTTPClient: client,
	}
}

/*GetSharesParams contains all the parameters to send to the API endpoint
for the get shares operation typically these are written to a http.Request
*/
type GetSharesParams struct {

	/*Generation
	  The infrastructure generation for the request.

	*/
	Generation int64
	/*ResourceGroupID
	  Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers

	*/
	ResourceGroupID *string
	/*Version
	  Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version.

	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get shares params
func (o *GetSharesParams) WithTimeout(timeout time.Duration) *GetSharesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shares params
func (o *GetSharesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shares params
func (o *GetSharesParams) WithContext(ctx context.Context) *GetSharesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shares params
func (o *GetSharesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shares params
func (o *GetSharesParams) WithHTTPClient(client *http.Client) *GetSharesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shares params
func (o *GetSharesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGeneration adds the generation to the get shares params
func (o *GetSharesParams) WithGeneration(generation int64) *GetSharesParams {
	o.SetGeneration(generation)
	return o
}

// SetGeneration adds the generation to the get shares params
func (o *GetSharesParams) SetGeneration(generation int64) {
	o.Generation = generation
}

// WithResourceGroupID adds the resourceGroupID to the get shares params
func (o *GetSharesParams) WithResourceGroupID(resourceGroupID *string) *GetSharesParams {
	o.SetResourceGroupID(resourceGroupID)
	return o
}

// SetResourceGroupID adds the resourceGroupId to the get shares params
func (o *GetSharesParams) SetResourceGroupID(resourceGroupID *string) {
	o.ResourceGroupID = resourceGroupID
}

// WithVersion adds the version to the get shares params
func (o *GetSharesParams) WithVersion(version string) *GetSharesParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get shares params
func (o *GetSharesParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetSharesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param generation
	qrGeneration := o.Generation
	qGeneration := swag.FormatInt64(qrGeneration)
	if qGeneration != "" {
		if err := r.SetQueryParam("generation", qGeneration); err != nil {
			return err
		}
	}

	if o.ResourceGroupID != nil {

		// query param resource_group.id
		var qrResourceGroupID string
		if o.ResourceGroupID != nil {
			qrResourceGroupID = *o.ResourceGroupID
		}
		qResourceGroupID := qrResourceGroupID
		if qResourceGroupID != "" {
			if err := r.SetQueryParam("resource_group.id", qResourceGroupID); err != nil {
				return err
			}
		}

	}

	// query param version
	qrVersion := o.Version
	qVersion := qrVersion
	if qVersion != "" {
		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
