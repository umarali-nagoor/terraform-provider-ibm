// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// DeleteVolumesVolumeIDSnapshotsIDReader is a Reader for the DeleteVolumesVolumeIDSnapshotsID structure.
type DeleteVolumesVolumeIDSnapshotsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVolumesVolumeIDSnapshotsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteVolumesVolumeIDSnapshotsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteVolumesVolumeIDSnapshotsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteVolumesVolumeIDSnapshotsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteVolumesVolumeIDSnapshotsIDNoContent creates a DeleteVolumesVolumeIDSnapshotsIDNoContent with default headers values
func NewDeleteVolumesVolumeIDSnapshotsIDNoContent() *DeleteVolumesVolumeIDSnapshotsIDNoContent {
	return &DeleteVolumesVolumeIDSnapshotsIDNoContent{}
}

/*DeleteVolumesVolumeIDSnapshotsIDNoContent handles this case with default header values.

error
*/
type DeleteVolumesVolumeIDSnapshotsIDNoContent struct {
	Payload *models.Riaaserror
}

func (o *DeleteVolumesVolumeIDSnapshotsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{volume_id}/snapshots/{id}][%d] deleteVolumesVolumeIdSnapshotsIdNoContent  %+v", 204, o.Payload)
}

func (o *DeleteVolumesVolumeIDSnapshotsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumesVolumeIDSnapshotsIDNotFound creates a DeleteVolumesVolumeIDSnapshotsIDNotFound with default headers values
func NewDeleteVolumesVolumeIDSnapshotsIDNotFound() *DeleteVolumesVolumeIDSnapshotsIDNotFound {
	return &DeleteVolumesVolumeIDSnapshotsIDNotFound{}
}

/*DeleteVolumesVolumeIDSnapshotsIDNotFound handles this case with default header values.

error
*/
type DeleteVolumesVolumeIDSnapshotsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *DeleteVolumesVolumeIDSnapshotsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{volume_id}/snapshots/{id}][%d] deleteVolumesVolumeIdSnapshotsIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVolumesVolumeIDSnapshotsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumesVolumeIDSnapshotsIDInternalServerError creates a DeleteVolumesVolumeIDSnapshotsIDInternalServerError with default headers values
func NewDeleteVolumesVolumeIDSnapshotsIDInternalServerError() *DeleteVolumesVolumeIDSnapshotsIDInternalServerError {
	return &DeleteVolumesVolumeIDSnapshotsIDInternalServerError{}
}

/*DeleteVolumesVolumeIDSnapshotsIDInternalServerError handles this case with default header values.

error
*/
type DeleteVolumesVolumeIDSnapshotsIDInternalServerError struct {
	Payload *models.Riaaserror
}

func (o *DeleteVolumesVolumeIDSnapshotsIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /volumes/{volume_id}/snapshots/{id}][%d] deleteVolumesVolumeIdSnapshotsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteVolumesVolumeIDSnapshotsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
