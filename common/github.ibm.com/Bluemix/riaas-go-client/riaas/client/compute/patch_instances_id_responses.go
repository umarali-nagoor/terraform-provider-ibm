// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchInstancesIDReader is a Reader for the PatchInstancesID structure.
type PatchInstancesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchInstancesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchInstancesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchInstancesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchInstancesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchInstancesIDOK creates a PatchInstancesIDOK with default headers values
func NewPatchInstancesIDOK() *PatchInstancesIDOK {
	return &PatchInstancesIDOK{}
}

/*PatchInstancesIDOK handles this case with default header values.

dummy
*/
type PatchInstancesIDOK struct {
	Payload *models.Instance
}

func (o *PatchInstancesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}][%d] patchInstancesIdOK  %+v", 200, o.Payload)
}

func (o *PatchInstancesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Instance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstancesIDBadRequest creates a PatchInstancesIDBadRequest with default headers values
func NewPatchInstancesIDBadRequest() *PatchInstancesIDBadRequest {
	return &PatchInstancesIDBadRequest{}
}

/*PatchInstancesIDBadRequest handles this case with default header values.

error
*/
type PatchInstancesIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchInstancesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}][%d] patchInstancesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchInstancesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstancesIDNotFound creates a PatchInstancesIDNotFound with default headers values
func NewPatchInstancesIDNotFound() *PatchInstancesIDNotFound {
	return &PatchInstancesIDNotFound{}
}

/*PatchInstancesIDNotFound handles this case with default header values.

error
*/
type PatchInstancesIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchInstancesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /instances/{id}][%d] patchInstancesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchInstancesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchInstancesIDBody patch instances ID body
swagger:model PatchInstancesIDBody
*/
type PatchInstancesIDBody struct {

	// The user-defined name for this network ACL
	// Pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
	Name string `json:"name,omitempty"`

	// profile
	Profile *PatchInstancesIDParamsBodyProfile `json:"profile,omitempty"`
}

// Validate validates this patch instances ID body
func (o *PatchInstancesIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProfile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchInstancesIDBody) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"name", "body", string(o.Name), `^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$`); err != nil {
		return err
	}

	return nil
}

func (o *PatchInstancesIDBody) validateProfile(formats strfmt.Registry) error {

	if swag.IsZero(o.Profile) { // not required
		return nil
	}

	if o.Profile != nil {
		if err := o.Profile.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "profile")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchInstancesIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchInstancesIDBody) UnmarshalBinary(b []byte) error {
	var res PatchInstancesIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchInstancesIDParamsBodyProfile reference
swagger:model PatchInstancesIDParamsBodyProfile
*/
type PatchInstancesIDParamsBodyProfile struct {

	// The CRN for this profile
	Crn string `json:"crn,omitempty"`

	// The user-defined name for this resource
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	Name string `json:"name,omitempty"`
}

// Validate validates this patch instances ID params body profile
func (o *PatchInstancesIDParamsBodyProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchInstancesIDParamsBodyProfile) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.Pattern("body"+"."+"profile"+"."+"name", "body", string(o.Name), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchInstancesIDParamsBodyProfile) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchInstancesIDParamsBodyProfile) UnmarshalBinary(b []byte) error {
	var res PatchInstancesIDParamsBodyProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
