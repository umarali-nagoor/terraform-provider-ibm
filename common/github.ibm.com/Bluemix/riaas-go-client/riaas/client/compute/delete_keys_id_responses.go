// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// DeleteKeysIDReader is a Reader for the DeleteKeysID structure.
type DeleteKeysIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKeysIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteKeysIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteKeysIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteKeysIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteKeysIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteKeysIDNoContent creates a DeleteKeysIDNoContent with default headers values
func NewDeleteKeysIDNoContent() *DeleteKeysIDNoContent {
	return &DeleteKeysIDNoContent{}
}

/*DeleteKeysIDNoContent handles this case with default header values.

The key was deleted successfully.
*/
type DeleteKeysIDNoContent struct {
}

func (o *DeleteKeysIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeysIdNoContent ", 204)
}

func (o *DeleteKeysIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKeysIDBadRequest creates a DeleteKeysIDBadRequest with default headers values
func NewDeleteKeysIDBadRequest() *DeleteKeysIDBadRequest {
	return &DeleteKeysIDBadRequest{}
}

/*DeleteKeysIDBadRequest handles this case with default header values.

error
*/
type DeleteKeysIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *DeleteKeysIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeysIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteKeysIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKeysIDNotFound creates a DeleteKeysIDNotFound with default headers values
func NewDeleteKeysIDNotFound() *DeleteKeysIDNotFound {
	return &DeleteKeysIDNotFound{}
}

/*DeleteKeysIDNotFound handles this case with default header values.

error
*/
type DeleteKeysIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *DeleteKeysIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeysIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKeysIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKeysIDInternalServerError creates a DeleteKeysIDInternalServerError with default headers values
func NewDeleteKeysIDInternalServerError() *DeleteKeysIDInternalServerError {
	return &DeleteKeysIDInternalServerError{}
}

/*DeleteKeysIDInternalServerError handles this case with default header values.

error
*/
type DeleteKeysIDInternalServerError struct {
	Payload *models.Riaaserror
}

func (o *DeleteKeysIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeysIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteKeysIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
