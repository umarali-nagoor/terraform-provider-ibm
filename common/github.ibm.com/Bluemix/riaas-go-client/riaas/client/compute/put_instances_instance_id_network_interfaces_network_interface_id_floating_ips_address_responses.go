// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressReader is a Reader for the PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddress structure.
type PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated creates a PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated with default headers values
func NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated() *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated {
	return &PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated{}
}

/*PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated handles this case with default header values.

The floating IP was successfully associated with the network interface.
*/
type PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated struct {
	Payload *models.FloatingIP
}

func (o *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated) Error() string {
	return fmt.Sprintf("[PUT /instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{address}][%d] putInstancesInstanceIdNetworkInterfacesNetworkInterfaceIdFloatingIpsAddressCreated  %+v", 201, o.Payload)
}

func (o *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FloatingIP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest creates a PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest with default headers values
func NewPutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest() *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest {
	return &PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest{}
}

/*PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest handles this case with default header values.

The specified floating IP could not be associated with the specified network interface.
*/
type PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest) Error() string {
	return fmt.Sprintf("[PUT /instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{address}][%d] putInstancesInstanceIdNetworkInterfacesNetworkInterfaceIdFloatingIpsAddressBadRequest  %+v", 400, o.Payload)
}

func (o *PutInstancesInstanceIDNetworkInterfacesNetworkInterfaceIDFloatingIpsAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
