
basePath: /v1
info: {title: Regional API, version: 0.3.0}
parameters:
  future_version:
    description: >-
      An internal-only future_version query parameter allows any date string to be accepted,
      enabling testing of features still under development.
    in: query
    name: future_version
    type: boolean
  generation:
    description: >-
      The infrastructure generation for the request. For the API behavior
      documented here, use `1` or `2`.
    in: query
    name: generation
    required: true
    type: integer
  limit:
    default: 50
    description: The number of resources to return on a page
    format: int32
    in: query
    maximum: 100
    minimum: 1
    name: limit
    required: false
    type: integer
  listenerId:
    description: The listener identifier
    in: path
    name: listener_id
    required: true
    type: string
  loadBalancerId:
    description: The load balancer identifier
    in: path
    name: load_balancer_id
    required: true
    type: string
  id:
    in: path
    name: id
    required: true
    type: string
  instanceId:
    description: The instance identifier
    in: path
    name: instance_id
    required: true
    type: string
  networkACLId:
    description: The network ACL identifier
    in: path
    name: network_acl_id
    required: true
    type: string
  networkInterfaceId:
    description: The network interface identifier
    in: path
    name: network_interface_id
    required: true
    type: string
  policyId:
    description: The policy identifier
    in: path
    name: policy_id
    required: true
    type: string
  poolId:
    description: The pool identifier
    in: path
    name: pool_id
    required: true
    type: string
  securityGroupId:
    description: The security group identifier
    in: path
    name: security_group_id
    required: true
    type: string
  start:
    description: A server-supplied token determining what resource to start the page on
    in: query
    name: start
    required: false
    type: string
  version:
    description:
      Requests the version of the API as of a date in the format `YYYY-MM-DD`.
      Any date up to the current date may be provided. Specify the current date to request the
      latest version.
    in: query
    name: version
    required: true
    type: string
  vpcId:
    description: The VPC identifier
    in: path
    name: vpc_id
    required: true
    type: string
  vpcRouteIdUnqualified:
    description: The route identifier
    in: path
    name: id
    required: true
    type: string
  vpnGatewayConnectionCidrId:
    description: The VPN connection identifier
    in: path
    name: vpn_gateway_connection_cidr_id
    required: true
    type: string
  vpnGatewayConnectionId:
    description: The VPN connection identifier
    in: path
    name: vpn_gateway_connection_id
    required: true
    type: string
  vpnGatewayId:
    description: The VPN gateway identifier
    in: path
    name: vpn_gateway_id
    required: true
    type: string
  zone:
    description: Filters the collection to resources within the specified zone
    in: query
    name: zone.name
    required: false
    type: string
definitions:
  instance_network_interface:
    properties:
      created_at: {description: The date and time that the network interface was created,
        format: date-time, type: string}
      crn: {description: The CRN for this network interface, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
        format: crn, type: string}
      floating_ips:
        description: Array of references to floating IPs associated with this network
          interface
        items: {$ref: '#/definitions/resource_reference'}
        type: array
        x-omitempty: true
      href: {description: The URL for this network interface, example: 'http://us-south.iaas.cloud.ibm.com/v1/instances/1e09281b-f177-46fb-baf1-bc152b2e391a/network_interfaces/10c02d81-0ecb-4dc5-897d-28392913b81e',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this network interface, example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this network interface, example: my-network-interface,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      port_speed: {description: The network interface port speed in Mbps, example: 10000,
        type: integer}
      primary_ipv4_address: {description: The primary IPv4 address, example: 10.0.0.5,
        type: string}
      secondary_addresses:
        description: Collection seconary IP addresses
        example: [10.0.0.6, '2001:db8:85a3::8a2e:370:7335']
        items: {description: A secondary IP address, type: string}
        type: array
        x-omitempty: true
      security_groups:
        description: Collection of security groups
        items: {$ref: '#/definitions/resource_reference'}
        type: array
        x-omitempty: true
      status:
        description: The status of the volume
        enum: [available, failed, pending]
        example: available
        type: string
      subnet: {$ref: '#/definitions/resource_reference'}
      type:
        description: The type of this network interface as it relates to a instance
        enum: [primary, secondary]
        example: primary
        type: string
    title: NetworkInterface
    type: object
  InstanceInitialization:
    properties:
      keys:
        type: "array"
        description: "Collection of keys used at initialization of instance"
        items:
          properties:
            crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
              format: crn, type: string}
            fingerprint: {description: The SHA256 fingerprint of the public
                key, example: yxavE4CIOL2NlsqcurRO3xGjkP6m/0mp8ugojH5yxlY, type: string}
            id: {description: The unique identifier for this key, example: a6b1a881-2ce8-41a3-80fc-36316a73f803,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            name: {description: The user-defined name for this key, example: my-key,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          title: KeyIdentityByFingerprint
          type: object
      password:
        title: "InstanceEncryptedPassword"
        type: object
        properties:
          encryption_key:
            properties:
              crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
                format: crn, type: string}
              fingerprint: {description: The SHA256 fingerprint of the public
                  key, example: yxavE4CIOL2NlsqcurRO3xGjkP6m/0mp8ugojH5yxlY, type: string}
              id: {description: The unique identifier for this key, example: a6b1a881-2ce8-41a3-80fc-36316a73f803,
                format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                type: string}
              name: {description: The user-defined name for this key, example: my-key,
                format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            title: KeyIdentityByFingerprint
            type: object
          encrypted_password:
            type: "string"
            format: "byte"
            description: "The administrator password at initialization, encrypted using the first initialized SSH key"
            example: "qQ+/YEApnl1ZtEgIrfprzb065307thTkzlnLqL5ICpesdbBN03dyCQ=="
    title: initialization
    type: object
  NameReference:
    description: The name identity of the resource
    properties:
      name: {description: The name for this zone, example: us-south-1, format: name,
        pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
    title: NameIdentity
    type: object
  Next:
    description: A reference to the next page of resources; this reference is included
      for all pages except the last page
    properties:
      href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/flavors?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$', 
        type: string}
    required: [href]
    type: object
  instance_profile:
    properties:
      crn: {description: The CRN for this instanceprofile, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: crn, type: string}
      family: {example: balanced, type: string}
      href: {description: The URL for this instance profile, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      name: {description: The user-defined name for this instance profile, example: my-snapshot,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
    title: instancePackage
    type: object
  instance:
    properties:
      boot_volume_attachment: {$ref: '#/definitions/volume_attachment_reference'}
      vcpu:
        properties:
          architecture:
            description: The VCPU architecture
            example: amd64
            type: string
          count:
            description: The number of VCPUs assigned to the instance
            example: 4
            minimum: 1
            type: integer
          # workaround for https://jiracloud.swg.usma.ibm.com:8443/browse/RCS-1221
          cores:
            description: The number of VCPUs assigned to the instance
            example: 4
            minimum: 1
            type: integer
        required:
          - architecture
          - count
        title: VCPU
      gpu:
        properties:
          model:
            description: The model number of the GPU
            enum: [k40, k80]
            type: string
          cores: {description: The number of logical GPU cores per GPU, minimum: 1,
            type: integer}
          count: {description: The number of GPUs, minimum: 1,
            type: integer}
          manufacturer:
            description: The manufacturer of the GPU
            enum: [nvidia]
            type: string            
          memory: {description: The amount of memory in megabytes,
            minimum: 512, maximum: 524288, multipleOf: 256, type: integer}
        title: GPU
      created_at: {description: The date and time that the instance was created, format: date-time,
        type: string}
      crn: {description: The CRN for this instance, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::instance:1e09281b-f177-46fb-baf1-bc152b2e391a',
        format: crn, type: string}
      href: {description: The URL for this instance, example: 'http://us-south.iaas.cloud.ibm.com/v1/instances/1e09281b-f177-46fb-baf1-bc152b2e391a',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this instance, example: 1e09281b-f177-46fb-baf1-bc152b2e391a,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      image: {$ref: '#/definitions/resource_reference'}
      memory: {description: The amount of memory in megabytes, maximum: 524288, minimum: 512,
        multipleOf: 256, type: integer}
      name: {description: The user-defined name for this instance, example: my-instance,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      network_interfaces:
        description: Collection of the instance's network interfaces, not including
          the primary network interface
        items: {$ref: '#/definitions/network_interface_reference'}
        type: array
        x-omitempty: true
      primary_network_interface: {$ref: '#/definitions/network_interface_reference'}
      profile: {$ref: '#/definitions/resource_reference'}
      resource_group: {$ref: '#/definitions/resource_reference'}
      status:
        description: The status of the instance
        enum: [stopped, starting, running, pausing, paused, resuming, stopping, restarting]
        type: string
      volume_attachments:
        description: Collection of volume interfaces
        items: {$ref: '#/definitions/volume_attachment_reference'}
        type: array
        x-omitempty: true
      vpc: {$ref: '#/definitions/resource_reference'}
      zone:
        description: The zone the instance resides in
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1, format: name,
            pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneReference
        type: object
    title: instance
    type: object
  instance_volume_attachment:
    properties:
      delete_volume_on_instance_delete:
        description: If set to true, when deleting the instance the volume will also be deleted
        type: boolean
      created_at: {description: The date and time that the volume was attached, format: date-time,
        type: string}
      crn: {description: The CRN for this volume, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::volume-interfacs:82cbf856-9cbb-45fb-b62f-d7bcef32399a',
        format: crn, type: string}
      href: {description: The URL for this volume interface, example: 'http://us-south.iaas.cloud.ibm.com/v1/instances/1e09281b-f177-46fb-baf1-bc152b2e391a/volume_attachments/82cbf856-9cbb-45fb-b62f-d7bcef32399a',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this volume interface, example: 82cbf856-9cbb-45fb-b62f-d7bcef32399a,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this volume interface, example: my-volume-interface,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      status:
        enum: [attaching, attached, detaching]
        type: string
      type:
        description: The type of volume attachment
        enum: [boot, data]
        type: string
      volume: {$ref: '#/definitions/resource_reference'}
    title: VolumeAttachment
    type: object
  instance_action:
    properties:
      completed_at: {description: The date and time that the action was completed,
        format: date-time, type: string}
      created_at: {description: The date and time that the action was created, format: date-time,
        type: string}
      href: {description: The URL for this action, example: 'http://us-south.iaas.cloud.ibm.com/v1/instances/1e09281b-f177-46fb-baf1-bc152b2e391a/actions/109a1b6e-1242-4de1-be44-38705e9474ed',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The identifier for this action, example: 109a1b6e-1242-4de1-be44-38705e9474ed,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      started_at: {description: The date and time that the action was started, format: date-time,
        type: string}
      status:
        description: The current status of this action
        enum: [pending, running, failed, completed]
        type: string
      type:
        description: The type of action
        enum: [start, stop, reboot, reset]
        type: string
    title: instanceAction
    type: object
  LoadBalancerCollection:
    properties:
      first:
        properties:
          href:
            example: "https://us-south.iaas.cloud.ibm.com/v1/load_balancers?limit=20"
      next:
        description: A reference to the next page of resources; this reference
          is included for all pages except the last page
        properties:
          href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
      limit: {description: The maximum number of resources can be returned
                by the request, example: 20, format: int64, maximum: 100, minimum: 1,
              type: integer}
      load_balancers:
        type: "array"
        description: "Collection of load balancers"
        items:
          $ref: "#/definitions/LoadBalancer"
  LoadBalancer:
    properties:
      href: {description: The load balancer's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The load balancer's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The load balancer's user-defined name. Load balancer names must be unique. within the scope of a user account. Load balancer names are part of FQDN auto-assigned to the load balancer., example:  my-load-balancer,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this load balancer was created"     
      hostname:
        type: "string"
        description: "Fully qualified domain name assigned to this load balancer"
        example: "myloadbalancer-123456-us-south-1.lb.cloud.ibm.com"           
      is_public:
        type: "boolean"
        description: "The type of this load balancer, public or private"
        example: true
      listeners:
        type: "array"
        description: "The listeners of this load balancer"
        items:
          $ref: "#/definitions/ListenerReference"
      operating_status:
        type: "string"
        enum:
         - online
         - offline
        description: "The operating status of this load balancer"          
      pools:
        type: "array"
        description: "The pools of this load balancer"
        items:
          $ref: "#/definitions/PoolReference"
      private_ips:
        type: "array"
        description: "The private IP addresses assigned to this load balancer."
        items:
          $ref: "#/definitions/LoadBalancerIp"
      provisioning_status:
        type: "string"
        enum:
         - active
         - create_pending
         - update_pending
         - delete_pending
         - maintenance_pending
        description: "The provisioning status of this load balancer"
      public_ips:
        type: "array"
        description: "The public IP addresses assigned to this load balancer. These are applicable only for public load balancers."
        items:
          $ref: "#/definitions/LoadBalancerIp"        
      resource_group:
        $ref: "#/definitions/resource_reference"
      subnets:
        items:
          properties:
            crn: {description: The CRN for this subnet, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
              format: crn, type: string}
            id: {description: The unique identifier for this subnet
                , example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            name: {description: The user-defined name for this subnet
                , example: my-network-interface, format: name,
              pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: SubnetReference
        type: "array"
  ListenerReference:
    properties:
      href: {description: The listener's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The listener's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
  PoolReference:
    properties:
      href: {description: The pool's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',  
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The pool's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The pool's user-defined name, example:  my-pool,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
  LoadBalancerIp:
    title: 'LoadBalancerIp'
    type: 'object'
    properties:
      address:
        type: "string"
        description: "The IP address assigned to this load balancer"
        example: "192.168.10.5"
  
  LoadBalancerTemplate:
    properties:
      name: {description: The load balancer's user-defined name. Load balancer names must be unique. within the scope of a user account. Load balancer names are part of FQDN auto-assigned to the load balancer., example: my-load-balancer,
        format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
      subnets:
        type: "array"
        description: "The subnets to provision this load balancer"
        items:
          $ref: '#/definitions/SubnetIdentity'
      is_public:
        type: "boolean"
        description: "The type of this load balancer, public or private"
        x-omitempty: false
      listeners:
        type: "array"
        description: "The listeners of this load balancer"
        items:
          $ref: "#/definitions/ListenerTemplateWithPoolByName"
        x-omitempty: true
      pools:
        type: "array"
        description: "The pools of this load balancer"
        items:
          $ref: "#/definitions/PoolTemplate"
        x-omitempty: true
      resource_group:
        description: The resource group for this load balancer
        properties:
          id: {description: The unique identifier for this resource group, example: 56969d60-43e9-465c-883c-b9f7363e78e8,
            format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string} 
    required:
    - is_public
  SubnetIdentity:
    properties:
      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this resource, example: my-snapshot,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: crn, type: string}
    title: SubnetIdentity
    type: object
  ListenerTemplateWithPoolByName:
    properties:
      certificate_instance:
        properties:
          crn: {description: The ceritificate instance's CRN, example: crn:v1:bluemix:public:cloudcerts:us-south:a/123456:b8866ea4-b8df-467e-801a-da1db7e020bf:certificate:78ff9c4c97d013fb2a95b21dddde7758,
            format: crn, type: string}
      protocol:
        type: 'string'
        enum:
          - http
          - https
          - tcp
        description: 'The listener protocol.'
      port:
        type: 'integer'
        description: 'The listener port number.'
        minimum: 1
        maximum: 65535
        example: 443
      connection_limit:
        type: 'integer'
        description: 'The connection limit of the listener.'
        minimum: 1
        maximum: 15000
        example: 2000
      default_pool:
        properties:
          name: {description: The pool's user-defined name., example: my-pool,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
  PoolTemplate:
    properties:
      members:
        type: "array"
        items:
          $ref: '#/definitions/MemberTemplate'
        description: 'The backend server members of this pool.'
        x-omitempty: true
      name: {description: The name of the pool., example: my-prod-servers,
          format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
      protocol:
        type: 'string'
        enum:
          - http
          - tcp
        description: 'The pool protocol.'
      algorithm:
        type: 'string'
        enum:
          - round_robin
          - weighted_round_robin
          - least_connections
        description: 'The load balancing algorithm.'
      health_monitor:
        $ref: '#/definitions/HealthMonitorTemplate'
        description: 'The health monitor of this pool.'
      session_persistence:
        $ref: '#/definitions/SessionPersistenceTemplate'
        description: 'The session persistence of this pool.'
  MemberTemplate:
    properties:
      target:
        title: "MemberAddressTarget"
        type: "object"
        properties:
          address:
            type: 'string'
            description: 'The IP address of the pool member.'
            example: '192.168.100.5'
      port:
        type: 'integer'
        description: 'The port number of the application running in the server member.'
        minimum: 1
        maximum: 65535
        example: 80
      weight:
        type: 'integer'
        description: 'Weight of the server member. This takes effect only when the load balancing algorithm of its belonging pool is `weighted_round_robin`.'
        minimum: 1
        maximum: 100
        example: 50
  HealthMonitorTemplate:
    properties:
      delay:
        type: 'integer'
        description: 'The health check interval in seconds. Interval must be greater than timeout value.'
        minimum: 2
        maximum: 60
        example: 5
      max_retries:
        type: 'integer'
        description: 'The health check max retries.'
        minimum: 1
        maximum: 10
        example: 2
      timeout:
        type: 'integer'
        description: 'The health check timeout in seconds.'
        minimum: 1
        maximum: 59
        example: 2
      type:
        type: 'string'
        enum:
          - http
          - tcp
        description: 'The pool protocol.'
      port:
        type: 'integer'
        description: 'The health check port number'
        minimum: 1
        maximum: 65535
        example: 22     
      url_path:
        type: 'string'
        description: 'The health check url. This is applicable only to `http` type of health monitor.'
        example: '/'
  SessionPersistenceTemplate:
    properties:
      type:
        type: 'string'
        description: 'The session persistence type.'
        enum:
        - source_ip
        - http_cookie
        - app_cookie
      cookie_name:
        type: string
        description: 'Session persistence cookie name. This is applicable only to app_cookie type.'   
  LoadBalancerWithAddresses:
    properties:
      public_ips:
        type: "array"
        description: "The public IP addresses assigned to this load balancer. These are applicable only for public load balancers."
        items:
          $ref: "#/definitions/LoadBalancerIp"
      private_ips:
        type: "array"
        description: "The private IP addresses assigned to this load balancer."
        items:
          $ref: "#/definitions/LoadBalancerIp"
  LoadBalancerTemplatePatch:
    title: "LoadBalancerTemplatePatch"
    properties:
      name: {description: The load balancer's user-defined name. Load balancer names must be unique. within the scope of a user account. Load balancer names are part of FQDN auto-assigned to the load balancer., example: my-load-balancer,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
  ListenerCollection:
    title: "ListenerCollection"
    type: "object"
    required:
    - listeners
    properties:
      listeners:
        type: "array"
        description: "Collection of listeners"
        items:
          $ref: "#/definitions/Listener"
  Listener:
    properties:
      href: {description: The listener's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The listener's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this listener was created"
      default_pool:
        $ref: '#/definitions/PoolReference'
        description: "The default pool associated with the listener."
      provisioning_status:
        type: "string"
        enum:
        - active
        - create_pending
        - update_pending
        - delete_pending
        - maintenance_pending
        description: "The provisioning status of this listener"
      certificate_instance:
        properties:
          crn: {description: The ceritificate instance's CRN, example: 'crn:v1:bluemix:public:cloudcerts:us-south:a/123456:b8866ea4-b8df-467e-801a-da1db7e020bf:certificate:78ff9c4c97d013fb2a95b21dddde7758',
            format: crn, type: string}
        description: 'The certificate instance used for SSL termination. It is applicable only to `https` protocol.'
      protocol:
        type: 'string'
        enum:
          - http
          - https
          - tcp
        description: 'The listener protocol.'
      port:
        type: 'integer'
        description: 'The listener port number.'
        minimum: 1
        maximum: 65535
        example: 443
      policies:
        type: "array"
        description: "The list of policies of this listener"
        items:
          $ref: "#/definitions/ListenerPolicyReference"
      connection_limit:
        type: 'integer'
        description: 'The connection limit of the listener.'
        minimum: 1
        maximum: 15000
        example: 2000

  ListenerPolicyCollection:
    properties:
      policies: 
        type: "array"
        description: "Collection of policies"
        items:
          $ref: "#/definitions/ListenerPolicy"
  ListenerPolicy:
    properties:
      id: {description: The policys unique identifier., example: 70294e14-4e61-11e8-bcf4-0242ac110004, format: uuid, pattern: '^[-0-9a-z_]+$', type: string}
      href: {description: The listener policy's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/listeners/70294e14-4e61-11e8-bcf4-0242ac110004/policies/f3187486-7b27-4c79-990c-47d33c0e2278,
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      name: {description: The user-defined name for this policy, example: my-policy, format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
      priority:
        type: integer
        description: 'Priority of the policy. Lower value indicates higher priority.'
      target:
        $ref: '#/definitions/ListenerPolicyTargetReference'
        description: 'PoolReference is in the response if action is forward. ListenerPolicyRedirectUrl is in the response if action is redirect.'
      action:
        type: string
        description: 'The policy action.'
        enum:
          - forward
          - redirect
          - reject  
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this policy was created"
      provisioning_status:
        type: "string"
        enum:
         - active
         - create_pending
         - update_pending
         - delete_pending
         - maintenance_pending
         - failed
        description: "The provisioning status of this policy"
      rules:
        type: "array"
        description: "The rules of this policy"
        items:
          $ref: "#/definitions/ListenerPolicyRuleReference"
  ListenerPolicyRuleReference:
    properties:
      condition:
        type: string
        description: The condition of the rule.
        enum:
          - contains
          - equals
          - matches_regex 
      field: {description: HTTP header field. This is only applicable to "header" rule type., example: MY-APP-HEADER, type: string}
      type: 
        type: string
        description: 'The type of the rule.'
        enum:
          - path
          - hostname
          - header  
      value: {description: Value to be matched for rule condition, type: string}
      id: {description: The policy's unique identifier., example: 70294e14-4e61-11e8-bcf4-0242ac110004, format: id, pattern: '^[-0-9a-z_]+$', type: string}
      href: {description: The rule's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/listeners/70294e14-4e61-11e8-bcf4-0242ac110004/policies/f3187486-7b27-4c79-990c-47d33c0e2278/rules/873a84b0-84d6-49c6-8948-1fa527b25762,
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',type: string}

  ListenerPolicyRuleCollection:
    title: "ListenerPolicyRuleCollection"
    type: "object"
    required:
    - rules
    properties:
      rules:
        type: "array"
        description: "Collection of rules"
        items:
          $ref: "#/definitions/ListenerPolicyRule"
  ListenerPolicyRule:
    properties:
      id: {description: The rule's unique identifier., example: 70294e14-4e61-11e8-bcf4-0242ac110004, format: uuid, pattern: '^[-0-9a-z_]+$', type: string}
      href: {description: The rule's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/listeners/70294e14-4e61-11e8-bcf4-0242ac110004/policies/f3187486-7b27-4c79-990c-47d33c0e2278/rules/873a84b0-84d6-49c6-8948-1fa527b25762,
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$', type: string}
      name: {description: The user-defined name for this policy, example: my-policy, format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
      condition:
        type: string
        description: 'The condition of the rule.'
        enum:
          - contains
          - equals
          - matches_regex  
      field:
        type: string
        description: 'HTTP header field. This is only applicable to "header" rule type.'
      type:
        type: string
        description: 'The type of the rule.'
        enum:
          - header
          - hostname
          - path
      value:
        type: string
        description: 'Value to be matched for rule condition'
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this rule was created"
      provisioning_status:
        type: "string"
        enum:
         - active
         - create_pending
         - update_pending
         - delete_pending
         - maintenance_pending
         - failed
        description: "The provisioning status of this rule"

  ListenerPolicyReference:
    properties: 
      id: {description: The policy's unique identifier., example: 70294e14-4e61-11e8-bcf4-0242ac110004,
        format: id, pattern: '^[-0-9a-z_]+$',
        type: string}
      href: {description: The listener policy's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/listeners/70294e14-4e61-11e8-bcf4-0242ac110004/policies/f3187486-7b27-4c79-990c-47d33c0e2278,
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
  ListenerPolicyTargetReference:
    properties:
      href: {description: The pool's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/pools/70294e14-4e61-11e8-bcf4-0242ac110004,
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$', type: string}
      id: {description: The unique identifier for this load balancer pool, example: 70294e14-4e61-11e8-bcf4-0242ac110004, format: uuid, pattern: '^[-0-9a-z_]+$', type: string}    
      name: {description: The user-defined name for this load balancer pool, example:  my-load-balancer-pool, format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
      http_status_code:
        type: integer
        description: 'The http status code in the redirect response.'
        enum:
          - 301
          - 302
          - 303       
          - 307 
          - 308
      url: {description: The redirect target URL., example: https://www.redirect.com, type: string}

  ListenerTemplate:
    properties:
      certificate_instance:
        properties:
          crn: {description: The ceritificate instance's CRN, example: 'crn:v1:bluemix:public:cloudcerts:us-south:a/123456:b8866ea4-b8df-467e-801a-da1db7e020bf:certificate:78ff9c4c97d013fb2a95b21dddde7758',
            format: crn, type: string}
        description: 'The certificate instance used for SSL termination. It is applicable only to `https` protocol.'
      protocol:
        type: 'string'
        enum:
          - http
          - https
          - tcp
        description: 'The listener protocol.'
      port:
        type: 'integer'
        description: 'The listener port number.'
        minimum: 1
        maximum: 65535
        example: 443
      policies:
        type: "array"
        description: "The list of policies of this listener"
        items:
          $ref: "#/definitions/ListenerPolicyTemplate"
      connection_limit:
        type: 'integer'
        description: 'The connection limit of the listener.'
        minimum: 1
        maximum: 15000
        example: 2000
      default_pool:
        description: 'The default pool associated with the listener.'
        properties:
          href: {description: The pool's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          id: {description: The pool's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
            format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}
    required:
    - protocol
    - port
  ListenerPolicyTemplate:
    properties:
      name: {description: The unique user-defined name for this policy, example: my-policy,
            format: name, type: string}
      priority:
        type: integer
        description: 'Priority of the policy. Lower value indicates higher priority.'
      target:
        properties:
          href: {description: The pool's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/pools/70294e14-4e61-11e8-bcf4-0242ac110004,
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          id: {description: The unique identifier for this load balancer pool, example: a10a5771-dc23-442c-8460-c3601d8542f7,
            format: uuid, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}    
          http_status_code:
            type: integer
            description: 'The http status code in the redirect response.'
            enum:
              - 301
              - 302
              - 303       
              - 307 
              - 308
          url: {description: The redirect target URL., example: https://www.redirect.com,
            type: string}
      action:
        type: string
        description: 'The policy action.'
        enum:
          - forward
          - redirect
          - reject      
      rules:
        type: "array"
        description: "The list of rules of this policy"
        items:
          $ref: "#/definitions/ListenerPolicyRuleTemplate"
  ListenerPolicyTemplatePatch:
    title: "ListenerPolicyTemplatePatch"
    type: "object"
    properties:
      name: {description: The user-defined name for this policy. Names must be unique within the load balancer listener the policy resides in., example: my-policy, format: name, type: string}
      priority:
          type: integer
          description: 'Priority of the policy. Lower value indicates higher priority.'
      target:
          properties:
            href: {description: The pool's canonical URL., example: https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/pools/70294e14-4e61-11e8-bcf4-0242ac110004,
              format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$', type: string}
            id: {description: The unique identifier for this load balancer pool, example: a10a5771-dc23-442c-8460-c3601d8542f7, format: uuid, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$', type: string}    
            http_status_code:
              type: integer
              description: 'The http status code in the redirect response.'
              enum:
                - 301
                - 302
                - 303       
                - 307 
                - 308
            url: {description: The redirect target URL., example: https://www.redirect.com, type: string}

  ListenerPolicyRuleTemplatePatch:
    title: "ListenerPolicyRuleTemplatePatch"
    type: "object"
    properties:
      condition:
        type: string
        description: 'The condition of the rule.'
        enum:
          - contains
          - equals
          - matches_regex
      field:
          type: string
          description: 'HTTP header field. This is only applicable to "header" rule type.'
      type:
        type: string
        description: 'The type of the rule.'
        enum:
          - header
          - hostname
          - path
      value:
          type: string
          description: 'Value to be matched for rule condition'

  ListenerPolicyRuleTemplate:
    properties:
      condition:
        type: string
        description: The condition of the rule.
        enum:
          - contains
          - equals
          - matches_regex 
      field: {description: HTTP header field. This is only applicable to "header" rule type., example: MY-APP-HEADER,
        type: string}
      type: 
        type: string
        description: 'The type of the rule.'
        enum:
          - path
          - hostname
          - header  
      value: {description: Value to be matched for rule condition, type: string}
  ListenerTemplatePatch:
    properties:
      certificate_instance:
        properties:
          crn: {description: The ceritificate instance's CRN, example: 'crn:v1:bluemix:public:cloudcerts:us-south:a/123456:b8866ea4-b8df-467e-801a-da1db7e020bf:certificate:78ff9c4c97d013fb2a95b21dddde7758',
            format: crn, type: string}
        description: 'The certificate instance used for SSL termination. It is applicable only to `https` protocol.'
      protocol:
        type: 'string'
        enum:
          - http
          - https
          - tcp
        description: 'The listener protocol.'
      port:
        type: 'integer'
        description: 'The listener port number.'
        minimum: 1
        maximum: 65535
        example: 443
      connection_limit:
        type: 'integer'
        description: 'The connection limit of the listener.'
        minimum: 1
        maximum: 15000
        example: 2000
      default_pool:
        description: 'The default pool associated with the listener.'
        properties:
          href: {description: The pool's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          id: {description: The pool's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
            format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}

  PoolCollection:
    title: "PoolCollection"
    type: "object"
    required:
    - pools
    properties:
      pools:
        type: "array"
        description: "Collection of pools"
        items:
          $ref: "#/definitions/Pool"
  Pool:
    title: 'Pool'
    properties:
      name: {description: The name of the pool., example: my-pool,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      href: {description: The pool's canonical URL.., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The pool's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      algorithm:
        type: 'string'
        enum:
          - round_robin
          - weighted_round_robin
          - least_connections
        description: 'The load balancing algorithm.'
      health_monitor:
        $ref: '#/definitions/HealthMonitorTemplate'
        description: 'The health monitor of this pool.'                
      protocol:
        type: 'string'
        enum:
          - http
          - tcp
        description: 'The pool protocol.'
      session_persistence:
        $ref: '#/definitions/SessionPersistenceTemplate'
        description: 'The session persistence of this pool.'
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this pool was created"
      provisioning_status:
        type: "string"
        enum:
         - active
         - create_pending
         - update_pending
         - delete_pending
         - maintenance_pending
        description: "The provisioning status of this pool"
      members:
        type: "array"
        description: "The backend server members of the pool"
        items:
          $ref: "#/definitions/MemberReference"
  MemberReference:
    properties:
      href: {description: The member's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The member's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
  PoolTemplatePatch:
    properties:
      name: {description: The name of the pool., example: my-pool,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      protocol:
        type: 'string'
        enum:
          - http
          - tcp
        description: 'The pool protocol.'
      algorithm:
        type: 'string'
        enum:
          - round_robin
          - weighted_round_robin
          - least_connections
        description: 'The load balancing algorithm.'
      health_monitor:
        $ref: '#/definitions/HealthMonitorTemplate'
        description: 'The health monitor of this pool.'
      session_persistence:
        $ref: '#/definitions/SessionPersistenceTemplate'
        description: 'The session persistence of this pool.'
  MemberCollection:
    properties:
      first:
        properties:
          href:
            example: "https://us-south.iaas.cloud.ibm.com/v1/load_balancers/dd754295-e9e0-4c9d-bf6c-58fbc59e5727/pools/de754295-e9e0-4c9d-bf6c-58fbc59e5727/members?limit=20"
      next:
        description: A reference to the next page of resources; this reference
          is included for all pages except the last page
        properties:
          href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
      limit: {description: The maximum number of resources can be returned
              by the request, example: 20, format: int64, maximum: 100, minimum: 1,
              type: integer}
      members:
        type: "array"
        description: "Collection of members"
        items:
          $ref: "#/definitions/Member"
  Member:
    properties:
      href: {description: The member's canonical URL., example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The member's unique identifier., example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      port:
        type: 'integer'
        description: 'The port number of the application running in the server member.'
        minimum: 1
        maximum: 65535
        example: 80        
      target:
        title: "MemberAddressTarget"
        type: "object"
        properties:
          address:
            type: 'string'
            description: 'The IP address of the pool member.'
            example: '192.168.100.5'
      weight:
        type: 'integer'
        description: 'Weight of the server member. This takes effect only when the load balancing algorithm of its belonging pool is `weighted_round_robin`.'
        minimum: 1
        maximum: 100
        example: 50
      health:
        type: 'string'
        enum:
          - ok
          - faulted
          - unknown
        description: 'Health of the server member in the pool.'
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this member was created"
      provisioning_status:
        type: "string"
        enum:
         - active
         - create_pending
         - update_pending
         - delete_pending
         - maintenance_pending
        description: "The provisioning status of this member"
  MemberCollectionTemplate:
    title: "MemberCollectionTemplate"
    type: "object"
    required:
    - members
    properties:
      members:
        type: "array"
        description: "Member collection"
        items:
          $ref: '#/definitions/MemberTemplateCommon'
          required:
            - target
            - port
  MemberTemplateCommon:
    title: "MemberTemplateCommon"
    type: "object"
    properties:
      target:
        title: "MemberAddressTarget"
        type: "object"
        properties:
          address:
            type: 'string'
            description: 'The IP address of the pool member.'
            example: '192.168.100.5'
      port:
        type: 'integer'
        description: 'The port number of the application running in the server member.'
        minimum: 1
        maximum: 65535
        example: 80
      weight:
        type: 'integer'
        description: 'Weight of the server member. This takes effect only when the load balancing algorithm of its belonging pool is `weighted_round_robin`.'
        minimum: 1
        maximum: 100
        example: 50
  MemberTemplatePatch:
    title: "MemberTemplatePatch"
    $ref: '#/definitions/MemberTemplateCommon'
  
  LoadBalancerStatistics:
    type: "object"
    properties:
      connection_rate:
        type: "number"
        format: "float"
        description: "Current connection rate (connections per second) of this load balancer"
        example: 91.121
      throughput:
        type: "number"
        format: "float"
        description: "Current throughput (Mbps) of this load balancer"
        example: 167.278
      active_connections:
        type: "integer"
        format: "int64"
        description: "Number of active connnections of this load balancer"
        example: 797
      data_processed_this_month:
        type: "integer"
        format: "int64"
        description: "Total number of data processed (bytes) of this load balancer within current calendar month"
        example: 10093173145
  IKEPolicyCollection:
    properties:
      first:
        description: A reference to the first page of resources
        properties:
          href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips?limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
        type: object
      next:
        description: A reference to the next page of resources; this reference
          is included for all pages except the last page
        properties:
          href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
        type: object
      limit: {description: The maximum number of resources can be returned by the request, example: 20, format: int64, maximum: 100, minimum: 1,type: integer}
      ike_policies:
        type: "array"
        description: "Collection of IKE policies"
        items:
          $ref: "#/definitions/IKEPolicy"
  IKEPolicy:
    properties:
      href: {description: The IKE policy's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/ike_policies/ddf51bec-3424-11e8-b467-0ed5f89f718b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The IKE policy's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The name given to this IKE policy, example: my-ike-policy,
                format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      ike_version:
        type: "integer"
        description: "The IKE protocol version"
        enum:
          - 1
          - 2
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      dh_group:
        type: "integer"
        description: "The Diffie-Hellman group"
        enum:
          - 2
          - 5
          - 14
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 28800
        default: 28800
      negotiation_mode:
        type: "string"
        description: "The IKE negotiation mode. Only `main` is supported."
        enum:
          - main
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
      connections:
        type: "array"
        description: "Collection of references to VPN connections that use this IKE policy"
        items:
          $ref: '#/definitions/VPNGatewayConnectionReference'
  VPNGatewayConnectionReference:
    properties:
      href: {description: The VPN connection's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier of a VPN connection, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The name given to this VPN connection, example: my-vpn-connection,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
    title: reference
    type: object
  IKEPolicyTemplate:
    properties:
      name: {description: The name given to this IKE policy, example: my-ike-policy,
                format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      ike_version:
        type: "integer"
        description: "The IKE protocol version"
        enum:
          - 1
          - 2
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      dh_group:
        type: "integer"
        description: "The Diffie-Hellman group"
        enum:
          - 2
          - 5
          - 14
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 28800
        default: 28800
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
  IKEPolicyPatch:
    properties:
      name: {description: The name given to this IKE policy, example: my-ike-policy,
                format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      ike_version:
        type: "integer"
        description: "The IKE protocol version"
        enum:
          - 1
          - 2
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      dh_group:
        type: "integer"
        description: "The Diffie-Hellman group"
        enum:
          - 2
          - 5
          - 14
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 28800
        default: 28800
    title: "IKEPolicyPatch"
  IPsecPolicyTemplate:
    properties:
      name: {description: The name given to this IPsec policy, example: my-ipsec-policy,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      pfs:
        type: "string"
        description: "Perfect Forward Secrecy"
        enum:
          - disabled
          - group_2
          - group_5
          - group_14
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 3600
        default: 3600
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
  VPNGatewayConnectionCollection:
    type: "object"
    title: "VPNGatewayConnectionCollection"
    description: "Collection of VPN connections in a VPN gateway"
    required:
    - "connections"
    properties:
      connections:
        type: "array"
        description: "Array of VPN connections"
        items:
          $ref: "#/definitions/VPNGatewayConnection"
  VPNGatewayConnection:
    properties:
      href: {description: The VPN connection's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b/connections/93487806-7743-4c46-81d6-72869883ea0b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier of a VPN connection, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The name given to this VPN connection, example: my-vpn-connection,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      admin_state_up:
        type: "boolean"
        description: "If set to false, the VPN connection is shut down"
        default: true
        x-isnullable: false
      dead_peer_detection:
        $ref: '#/definitions/VPNGatewayConnectionDPD'
        x-isnullable: false
      ike_policy:
        $ref: '#/definitions/IKEPolicyIdentity'
        x-isnullable: false
      ipsec_policy:
        $ref: '#/definitions/IPsecPolicyIdentity'
        x-isnullable: false
      peer_address:
        type: "string"
        description: "The IP address of the peer VPN gateway"
        example: "169.21.50.5"
      psk:
        type: "string"
        description: "The preshared key"
        example: "lkj14b1oi0alcniejkso"
      local_cidrs:
        type: "array"
        description: "A collection of local CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "192.168.1.0/24"
      peer_cidrs:
        type: "array"
        description: "A collection of peer CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "10.45.1.0/24"
      authentication_mode:
        type: "string"
        enum:
          - psk
        description: "The authentication mode. Only `psk` is currently supported."
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this VPN connection was created"    
      route_mode:
        type: "string"
        enum:
          - policy
        description: "The routing mode. Only `policy` is currently supported."            
      status:
        type: "string"
        enum:
          - up
          - down
        description: "The status of a VPN connection"
  VPNGatewayConnectionDPD:
    properties:
      action:
        type: "string"
        description: "Dead Peer Detection actions"
        enum:
          - restart
          - clear
          - hold
          - none
        example: restart
        default: none
      interval:
        type: "integer"
        description: "Dead Peer Detection interval in seconds"
        example: 30
        default: 30
      timeout:
        type: "integer"
        description: "Dead Peer Detection timeout in seconds"
        example: 120
        default: 120
  IKEPolicyIdentity:
    properties:
      href: {description: The IKE policy's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/ike_policies/ddf51bec-3424-11e8-b467-0ed5f89f718b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The IKE policy's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      crn: {description: The IKE policy's CRN, example: crn:v1:bluemix:public:gc:us-south-1:a/123456::ike-policy:ddf51bec-3424-11e8-b467-0ed5f89f718b,
        format: crn, type: string}
  IPsecPolicyIdentity:
    properties:
      href: {description: The IPsec policy's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/ipsec_policies/ddf51bec-3424-11e8-b467-0ed5f89f718b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The IPsec policy's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      crn: {description: The IPsec policy's CRN, example: crn:v1:bluemix:public:gc:us-south-1:a/123456::ipsec-policy:ddf51bec-3424-11e8-b467-0ed5f89f718b,
        format: crn, type: string}
  IPsecPolicyCollection:
    properties:
      first:
        description: A reference to the first page of resources
        properties:
          href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips?limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
        type: object
      next:
        description: A reference to the next page of resources; this reference
          is included for all pages except the last page
        properties:
          href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
        type: object
      limit: {description: The maximum number of resources can be returned by the request, example: 20, format: int64, maximum: 100, minimum: 1,type: integer}
      ipsec_policies:
        type: "array"
        description: "Collection of IPsec policies"
        items:
          $ref: "#/definitions/IPsecPolicy"
  IPsecPolicy:
    properties:
      href: {description: The IPsec policy's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/ipsec_policies/ddf51bec-3424-11e8-b467-0ed5f89f718b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The IPsec policy's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      crn: {description: The IPsec policy's CRN, example: crn:v1:bluemix:public:gc:us-south-1:a/123456::ipsec-policy:ddf51bec-3424-11e8-b467-0ed5f89f718b,
        format: crn, type: string}
      name: {description: The name given to this IPsec policy, example: my-ipsec-policy,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}        
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 3600
        default: 3600          
      pfs:
        type: "string"
        description: "Perfect Forward Secrecy"
        enum:
          - disabled
          - group_2
          - group_5
          - group_14
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
      connections:
        type: "array"
        description: "Collection of references to VPN connections that use this IPsec policy"
        items:
          $ref: '#/definitions/VPNGatewayConnectionReference'        
      transform_protocol:
        type: "string"
        description: "The transform protocol used. Only `esp` is supported."
        enum:
          - esp
      encapsulation_mode:
        type: "string"
        description: "The encapsulation mode used. Only `tunnel` is supported."
        enum:
          - tunnel
  IPsecPolicyPatch:
    properties:
      name: {description: The name given to this IPsec policy, example: my-ipsec-policy,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}        
      authentication_algorithm:
        type: "string"
        description: "The authentication algorithm"
        enum:
          - md5
          - sha1
          - sha256
      encryption_algorithm:
        type: "string"
        description: "The encryption algorithm"
        enum:
          - 3des
          - aes128
          - aes256
      pfs:
        type: "string"
        description: "Perfect Forward Secrecy"
        enum:
          - disabled
          - group_2
          - group_5
          - group_14
      key_lifetime:
        type: "integer"
        description: "The key lifetime in seconds"
        minimum: 300
        maximum: 86400
        example: 3600
        default: 3600
    title: "IPsecPolicyPatch"
  VPNGatewayCollection:
    properties:
      first:
        description: A reference to the first page of resources
        properties:
          href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips?limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
        type: object
      limit: {description: The maximum number of resources can be returned by the request, example: 20, format: int64, maximum: 100, minimum: 1,type: integer}
      next:
        description: A reference to the next page of resources; this reference
          is included for all pages except the last page
        properties:
          href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
        required: [href]
      vpn_gateways:
        type: "array"
        description: "Collection of VPN gateways"
        items:
          $ref: "#/definitions/VPNGateway"
  VPNGatewayTemplate:
    properties:
      name: {description: The name given to this VPN gateway, example: my-vpn-gateway,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}      
      subnet:
        properties:
            crn: {description: The CRN for this subnet, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
              format: crn, type: string}
            id: {description: The unique identifier for this subnet
                , example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            name: {description: The user-defined name for this subnet
                , example: my-network-interface, format: name,
              pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: SubnetReference
        type: object
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
  VPNGateway:
    properties:
      href: {description: The VPN gateway's canonical URL, example: 'https://us-south.iaas.cloud.ibm.com/v1/vpn_gateways/ddf51bec-3424-11e8-b467-0ed5f89f718b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The VPN gateway's unique identifier, example: a10a5771-dc23-442c-8460-c3601d8542f7,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      crn: {description: The VPN gateway's CRN, example: crn:v1:bluemix:public:gc:us-south-1:a/123456::vpn-gateway:ddf51bec-3424-11e8-b467-0ed5f89f718b,
        format: crn, type: string}
      name: {description: The name given to this VPN gateway, example: my-vpn-gateway,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}        
      subnet:
        properties:
            crn: {description: The CRN for this subnet, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
              format: crn, type: string}
            id: {description: The unique identifier for this subnet
                , example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            name: {description: The user-defined name for this subnet
                , example: my-network-interface, format: name,
              pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: SubnetReference
        type: object
      connections:
        type: "array"
        description: "Collection of references to VPN connections"
        items:
          $ref: '#/definitions/VPNGatewayConnectionReference'
      public_ip:
        type: "object"
        properties:
          address:
            type: "string"
            description: "The IP address assigned to this VPN gateway"
            example: "203.0.113.1"
      status:
        type: "string"
        enum:
          - available
          - failed
          - pending
        description: "The status of the VPN gateway"
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time that this VPN gateway was created"
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
  VPNGatewayPatch:
    properties:
      name: {description: The name given to this VPN gateway, example: my-vpn-gateway,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}        
  VPNGatewayConnectionTemplate:
    properties:
      name: {description: The name given to this VPN connection, example: my-vpn-connection,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}   
      local_cidrs:
        type: "array"
        description: "A collection of local CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "192.168.1.0/24"
        x-omitempty: true
      peer_cidrs:
        type: "array"
        description: "A collection of peer CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "10.45.1.0/24"
        x-omitempty: true
      peer_address:
        type: "string"
        description: "The IP address of the peer VPN gateway"
        example: "169.21.50.5"
      admin_state_up:
        type: "boolean"
        description: "If set to false, the VPN connection is shut down"
        default: true
      psk:
        type: "string"
        description: "The preshared key"
        example: "lkj14b1oi0alcniejkso"
      ike_policy:
        $ref: '#/definitions/IKEPolicyIdentity'
      ipsec_policy:
        $ref: '#/definitions/IPsecPolicyIdentity'
      dead_peer_detection:
        $ref: '#/definitions/VPNGatewayConnectionDPD'
  VPNGatewayConnectionPatch:
    properties:
      name: {description: The name given to this VPN connection, example: my-vpn-connection,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}   
      peer_address:
        type: "string"
        description: "The IP address of the peer VPN gateway"
        example: "169.21.50.5"
      admin_state_up:
        type: "boolean"
        description: "If set to false, the VPN connection is shut down"
        default: true
      psk:
        type: "string"
        description: "The preshared key"
        example: "lkj14b1oi0alcniejkso"
      ike_policy:
        $ref: '#/definitions/IKEPolicyIdentity'
      ipsec_policy:
        $ref: '#/definitions/IPsecPolicyIdentity'
      dead_peer_detection:
        $ref: '#/definitions/VPNGatewayConnectionDPD'
  VPNGatewayConnectionLocalCIDRs:
    properties:
      local_cidrs:
        type: "array"
        description: "A collection of local CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "192.168.1.0/24"
  VPNGatewayConnectionPeerCIDRs:
    properties:
      peer_cidrs:
        type: "array"
        description: "A collection of peer CIDRs for this resource"
        items:
          type: "string"
          description: "A CIDR for the resource"
          example: "10.45.1.0/24"
  ShareTargetWithZoneTemplate:
    properties:
      name: {description: The user-defined name for this file share mount target, example: my-share-target,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      resource_group:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
          type: string}
        title: ResourceGroupIdentity
        type: object
      security_groups:
        items:
          properties:
            id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                type: string}
            name: {description: The user-defined name for this resource, example: my-snapshot,
                format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                format: crn, type: string}
          title: reference
          type: object
        type: array
        example:
        - id: "be5df5ca-12a0-494b-907e-aa6ec2bfa271"
        - crn: "crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271"
        - name: "allow_ssh"
      zone:
        description: The zone to place the file share mount target in
        properties:
          name: {description: The name for this zone, example: us-south-1, format: name,
          pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneIdentity
        type: object
      address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12, type: string}
      subnet:
        properties:
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
            format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}
          name: {description: The user-defined name for this resource, example: my-snapshot,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
            format: crn, type: string}
        title: reference
        type: object
    type: object
  share:
    properties:
      name: {description: The user-defined name for this file profile., example: my-share, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      href: {description: The URL for this share, example: 'https://us-south.iaas.cloud.ibm.com/v1/shares/0fe9e5d8-0a4d-4818-96ec-e99708644a58',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      crn: {description: The CRN for this share, example: 'crn:v1:bluemix:public::us-south-1::gt:share-profile:gt.local',
          format: crn, type: string}
      id: {description: The unique identifier for this share, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      created_at: {description: The date and time that the server was created, format: date-time, type: string}
      resource_group:
        $ref: "#/definitions/resource_reference"
      vpc:
        $ref: "#/definitions/resource_reference"
      targets:
            description: Mount targets for the file share
            items: 
              $ref: "#/definitions/resource_reference"
            type: array
      profile:
        $ref: "#/definitions/resource_reference"
  sharetarget:
    properties:
      id: {description: The unique identifier for this file share mount target, example: 4cf9171a-0043-4434-8727-15b53dbc374c, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', type: string}
      name: {description: The user-defined name for this file share mount target, example: my-share-target, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      resource_group:
        $ref: "#/definitions/resource_reference"
      security_groups:
        description: Collection of security groups
        items:
          $ref: "#/definitions/resource_reference"
        type: array
      zone:
        description: The zone where this public gateway lives
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        required: [name, href]
        title: ZoneReference
        type: object
      address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12, type: string}
      subnet:
        properties:
          href: {description: The URL for this file share mount target, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',type: string}
          id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',type: string}
          name: {description: The user-defined name for this resource, example: my-snapshot,format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',format: crn, type: string}
        title: reference
        type: object
      status:
        description: The status of the mount target
        enum: [pending, available, failed]
        type: string
      created_at: {description: The date and time that the mount target was created, format: date-time, type: string}
      href: {description: The URL for this file share mount target, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',type: string}
      crn: {description: The CRN for this file share mount target, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::encryption-key:1a6b7274-678d-4dfb-8981-c71dd9d4daa5',format: crn, type: string}
    type: object
  ShareProfile:
    properties:
      name: {description: The user-defined name for share profile., example: gc.local, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      href: {description: The URL for this share profile, example: 'https://us-south.iaas.cloud.ibm.com/v1/vpcs/8e454ead-0db7-48ac-9a8b-2698d8c470a7/address_prefixes/1a15dca5-7e33-45e1-b7c5-bc690e569531',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      crn: {description: The CRN for this profile, example: 'crn:v1:bluemix:public::us-south-1::gt:share-profile:gt.local',
          format: crn, type: string}
      family: {example: 'local', type: string}
      generation:
          type: "string"
          enum:
          - gt
          - gc
          description: "The platform generation of the share profile"
          default: gt
          example: gt
  volume_profile:
    properties:
      name: {description: The name for this volume profile, example: gc.tiered.gold, format: name, pattern: '^[A-Za-z].*[-A-Za-z0-9_]*$', type: string, x-isnullable: false}
      href: {description: The URL for this volume profile, example: 'https://us-south.iaas.cloud.ibm.com/v1/volume/profiles/gt.tiered.gold',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      crn: {description: The CRN for this volume profile, example: 'crn:v1:bluemix:public::us-south-1::gt:volume-profile:gt.tiered.gold',
          format: crn, type: string}
      family: {example: 'tiered', type: string}
  address_prefix:
    properties:
      name: {description: The user-defined name for this prefix., example: my-address-pool-prefix-2t,
          format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      cidr: {description: The CIDR block, example: 10.0.0.0/24, type: string}
      href: {description: The URL for this prefix, example: 'https://us-south.iaas.cloud.ibm.com/v1/vpcs/8e454ead-0db7-48ac-9a8b-2698d8c470a7/address_prefixes/1a15dca5-7e33-45e1-b7c5-bc690e569531',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this prefix, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      created_at: {description: The date and time that the prefix was created, format: date-time, type: string}
      zone:
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneReference
        type: object
      has_subnets: {description: Indicates whether subnets exist with
          addresses from this prefix., type: boolean}
      is_default: {description: Indicates whether this is the default prefix for this zone in this VPC.\nDefault prefixes cannot be deleted,
          type: boolean}
  volume_attachment_reference:
    allOf:
    - $ref: "#/definitions/resource_reference"
    - properties:
        volume:
          $ref: "#/definitions/resource_reference"
    title: VolumeAttachmentVolumeReference
    type: object
  network_interface_reference:
    allOf:
      - $ref: "#/definitions/resource_reference"
      - properties:
              primary_ipv4_address: {description: The primary IPv4 address,
                type: string}
    title: NetworkInterfaceReference
    type: object
  generation:
    default: gt
    description: The platform generation of the subnet
    enum: [gt, gc]
    example: gt
    type: string
  ResourceReferenceWithOutCrn:
    properties:
      href: {description: The URL for this resource, example: 'https://resource-controller.cloud.ibm.com/v1/resource_groups/56969d60-43e9-465c-883c-b9f7363e78e8',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this resource, example: my-snapshot,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
    title: reference
    type: object
  resource_reference:
    properties:
      href: {description: The URL for this resource, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5/snapshots/349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this resource, example: my-snapshot,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: crn, type: string}
    title: reference
    type: object
  volume_snapshot:
    properties:
      created_at: {description: The date and time that the snapshot
          was created, format: date-time, type: string}
      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: crn, type: string}
      href: {description: The URL for this snapshot, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5/snapshots/349a61d8-7ab1-420f-a690-5fed76ef9d4f',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this snapshot, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this snapshot, example: my-snapshot,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      status:
        description: The status of the snapshot
        enum: [pending, complete]
        type: string
      resource_group:
        $ref: "#/definitions/resource_reference"     
    required: [id, name, href, created_at, status]
    title: Snapshot
    type: object
  volume:
    properties:
      auto_delete: {default: false, description: 'If set to true, this
          volume will be automatically deleted if the only server it
          is attached to is deleted', type: boolean}
      capacity: {description: The capacity of the volume in gigabytes,
        example: 100, maximum: 64000, minimum: 10, type: integer}
      encryption_key:
        properties:
          crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
            format: crn, type: string}
        title: VolumeEncryptionKey
        type: object
      iops:
        description: The bandwidth for the volume
        enum: [1000, 10000, 100000]
        type: integer
      name: {description: The user-defined name for this volume, example: my-volume,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      resource_group:
        $ref: "#/definitions/resource_reference"        
      id: {description: The unique identifier for this volume, example: 1a6b7274-678d-4dfb-8981-c71dd9d4daa5,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      crn: {description: The CRN for this volume, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::volume:1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
        format: crn, type: string}
      href: {description: The URL for this volume, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      created_at: {description: The date and time that the volume was
          created, format: string, type: string}
      encryption: {description: This field defines the type of encryption used on the volume., example: provider_managed,
        type: string, enum: [provider_managed, user_managed]}
      profile:
        $ref: "#/definitions/resource_reference"
      status:
        description: The status of the volume
        enum: [pending, available, pending_deletion, failed]
        example: available
        type: string
      volume_attachments:
        items:
          properties:
            id: {description: The unique identifier for this volume attachment, example: 1a6b7274-678d-4dfb-8981-c71dd9d4daa5,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            href: {description: The URL for this volume attachment, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
              format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
              type: string}
            name: {description: The user-defined name for this volume attachment, example: my-volume,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            type:
              description: The type of volume attachment
              enum: [boot, data]
              type: string 
            delete_volume_on_instance_delete:
              description: If set to true, when deleting the instance the volume will also be deleted
              type: boolean
            instance:
              properties:
                id: {description: The unique identifier for this virtual server instance, example: 1a6b7274-678d-4dfb-8981-c71dd9d4daa5,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                href: {description: The URL for this vvirtual server instance, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
                  format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                  type: string}
                name: {description: The user-defined name for this virtual server instance, example: my-virtual-server-instance,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        type: array
      zone:
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        required: [name, href]
        title: ZoneReference
        type: object
    title: Volume
    type: object
  subnet:
    properties:
      available_ipv4_address_count: {description: The number of available
          IPv4 addresses in this subnet, example: 15, format: int64,
        type: integer}
      created_at: {description: The date and time that the subnet was
          created, format: date-time, type: string}
      crn: {description: The CRN for this subnet, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::subnet:7ec86020-1c6e-4889-b3f0-a15f2e50f87e',
        format: crn, type: string}
      href: {description: The URL for this subnet, example: 'http://us-south.iaas.cloud.ibm.com/v1/subnets/7ec86020-1c6e-4889-b3f0-a15f2e50f87e',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this subnet, example: 7ec86020-1c6e-4889-b3f0-a15f2e50f87e,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      ip_version:
        description: The IP version(s) supported by this subnet
        enum: [ipv4, ipv6, both]
        example: both
        type: string
      ipv4_cidr_block: {description: 'The IPv4 range of the subnet,
          expressed in CIDR format', example: 10.0.0.0/24, type: string}
      ipv6_cidr_block: {description: 'The IPv6 range of the subnet,
          expressed in CIDR format', example: '2001:db8:85a3::/64',
        type: string}
      name: {description: The user-defined name for this subnet, example: my-subnet,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      network_acl:
        $ref: "#/definitions/resource_reference"
      public_gateway:
        $ref: "#/definitions/resource_reference"
      resource_group:
        $ref: "#/definitions/resource_reference"
      status:
        description: The status of the subnet
        enum: [pending, available, deleting, failed]
        example: available
        type: string
      total_ipv4_address_count: {description: The total number of IPv4
          addresses in this subnet, example: 256, format: int64, type: integer}
      vpc:
        $ref: "#/definitions/resource_reference"
      zone:
        description: The zone this subnet resides in
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneReference
        type: object
    title: Subnet
    type: object
  server_volume_attachment:
    properties:
      created_at: {description: The date and time that the volume was
          attached, format: date-time, type: string}
      crn: {description: The CRN for this volume, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::volume-interfacs:82cbf856-9cbb-45fb-b62f-d7bcef32399a',
        format: crn, type: string}
      href: {description: The URL for this volume interface, example: 'http://us-south.iaas.cloud.ibm.com/v1/servers/1e09281b-f177-46fb-baf1-bc152b2e391a/volume_attachments/82cbf856-9cbb-45fb-b62f-d7bcef32399a',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this volume interface,
        example: 82cbf856-9cbb-45fb-b62f-d7bcef32399a, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this volume interface,
        example: my-volume-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      status:
        enum: [attaching, attached, detaching]
        type: string
      volume:
        $ref: "#/definitions/resource_reference"
      resource_group:
        $ref: "#/definitions/ResourceReferenceWithOutCrn"
    title: VolumeAttachment
    type: object
  server_network_interface:
    properties:
      created_at: {description: The date and time that the network interface
          was created, format: date-time, type: string}
      crn: {description: The CRN for this network interface, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
        format: crn, type: string}
      floating_ips:
        description: Array of references to floating ips associated
          with this network interface
        items:
          $ref: "#/definitions/resource_reference"
        type: array
      href: {description: The URL for this network interface, example: 'http://us-south.iaas.cloud.ibm.com/v1/servers/1e09281b-f177-46fb-baf1-bc152b2e391a/network_interfaces/10c02d81-0ecb-4dc5-897d-28392913b81e',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this network interface,
        example: 10c02d81-0ecb-4dc5-897d-28392913b81e, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this network interface,
        example: my-network-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      port_speed: {description: The network interface port speed in
          Mbps, example: 10000, type: integer}
      primary_ipv4_address: {description: The primary IPv4 address,
        example: 10.0.0.5, type: string}
      secondary_addresses:
        description: Collection seconary IP addresses
        example: [10.0.0.6, '2001:db8:85a3::8a2e:370:7335']
        items: {description: A secondary IP address, type: string}
        type: array
      security_groups:
        description: Collection of security groups
        items:
          $ref: "#/definitions/resource_reference"
        type: array
      status:
        type: "string"
        description: "The status of the volume"
        enum:
        - available
        - failed
        - pending
        example: available
      subnet:
        $ref: "#/definitions/resource_reference"
      type:
        description: The type of this network interface as it relates
          to a server
        enum: [primary, secondary]
        example: primary
        type: string
    title: NetworkInterface
    type: object
  security_group_rule:
    description: When 'protocol' is either of 'tcp' or 'udp', then the
      rule may also contain fields to specify a port range.
    example:
      direction: ingress
      id: 6f2a6efe-21e2-401c-b237-620aa26ba16a
      ip_version: ipv4
      port_max: 81
      port_min: 80
      protocol: tcp
      remote: {cidr: 192.168.0.0/24}
    properties:
      direction:
        description: The direction of traffic to enforce (ingress, egress)
        enum: [ingress, egress]
        example: ingress
        type: string    
      ip_version:
        description: The IP version to enforce (ipv4, ipv6). The format
          of 'remote.address' or 'remote.cidr_block' must match this
          field, if they are used. Also, if 'remote' references another
          security group (ie. using remote.id, remote.name, remote.crn)
          then this rule will only apply to IP addresses (network interfaces)
          in that group which match this ip_version.
        enum: [ipv4, ipv6]
        example: ipv4
        type: string       
      id: {description: The unique identifier for a security group rule,
        example: 6f2a6efe-21e2-401c-b237-620aa26ba16a, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}        
      remote:
        description: Describe the set of network interfaces from which
          this rule allows traffic (or to which, for egress rules.)
        properties:
          address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12,
            type: string}
          cidr_block: {description: 'A range of IPv4 or IPv6 addresses,
            in CIDR format.', example: 10.0.0.0/24, type: string}
          crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
            format: crn, type: string}
          href: {description: The security group's canonical URL., example: 'http://us-south.iaas.cloud.ibm.com/v1/security_groups/be5df5ca-12a0-494b-907e-aa6ec2bfa271',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          id: {description: The security group's unique identifier.,
            example: be5df5ca-12a0-494b-907e-aa6ec2bfa271, format: uuid,
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}
          name: {description: The security group's user-defined name.,
            example: my-security-group, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
            type: string}
        title: SecurityGroupReference
        type: object  
      code: {description: 'The ICMP code to to allow. Valid values from
        0 to 255. If missing, allow all codes.', example: 0, type: integer}
      port_max: {description: 'The inclusive upper TCP/UDP port bound
        to enforce. For a single port, set port_min and port_max to5606
        the same value. Valid values from 1 to 65535.', example: 22,
        type: integer}
      port_min: {description: 'The inclusive lower TCP/UDP port bound
        to enforce. For a single port, set port_min and port_max to
        the same value. Valid values from 1 to 65535.', example: 22,
        type: integer}
      protocol:
        default: all
        description: The protocol to enforce. Must be one of (icmp,
          tcp, udp, all). Defaults to 'all' if omitted.
        enum: [all, icmp, tcp, udp]
        example: tcp
        type: string
      type: {description: 'The ICMP type to allow. Valid values from
        0 to 255. If missing, allow all types.', example: 8, type: integer}
    required: [code, type,port_max,port_min]
    title: SecurityGroupRule
    type: object
  security_group:
    properties:
      created_at: {description: The date and time that this security
          group was created, format: date-time, type: string}
      crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
        format: crn, type: string}
      href: {description: The security group's canonical URL., example: 'http://us-south.iaas.cloud.ibm.com/v1/security_groups/be5df5ca-12a0-494b-907e-aa6ec2bfa271',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The security group's unique identifier., example: be5df5ca-12a0-494b-907e-aa6ec2bfa271,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: 'The user-assigned name of this security group.
          If the user does not provide a name, one will be automatically
          assigned. Security group names must be unique, within the
          scope of a user account.', example: allow_ssh, format: name,
        pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      resource_group:
        $ref: "#/definitions/resource_reference" 
      vpc:
        $ref: "#/definitions/resource_reference"
      network_interfaces:
        description: Collection of references to network interfaces
        items:
          properties:
            crn: {description: The CRN for this network interface, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
              format: crn, type: string}
            href: {description: The URL for this network interface,
              example: 'http://us-south.iaas.cloud.ibm.com/v1/servers/1e09281b-f177-46fb-baf1-bc152b2e391a/network_interfaces/10c02d81-0ecb-4dc5-897d-28392913b81e',
              format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
              type: string}
            id: {description: The unique identifier for this network
                interface, example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
              type: string}
            name: {description: The user-defined name for this network
                interface, example: my-network-interface, format: name,
              pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            primary_ipv4_address: {description: The primary IPv4 address,
              type: string}
          title: NetworkInterfaceReference
          type: object
        type: array
      rules:
        description: Collection of references to rules
        items:
          $ref: "#/definitions/security_group_rule"
        type: array
    title: SecurityGroup
    type: object
  default_security_group:
    properties:
      created_at: {description: The date and time that this security
          group was created, format: date-time, type: string}
      crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
        format: crn, type: string}
      href: {description: The security group's canonical URL., example: 'http://us-south.iaas.cloud.ibm.com/v1/security_groups/be5df5ca-12a0-494b-907e-aa6ec2bfa271',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The security group's unique identifier., example: be5df5ca-12a0-494b-907e-aa6ec2bfa271,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: 'The user-assigned name of this security group.
          If the user does not provide a name, one will be automatically
          assigned. Security group names must be unique, within the
          scope of a user account.', example: allow_ssh, format: name,
        pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      resource_group:
        $ref: "#/definitions/resource_reference" 
      vpc:
        $ref: "#/definitions/resource_reference"
      rules:
        description: Collection of references to rules
        items:
          $ref: "#/definitions/security_group_rule"
        type: array
    title: DefaultSecurityGroup
    type: object
  zone:
    properties:
      href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      name: {description: The name for this zone, example: us-south-1,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      region:
        description: The region this zone belongs to
        properties:
          href: {description: The URL for this region, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this region, example: us-south,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: RegionReference
        type: object
      status:
        enum: [available, unavailable, impaired]
        type: string
    title: Zone
    type: object
  region:
    properties:
      endpoint: {description: The API endpoint for this region., type: string, x-isnullable: false}
      href: {description: The URL for this region, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string, x-isnullable: false}
      name: {description: The name for this region, example: us-south,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string, x-isnullable: false}
      status:
        enum: [available, unavailable]
        type: string
        x-isnullable: false
    required: [name, href, status, endpoint]
    title: Region
    type: object
  public_gateway:
    properties:
      created_at: {description: The date and time that the public gateway
          was created, format: date-time, type: string}
      crn: {description: The CRN for this public gateway, example: 'crn:v1:bluemix:public::us-south::gt:public-gateway:dc5431ef-1fc6-4861-adc9-a59d077d1241',
        format: crn, type: string}
      floating_ip:
        description: Reference to the floating ip which is bound to
          this public gateway
        properties:
          address: {description: The globally unique IP address, example: 203.0.113.1,
            type: string}
          crn: {description: The CRN for this floating ip, example: 'crn:v1:bluemix:public::us-south::gt:floating-ip:203.0.113.1',
            format: crn, type: string}
          href: {description: The URL for this floating ips, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips/203.0.113.1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The user-defined name for this floating
              IP, example: my-floating-ip, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
            type: string}
          id: {description: The unique identifier for this floating ip,
            example: dc5431ef-1fc6-4861-adc9-a59d077d1241, format: uuid,
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}
        title: FloatingIPReference
        type: object
      href: {description: The URL for this gateway, example: 'http://us-south.iaas.cloud.ibm.com/v1/gateways/dc5431ef-1fc6-4861-adc9-a59d077d1241',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this public gateway,
        example: dc5431ef-1fc6-4861-adc9-a59d077d1241, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this public gateway,
        example: my-gateway, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      vpc:
        $ref: "#/definitions/resource_reference"
      zone:
        description: The zone where this public gateway lives
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneReference
        type: object
      resource_group:
        description: The resource group for this public gateway
        $ref: "#/definitions/resource_reference"
      status:
        enum: [pending, available, failed, deleting]
        type: string
    title: PublicGateway
    type: object
  network_acl_rule:
    example:
      action: allow
      before: {id: 8daca77a-4980-4d33-8f3e-7038797be8f9}
      destination: 192.168.0.0/24
      direction: ingress
      name: my-acl-rule-2
      port_max: 81
      port_min: 80
      protocol: tcp
      source: 10.0.0.5
    properties:
      action:
          type: "string"
          description: "Whether to allow or deny matching traffic"
          enum:
            - allow
            - deny
      before:
           $ref: "#/definitions/resource_reference"
      created_at: {description: The date and time that the network ACL Rule
          was created, format: date-time, type: string}
      id: {description: The unique identifier for this network ACL rule,
        example: a4e28308-8ee7-46ab-8108-9f881f22bdbf, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      ip_version:
          type: "string"
          description: "The IP version for this rule"
          enum:
            - ipv4
            - ipv6
      href: {description: The URL for this network ACL, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls/a4e28308-8ee7-46ab-8108-9f881f22bdbf',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      name: {description: The user-defined name for this network ACL,
          example: my-network-acl, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
          type: string}
      code: {description: 'The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.', example: 15,
        type: integer, x-isnullable: true}
      destination:
          type: "string"
          description: "The destination IP address or CIDR block"
          example: "192.168.0.0/24"
      direction:
          type: "string"
          description: "Whether the traffic to be matched is ingress or egress"
          enum:
            - ingress
            - egress
      port_max:
        example: 22
        maximum: 65535
        minimum: 1
        type: integer
        default: 65535
        description: The inclusive upper bound of TCP/UDP destination port range
      port_min:
        example: 22
        maximum: 65535
        minimum: 1
        type: integer
        default: 1
        description: The inclusive lower bound of TCP/UDP destination port range
      destination_port_max:
        example: 22
        maximum: 65535
        minimum: 1
        type: integer
        default: 65535
        description: The inclusive upper bound of TCP/UDP destination port range
      destination_port_min:
        example: 22
        maximum: 65535
        minimum: 1
        type: integer
        default: 1
        description: The inclusive lower bound of TCP/UDP destination port range
      source_port_max:
        example: 65535
        maximum: 65535
        minimum: 1
        type: integer
        default: 65335
        description: The inclusive upper bound of TCP/UDP source port range
      source_port_min:
        example: 49152
        maximum: 65535
        minimum: 1
        type: integer
        default: 1
        description: The inclusive lower bound of TCP/UDP source port range
      protocol: {description: Must be `all` to match all protocols.,
        example: all, type: string}
      source:
          type: "string"
          description: "The source IP address or CIDR block"
          example: "10.0.0.5"
      type: {description: 'The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.', example: 8,
        type: integer, x-isnullable: true}
    title: TupleRule
    type: object
  network_acl:
    properties:
      created_at: {description: The date and time that the network ACL
          was created, format: date-time, type: string}
      crn: {description: The CRN for this network ACL, example: 'crn:v1:bluemix:public:rias:us-south:a/123456::network-acl:a4e28308-8ee7-46ab-8108-9f881f22bdbf',
        format: crn, type: string}
      href: {description: The URL for this network ACL, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls/a4e28308-8ee7-46ab-8108-9f881f22bdbf',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this network ACL,
        example: a4e28308-8ee7-46ab-8108-9f881f22bdbf, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this network ACL,
        example: my-network-acl, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      rules:
        description: The rules for this network ACL
        items:
          $ref: "#/definitions/network_acl_rule"
        type: array
      subnets:
        description: The subnets to which this network ACL is attached
        items:
          $ref: "#/definitions/resource_reference"
        type: array
      resource_group:
        description: The resource group for this network ACL
        $ref: "#/definitions/resource_reference"
      vpc:
        $ref: "#/definitions/resource_reference"
    title: NetworkACL
    type: object
  key:
    properties:
      created_at: {description: The date and time that the key was created,
        format: date-time, type: string}
      crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
        format: crn, type: string}
      fingerprint: {description: The SHA256 fingerprint of the public
          key, example: yxavE4CIOL2NlsqcurRO3xGjkP6m/0mp8ugojH5yxlY,
        type: string}
      href: {description: The URL for this key, example: 'http://us-south.iaas.cloud.ibm.com/v1/keys/a6b1a881-2ce8-41a3-80fc-36316a73f803',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this key, example: a6b1a881-2ce8-41a3-80fc-36316a73f803,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      length:
        description: The length of this key
        enum: [2048, 4096]
        format: int32
        type: integer
        x-isnullable: false
      name: {description: The user-defined name for this key, example: my-key,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      public_key: {description: The public SSH key, example: AAAAB3NzaC1yc2EAAAADAQABAAABAQDDGe50Bxa5T5NDddrrtbx2Y4/VGbiCgXqnBsYToIUKoFSHTQl5IX3PasGnneKanhcLwWz5M5MoCRvhxTp66NKzIfAz7r+FX9rxgR+ZgcM253YAqOVeIpOU408simDZKriTlN8kYsXL7P34tsWuAJf4MgZtJAQxous/2byetpdCv8ddnT4X3ltOg9w+LqSCPYfNivqH00Eh7S1Ldz7I8aw5WOp5a+sQFP/RbwfpwHp+ny7DfeIOokcuI42tJkoBn7UsLTVpCSmXr2EDRlSWe/1M/iHNRBzaT3CK0+SwZWd2AEjePxSnWKNGIEUJDlUYp7hKhiQcgT5ZAnWU121oc5En,
        type: string}
      resource_group:
        $ref: "#/definitions/resource_reference"
      type:
        description: The cryptosystem used by this key
        enum: [rsa]
        type: string
        x-isnullable: false
    title: Key
    type: object
  image:
    properties:
      architecture:
        description: The image architecture
        enum: [amd64, powerpc]
        type: string
      created_at: {description: The date and time that the image was
          created, format: date-time, type: string}
      crn: {description: The CRN for this image, example: 'crn:v1:bluemix:public:rias:us-south-1:a/123456::image:72b27b5c-f4b0-48bb-b954-5becc7c1dcb8',
        format: crn, type: string}
      file:
        description: The checksum and download location of the image
          file
        properties:
          checksum: {description: A SHA-3 checksum of the image file,
            example: 1e26748b7e61580b2d081a6de3645449960053138c5c70747454810e2110372b4c68492c748ced01f4df402a6787269e6891a4ab1cc4e6a62b21d91719950cf2,
            type: string}
          href: {description: The location of the image file, example: 'https://dal.objectstorage.open.softlayer.com/v1/AUTH_4abf7d7bac2c4eda89c03dd3afa7a0a3/images/ubuntu.qcow2',
            format: url, type: string}
          size: {description: The size of the stored image file rounded up to the next gigabyte, type: integer}
        title: ImageFile
        type: object
      format:
        enum: [raw, qcow2, vmdk, vhdx, vdi, ova, box]
        type: string
      href: {description: The URL for this image, example: 'http://us-south.iaas.cloud.ibm.com/v1/images/72b27b5c-f4b0-48bb-b954-5becc7c1dcb8',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this image, example: 72b27b5c-f4b0-48bb-b954-5becc7c1dcb8,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this image, example: my-image,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      operating_system:
        description: The operating system included in this image
        properties:
          architecture:
            description: The operating system architecture
            example: amd64
            type: string
          display_name:
            description: 'A unique, display-friendly name for the operating system'
            example: Ubuntu Server 16.04 LTS amd64
            maxLength: 120
            minLength: 1
            pattern: '^[-A-Za-z0-9 !$@#%&*''=_+:;,?\./\(\)\[\]]+$'
            type: string
          family:
            description: The name of the software family this operating system belongs to
            example: Ubuntu Server
            type: string
          href:
            description: The URL for this operating system
            example: >-
              https://us-south.iaas.cloud.ibm.com/v1/operating_systems/ubuntu-16-amd64
            pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
            type: string
          name:
            description: The unique name of the operating system
            example: ubuntu-16-amd64
            maxLength: 63
            minLength: 1
            pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
            type: string
          vendor:
            description: The vendor of the operating system
            example: Canonical
            type: string
          version:
            description: The major release version of this operating system
            example: 16.04 LTS
            type: string
        title: OperatingSystem
        type: object
      resource_group:
        $ref: "#/definitions/ResourceReferenceWithOutCrn"
      status:
        enum: [pending, available, corrupt]
        type: string
      visibility:
        description: Whether the image is publicly visible or private
          to the account
        enum: [public, private]
        type: string
    title: Image
    type: object
  ImagePatch:
    properties:
      name:
        example: my-image
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The unique user-defined name for this image. Names starting with
          "ibm-" are not allowed.
    title: ImagePatch
    type: object
  ImageTemplate:
    properties:
      name:
        example: my-image
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The unique user-defined name for this image. Names starting with
          \"ibm-\" are not allowed. If unspecified, the name will be a hyphenated list of
          randomly-selected words.
      file:
        $ref: '#/definitions/ImageFileTemplate'
        description: Details for the image file to be imported
      operating_system:
        $ref: '#/definitions/OperatingSystemIdentity'
      resource_group:
        $ref: "#/definitions/resource_reference"
    title: ImageTemplate
    type: object
    required:
      - operating_system
      - file
  ImageFileTemplate:
    properties:
      href:
        description: The Cloud Object Store (COS) location of the image file
        example: 'cos://us-south/custom-image-vpc-bucket/customImage-0.vhd'
        pattern: '^cos:\/\/([^\/?#]*)([^?#]*)$'
        type: string
    title: ImageFileTemplate
    type: object
    required:
      - href
  OperatingSystem:
    properties:
      href:
        example: https://us-south.iaas.cloud.ibm.com/v1/operating_systems/ubuntu-16-amd64
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
        description: The URL for this operating system
      name:
        example: ubuntu-16-amd64
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The unique name of the operating system
      architecture:
        description: The operating system architecture
        example: amd64
        type: string
      display_name:
        example: Ubuntu Server 16.04 LTS amd64
        maxLength: 120
        minLength: 1
        pattern: '^[-A-Za-z0-9 !$@#%&*''=_+:;,?\./\(\)\[\]]+$'
        type: string
        description: 'A unique, display-friendly name for the operating system'
      family:
        description: The name of the software family this operating system belongs to
        example: Ubuntu Server
        type: string
      vendor:
        description: The vendor of the operating system
        example: Canonical
        type: string
      version:
        description: The major release version of this operating system
        example: 16.04 LTS
        type: string
    required:
      - href
      - name
      - architecture
      - display_name
      - family
      - vendor
      - version
    title: OperatingSystem
    type: object
  OperatingSystemCollection:
    properties:
      first:
        description: A reference to the first page of resources
        properties:
          href:
            example: https://us-south.iaas.cloud.ibm.com/v1/operating_systems?limit=20
            pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
            type: string
            description: The URL for the first page of resources
        required:
          - href
        type: object
      limit:
        description: The maximum number of resources that can be returned by the request
        example: 20
        format: int64
        maximum: 100
        minimum: 1
        type: integer
      next:
        description: A reference to the next page of resources; this reference is
          included for all pages

          except the last page
        properties:
          href:
            example: https://us-south.iaas.cloud.ibm.com/v1/operating_systems?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20
            pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
            type: string
            description: The URL for the next page of resources
        required:
          - href
        type: object
      operating_systems:
        description: Collection of operating systems
        items:
          $ref: '#/definitions/OperatingSystem'
        type: array
    required:
      - first
      - limit
      - operating_systems
    title: OperatingSystemCollection
    type: object
  OperatingSystemIdentity:
    example:
      name: ubuntu-16-amd64
    properties:
      name:
        example: ubuntu-16-amd64
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The unique name of the operating system
    required:
      - name
    title: OperatingSystemIdentity
    type: object
  floating_ip:
    properties:
      address: {description: The globally unique IP address, example: 203.0.113.1,
        type: string}
      created_at: {description: The date and time that the floating
          IP was created, format: date-time, type: string}
      id: {description: The unique identifier for this floating ip, example: 1a15dca5-7e33-45e1-b7c5-bc690e569531,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}   
      crn: {description: The CRN for this floating ip, example: 'crn:v1:bluemix:public::us-south::gt:floating-ip:203.0.113.1',
        format: crn, type: string}
      href: {description: The URL for this floating ips, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips/203.0.113.1',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      name: {description: The user-defined name for this floating ip,
        example: my-floating-ip, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      resource_group:
        $ref: "#/definitions/resource_reference"
      status:
        description: The status of the floating ip
        enum: [pending, available,failed,deleting]
        example: available
        type: string
      target:
        description: The target of this floating ip
        properties:
          crn: {description: The CRN for this public gateway, example: 'crn:v1:bluemix:public::us-south::gt:public-gateway:dc5431ef-1fc6-4861-adc9-a59d077d1241',
            format: crn, type: string}
          href: {description: The URL for this gateway, example: 'http://us-south.iaas.cloud.ibm.com/v1/gateways/dc5431ef-1fc6-4861-adc9-a59d077d1241',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          id: {description: The unique identifier for this public gateway,
            example: dc5431ef-1fc6-4861-adc9-a59d077d1241, format: uuid,
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            type: string}
          name: {description: The user-defined name for this public
              gateway, example: my-gateway, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
            type: string}
          primary_ipv4_address: {description: The primary IPv4 address,
            type: string}
        title: PublicGatewayReference
        type: object
      zone:
        description: The zone the floating ip resides in
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        title: ZoneReference
        type: object
    title: FloatingIP
    type: object
  address_pool_prefix:
    properties:
      cidr: {description: The CIDR block, example: 10.0.0.0/24, type: string}
      created_at: {description: The date and time that the prefix was
          created, format: date-time, type: string}
      has_subnets: {description: Indicates whether subnets exist with
          addresses from this prefix., type: boolean}
      href: {description: The URL for this prefix, example: 'http://us-south.iaas.cloud.ibm.com/v1/address_pools/8e454ead-0db7-48ac-9a8b-2698d8c470a7/prefixes/1a15dca5-7e33-45e1-b7c5-bc690e569531',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this prefix, example: 1a15dca5-7e33-45e1-b7c5-bc690e569531,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: 'The user-defined name for this prefix. By
          default, the base IP address will be the name. For example,
          for 10.0.0.0/24 the name will be 10.0.0.0.', example: my-address-pool-prefix-2,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      zone:
        description: The zone this address pool prefix is to belong
          to
        properties:
          href: {description: The URL for this zone, example: 'http://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1',
            format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
            type: string}
          name: {description: The name for this zone, example: us-south-1,
            format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
        required: [name, href]
        title: ZoneReference
        type: object
    required: [id, name, href, cidr, zone, created_at, has_subnets]
    title: AddressPoolPrefix
    type: object
  address_pool:
    properties:
      created_at: {description: The date and time that the address pool
          was created, format: date-time, type: string}
      crn: {description: The CRN for this address pool, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::address_pool:e16378f7-33c8-47e3-b112-2f30d780463e',
        format: crn, type: string}
      href: {description: The URL for this address pool, example: 'http://us-south.iaas.cloud.ibm.com/v1/address_pools/e16378f7-33c8-47e3-b112-2f30d780463e',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this address pool,
        example: e16378f7-33c8-47e3-b112-2f30d780463e, format: uuid,
        pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this address pool,
        example: my-address-pool, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
        type: string}
      vpc:
        $ref: "#/definitions/resource_reference"
    required: [id, href, name, created_at, vpc]
    title: AddressPool
    type: object
  vpc:
    properties:
      classic_access: {
        description: "Indicates whether this VPC is connected to Classic Infrastructure. If true, this VPC's\nresources have private network connectivity to the account's Classice Infrastructure\nresources. Only one VPC on an account may be connected in this way. This value is set at\ncreation and subsequently immutable.\n",
        type: boolean}
      created_at: {description: The date and time that the VPC was created,
        format: date-time, type: string}
      crn: {description: The CRN for this VPC, example: 'crn:v1:bluemix:public:gt::a/123456::vpc:4727d842-f94f-4a2d-824a-9bc9b02c523b',
        format: crn, type: string}
      default_network_acl:
        $ref: "#/definitions/resource_reference"
      default_security_group:
        $ref: "#/definitions/resource_reference"
      href: {description: The URL for this VPC, example: 'http://us-south.iaas.cloud.ibm.com/v1/vpcs/4727d842-f94f-4a2d-824a-9bc9b02c523b',
        format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
        type: string}
      id: {description: The unique identifier for this VPC, example: 4727d842-f94f-4a2d-824a-9bc9b02c523b,
        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        type: string}
      name: {description: The user-defined name for this VPC, example: my-vpc,
        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
      status:
        enum: [available, pending, deleting, failed]
        type: string
      resource_group:
        $ref: "#/definitions/resource_reference"
    title: VPC
    type: object
  riaaserror:
    properties:
      errors:
        description: Array of errors
        items:
          properties:
            code: {description: A snake case string succinctly identifying
                the problem, example: missing_field, x-isnullable: false, pattern: '^[a-z]+(_[a-z]+)*$',
              type: string}
            message: {description: An explanation of the solution to the problem,
              example: The `flavor.id` field is required.,x-isnullable: false, type: string}
            more_info: {description: Link to documentation about this error,
              example: 'https://console.cloud.ibm.com/docs/iaas/servers.html#template',
              format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
              type: string}
            target:
              properties:
                name: {description: 'The name of the problematic field, query
                    parameter, or header', example: flavor.id, x-isnullable: false, type: string}
                type:
                  description: The type of input where the problem was
                  enum: [field, parameter, header]
                  example: field
                  type: string
                  x-isnullable: false
              required: [type, name]
              title: ErrorTarget
              type: object
          title: Error
          type: object
        type: array
      trace: {description: Unique error identifier, example: b1fd1314d09b7aced81414f8f0f30f9a,
        format: id, pattern: '^[-0-9a-zA-Z_]+$', 
        type: string}
    required: [errors]
    title: ErrorContainer
    type: object
  DummyEmptyTemplate: 
    properties:
      dumpProps:
        description: Dummy property
        type: string
    type: object
  ErrorTarget:
    properties:
      name:
        description: 'The name of the problematic field, query parameter, or header'
        example: zone.name
        type: string
      type:
        description: The type of input where the problem was
        enum:
          - field
          - header
          - parameter
        example: field
        type: string
      value:
        description: >-
          If present, the problematic value within the field, query parameter,
          or header
        type: string
    required:
      - name
      - type
    title: ErrorTarget
    type: object
  Error:
    properties:
      code:
        description: A snake case string succinctly identifying the problem
        example: missing_field
        pattern: '^[a-z]+(_[a-z]+)*$'
        type: string
      message:
        description: An explanation of the problem
        example: The `zone.name` field is required.
        type: string
      more_info:
        description: Link to documentation about this error
        example: 'https://console.bluemix.net/docs/iaas/instances.html#template'
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
      target:
        $ref: '#/definitions/ErrorTarget'
    required:
      - code
      - message
    title: Error
    type: object
  ErrorContainer:
    properties:
      errors:
        description: Array of errors
        items:
          $ref: '#/definitions/Error'
        type: array
      trace:
        description: Unique error identifier
        example: b1fd1314d09b7aced81414f8f0f30f9a
        maxLength: 64
        minLength: 1
        pattern: '^[-0-9a-zA-Z_]+$'
        type: string
    required:
      - errors
      - trace
    title: ErrorContainer
    type: object
  RegionReference:
    properties:
      href:
        description: The URL for this region
        example: 'https://us-south.iaas.cloud.ibm.com/v1/regions/us-south'
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
      name:
        description: The name for this region
        example: us-south
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
    required:
      - name
      - href
    title: RegionReference
    type: object
  Zone:
    properties:
      href:
        description: The URL for this zone
        example: >-
          https://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
      name:
        description: The name for this zone
        example: us-south-1
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
      region:
        $ref: '#/definitions/RegionReference'
        description: The region this zone belongs to
      status:
        description: The availability status of this zone.
        enum:
          - available
          - impaired
          - unavailable
        type: string
    required:
      - name
      - href
      - region
      - status
    title: Zone
    type: object
  ZoneIdentityByName:
    properties:
      name:
        description: The name for this zone
        example: us-south-1
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
    required:
      - name
    title: ZoneIdentityByName
    type: object
  IP:
    properties:
      address:
        example: 192.168.3.4
        pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
        type: string
    title: IP
    type: object
  LifecycleState:
    enum:
      - deleted
      - deleting
      - failed
      - pending
      - stable
      - updating
      - waiting
    example: stable
    type: string
  ZoneReference:
    properties:
      href:
        description: The URL for this zone
        example: >-
          https://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
      name:
        description: The name for this zone
        example: us-south-1
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
    required:
      - name
      - href
    title: ZoneReference
    type: object
  CIDR:
    example: 192.168.3.0/24
    pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
    type: string
  CIDRBlockIdentity:
    properties:
      cidr_block:
        description: 'A range of IPv4 addresses, in CIDR format.'
        example: 10.0.0.0/24
        type: string
    required:
      - cidr_block
    title: CIDRBlockIdentity
  Route:
    properties:
      id:
        maxLength: 64
        minLength: 1
        pattern: '^[-0-9a-z_]+$'
        type: string
        description: The unique identifier for this route
        example: 1a15dca5-7e33-45e1-b7c5-bc690e569531
      href:
        example: https://us-south.iaas.cloud.ibm.com/v1/vpcs/8e454ead-0db7-48ac-9a8b-2698d8c470a7/routes/1a15dca5-7e33-45e1-b7c5-bc690e569531
        pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$'
        type: string
        description: The URL for this route
      name:
        example: my-route-1
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The user-defined name for this route
      created_at:
        description: The date and time that the route was created
        format: date-time
        type: string
      destination:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: The destination of the route
      lifecycle_state:
        allOf:
          - $ref: '#/definitions/LifecycleState'
          - description: The lifecycle state of the route
      next_hop:
        description: The next hop packets will be routed to
        example:
          address: 192.168.3.4
        $ref: '#/definitions/IP'
      zone:
        allOf:
          - $ref: '#/definitions/ZoneReference'
          - description: The zone for which this route applies.
    required:
      - id
      - href
      - name
      - created_at
      - destination
      - lifecycle_state
      - next_hop
      - zone
    title: Route
    type: object
  RouteCollection:
    properties:
      routes:
        description: Collection of routes
        items:
          $ref: '#/definitions/Route'
        type: array
    required:
      - routes
    title: RouteCollection
    type: object
  RouteNextHopIP:
    $ref: '#/definitions/IP'
    description: The IP address of the next hop to which to route packets
    type: object
  RoutePatch:
    properties:
      name:
        example: my-route-2
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description: The user-defined name for this route. Names must be unique within
          the VPC the route resides in.
    title: RoutePatch
  RouteTemplate:
    properties:
      name:
        example: my-route-2
        maxLength: 63
        minLength: 1
        pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$'
        type: string
        description:
          The user-defined name for this route. If unspecified, the name will
          be a hyphenated list of randomly-selected words. Names must be unique within the VPC
          the route resides in.
      destination:
        allOf:
          - $ref: '#/definitions/CIDR'
          - description: The destination of the route
      next_hop:
        example:
          address: 192.168.3.4
        $ref: '#/definitions/RouteNextHopIP'
      zone:
        $ref: '#/definitions/ZoneIdentityByName'
        description: The zone for which this route applies.
    title: RouteTemplate
    required:
      - destination
      - next_hop
      - zone
    type: object
paths:
  /floating_ips:
    get:
      consumes: [application/json]
      description: This request retrieves all floating ips in the region. Floating
        IPs allow ingress and egress traffic from the Internet to a server.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the specified zone,
        in: query, name: zone.name, required: false, type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              floating_ips:
                description: Collection of floating ips
                items:
                  $ref: "#/definitions/floating_ip"
                type: array
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/floating_ips?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}              
            required: [floating_ips]
            title: FloatingIPCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all floating ips
      tags: [Network]
    post:
      description: This request reserves a new floating ip.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          example:
            name: my-new-floating-ip
            target: {id: 69e55145-cc7d-4d8e-9e1f-cc3fb60b1793}
          properties:
            name: {description: The user-defined name for this floating ip, example: my-floating-ip,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource,
                  example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                  pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            target:
              description: The target this address is to be associated with
              properties:
                crn: {description: The CRN for this network interface, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
                  format: crn, type: string}
                id: {description: The unique identifier for this network interface,
                  example: 10c02d81-0ecb-4dc5-897d-28392913b81e, format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this network interface,
                  example: my-network-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                  type: string}
              title: NetworkInterfaceIdentityByName
              type: object
              x-isnullable: true
            zone:
              description: The identity of the zone to provision a floating floating IP in
              properties:
                name: {description: The name for this zone, example: us-south-1, format: name,
                  pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: ZoneIdentity
              type: object
              x-isnullable: true
          title: FloatingIPTemplateWithTarget
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/floating_ip"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Reserves a floating ip
      tags: [Network]
  /floating_ips/{id}:
    delete:
      consumes: [application/json]
      description: This request releases a floating ip. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The floating ip identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: The floating ip was released successfully.
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Releases specified floating ip
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single floating ip specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The floating ip identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/floating_ip"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified floating ip
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a floating ip's name and/or target.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The floating ip identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this key, example: my-key,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            target:
              properties:
                id: {description: The unique identifier for this resource group, example: dc5431ef-1fc6-4861-adc9-a59d077d1241,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: NetworkInterfaceIdentity
              type: object
          title: FloatingIPPatch
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/floating_ip"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified floating ip
      tags: [Network]
  /images:
    get:
      consumes: [application/json]
      description: This request retrieves all images available in the region. Images
        represent a specific software configuration for a server. Some images are
        system-provided. Images can also be created from servers or imported from
        another source.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: The resource identifier, in: query, name: resourceGroupID, required: false,
        type: string}
      - description: Filters the collection to images with the specified visibility
        enum: [public, private]
        in: query
        name: visibility
        required: false
        type: string
      - in: query
        name: future_version
        description: allows any date string to be accepted, enabling testing of features still under development
        type: boolean
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/images?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              images:
                description: Collection of images
                items:
                  $ref: "#/definitions/image"
                type: array
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/images?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [images]
            title: ImageCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all images
      tags: [Compute]
    post:
      description: This request creates a new image from an image template. The image
        template object is

        structured in the same way as a retrieved image, and contains the
        information necessary to

        create the new image. A URL to the image file on object storage must be
        provided.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: query
        name: future_version
        description: allows any date string to be accepted, enabling testing of features still under development
        type: boolean
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/ImageTemplate"
      responses:
        201:
          description: dummy
          headers:
            Location: {description: Upload URL for image file, type: string}
          schema:
            $ref: "#/definitions/image"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates an image
      tags: [Compute]
  /images/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes an image. This operation cannot be reversed.
        It will not succeed for system-provided images.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The image identifier, in: path, name: id, required: true, type: string}
      - in: query
        name: future_version
        description: allows any date string to be accepted, enabling testing of features still under development
        type: boolean
      produces: [application/json]
      responses:
        202:
          description: The image deletion request was accepted.
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified image
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request retrieves a single image specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The image identifier, in: path, name: id, required: true, type: string}
      - in: query
        name: future_version
        description: allows any date string to be accepted, enabling testing of features still under development
        type: boolean
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/image"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified image
      tags: [Compute]
    patch:
      consumes: [application/json]
      description: This request updates an image's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The image identifier, in: path, name: id, required: true, type: string}
      - in: query
        name: future_version
        description: allows any date string to be accepted, enabling testing of features still under development
        type: boolean
      - in: body
        name: Request body
        required: true
        schema:
          $ref: '#/definitions/ImagePatch'
      produces: [application/json]
      responses:
        200:
          description: dummy
          headers:
            Location: {description: Upload URL for image file, type: string}
          schema:
            $ref: "#/definitions/image"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates an image's name
      tags: [Compute]
  /operating_systems:
    get:
      consumes: [application/json]
      description: This request retrieves all operating systems.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/OperatingSystemCollection"
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all operating systems
      tags: [Compute]
  /operating_systems/{name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single operating system specified by the name
        in the URL.
      parameters:
        - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
        - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
        - description: The operating system name
          in: path
          name: name
          required: true
          type: string
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/OperatingSystem"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves an operating system
      tags: [Compute]
  /keys:
    get:
      consumes: [application/json]
      description: This request retrieves all keys. A key contains a public 2048-bit
        RSA SSH key which may be installed on servers when they are created. Private
        keys are not stored by the system.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/keys?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              keys:
                description: Collection of keys
                items:
                  $ref: "#/definitions/key"
                type: array
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/keys?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [keys]
            title: KeyCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all keys
      tags: [Compute]
    post:
      description: This request imports a new key from a key template containing a
        public 2048-bit RSA SSH key.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this key, example: my-key,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            public_key: {description: A public SSH key to be imported into the system,
              example: AAAAB3NzaC1yc2EAAAADAQABAAABAQDDGe50Bxa5T5NDddrrtbx2Y4/VGbiCgXqnBsYToIUKoFSHTQl5IX3PasGnneKanhcLwWz5M5MoCRvhxTp66NKzIfAz7r+FX9rxgR+ZgcM253YAqOVeIpOU408simDZKriTlN8kYsXL7P34tsWuAJf4MgZtJAQxous/2byetpdCv8ddnT4X3ltOg9w+LqSCPYfNivqH00Eh7S1Ldz7I8aw5WOp5a+sQFP/RbwfpwHp+ny7DfeIOokcuI42tJkoBn7UsLTVpCSmXr2EDRlSWe/1M/iHNRBzaT3CK0+SwZWd2AEjePxSnWKNGIEUJDlUYp7hKhiQcgT5ZAnWU121oc5En,
              type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource,
                  example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                  pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            type:
              default: rsa
              description: The cryptosystem used by this key
              enum: [rsa]
              type: string
          required: [public_key]
          title: KeyTemplate
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/key"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a key
      tags: [Compute]
  /keys/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a key. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The key identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: The key was deleted successfully.
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified key
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request retrieves a single key specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The key idenitifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/key"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified key
      tags: [Compute]
    patch:
      consumes: [application/json]
      description: This request updates a key's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The key identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-network-acl}
          properties:
            name: {description: The user-defined name for this key, example: my-network-acl,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/key"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified key
      tags: [Compute]
  /network_acls:
    get:
      consumes: [application/json]
      description: This request retrieves all network ACLs in the region. A network
        ACL defines a set of packet filtering (5-tuple) rules for all traffic in and
        out of a subnet. Both allow and deny rules can be defined, and rules are stateless
        such that reverse traffic in response to allowed traffic is not automatically
        permitted.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
          type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              network_acls:
                description: Collection of network ACLs
                items:
                  $ref: "#/definitions/network_acl"
                type: array
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [network_acls]
            title: NetworkACLCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all network ACLs
      tags: [Network]
    post:
      description: This request creates a new network ACL from a network ACL template.
        The network ACL template object is structured in the same way as a retrieved
        network ACL, and contains the information necessary to create the new network
        ACL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: false
        schema:
          example: {name: my-network-acl}
          properties:
            name: {description: The user-defined name for this network ACL, example: my-network-acl,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            vpc:
              $ref: "#/definitions/resource_reference"
            rules:
              description: Collection of rule templates for rules to be created alongwith the network ACL
              items:
                properties:
                  name: {description: The user-defined name for this network ACL rule,
                      example: my-network-acl-rule-2, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                      type: string}
                  source:
                    type: "string"
                    description: "The source IP address or CIDR block"
                    example: "10.0.0.5"
                  destination:
                    type: "string"
                    description: "The destination IP address or CIDR block"
                    example: "192.168.0.0/24"
                  direction:
                    type: "string"
                    description: "Whether the traffic to be matched is ingress or egress"
                    enum:
                      - ingress
                      - egress
                  action:
                    type: "string"
                    description: "Whether to allow or deny matching traffic"
                    enum:
                      - allow
                      - deny
                  code_max: {description: 'The highest in the range of ICMP codes
                      to be matched; if unspecified, `255` is used. This can be specified
                      only if type_min and type_max are equal.', example: 15, type: string}
                  code_min: {description: 'The lowest in the range of ICMP codes to
                      be matched; if unspecified, `0` is used. This can be specified
                      only if type_min and type_max are equal.', example: 0, type: string}
                  port_max:
                    example: 22
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 65535
                    description: The inclusive upper bound of TCP/UDP destination port range
                  port_min:
                    example: 22
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 1
                    description: The inclusive lower bound of TCP/UDP destination port range
                  destination_port_max:
                    example: 22
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 65535
                    description: The inclusive upper bound of TCP/UDP destination port range
                  destination_port_min:
                    example: 22
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 1
                    description: The inclusive lower bound of TCP/UDP destination port range
                  source_port_max:
                    example: 65535
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 65335
                    description: The inclusive upper bound of TCP/UDP source port range
                  source_port_min:
                    example: 49152
                    maximum: 65535
                    minimum: 1
                    type: integer
                    default: 1
                    description: The inclusive lower bound of TCP/UDP source port range
                  protocol: {description: Must be `all` to match all protocols., example: all,
                    type: string}
                  type_max: {description: 'The highest in the range of ICMP types
                      to be matched; if unspecified, `255` is used.', example: 3,
                    type: string}
                  type_min: {description: 'The lowest in the range of ICMP types to
                      be matched; if unspecified, `0` is used.', example: 3, type: string}
                title: TupleRuleTemplateNetworkACLContext
                type: object
              type: array
            source_network_acl:
              description: Optional network ACL to copy rules from
              properties:
                crn: {description: The CRN for this network ACL, example: 'crn:v1:bluemix:public:rias:us-south:a/123456::network-acl:a4e28308-8ee7-46ab-8108-9f881f22bdbf',
                  format: crn, type: string}
                id: {description: The unique identifier for this network ACL, example: a4e28308-8ee7-46ab-8108-9f881f22bdbf,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this network ACL, example: my-network-acl,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: NetworkACLIdentityByName
              type: object
              x-omitempty: true
            resource_group:
              description: The resource group for this network ACL
              properties:
                id: {description: The unique identifier for this resource group, example: fee82deba12e4c0fb69c3b09d1f12345,
                  format: uuid, pattern: '^[0-9a-f]{32}$',
                  type: string}
              title: ResourceGroupIdentity
              type: object
          title: NetworkACLTemplateFromSource
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a network ACL
      tags: [Network]
  /network_acls/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a network ACL. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified network ACL
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single network ACL specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified network ACL
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a network ACL's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-acl}
          properties:
            name: {description: The user-defined name for this acl, example: my-acl,
             format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a network ACL
      tags: [Network]
  /network_acls/{network_acl_id}/rules:
    get:
      consumes: [application/json]
      description: This request retrieves all rules for a network ACL. These rules
        can allow or deny traffic between a source CIDR block and a destination CIDR
        block over a particular protocol and port range.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: network_acl_id,
        required: true, type: string}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - description: Filters the collection to rules with the specified direction
        enum: [ingress, egress]
        in: query
        name: direction
        required: false
        type: string
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls/a4e28308-8ee7-46ab-8108-9f881f22bdbf/rules?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/network_acls/a4e28308-8ee7-46ab-8108-9f881f22bdbf/rules?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              rules:
                description: Collection of rules
                items:
                  $ref: "#/definitions/network_acl_rule"
                type: array
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [rules]
            title: TupleRuleCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all rules for a network ACL
      tags: [Network]
    post:
      description: This request creates a new rule from a rule template. The rule
        template object is structured in the same way as a retrieved rule, and contains
        the information necessary to create the new rule.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: network_acl_id,
        required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this network ACL rule,
                example: my-network-acl-rule-2, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                type: string}
            source:
              type: "string"
              description: "The source IP address or CIDR block"
              example: "10.0.0.5"
            destination:
              type: "string"
              description: "The destination IP address or CIDR block"
              example: "192.168.0.0/24"
            direction:
              type: "string"
              description: "Whether the traffic to be matched is ingress or egress"
              enum:
                - ingress
                - egress
            action:
              type: "string"
              description: "Whether to allow or deny matching traffic"
              enum:
                - allow
                - deny
            before:
              properties:
                id: {description: The unique identifier for this rule, example: 8daca77a-4980-4d33-8f3e-7038797be8f9, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', format: url, type: string}
              type: object
            code: {description: 'The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.', example: 0, type: integer, x-isnullable: true}
            port_max:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 65535
              description: The inclusive upper bound of TCP/UDP destination port range
            port_min:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP destination port range
            destination_port_max:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 65535
              description: The inclusive upper bound of TCP/UDP destination port range
            destination_port_min:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP destination port range
            source_port_max:
              example: 65535
              maximum: 65535
              minimum: 1
              type: integer
              default: 65335
              description: The inclusive upper bound of TCP/UDP source port range
            source_port_min:
              example: 49152
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP source port range
            protocol: {description: Must be `all` to match all protocols., example: all,
              type: string}
            type: {description: 'The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.', example: 3,type: integer,x-isnullable: true}
          title: TupleRuleTemplateNetworkACLContext
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl_rule"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a rule
      tags: [Network]
  /network_acls/{network_acl_id}/rules/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a rule. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: network_acl_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified rule
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single rule specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: network_acl_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl_rule"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified rule
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a rule with the information in a provided
        rule patch. The rule patch object is structured in the same way as a retrieved
        rule and contains only the information to be updated.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The network ACL identifier, in: path, name: network_acl_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this network ACL rule,
                example: my-network-acl-rule-2, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                type: string}
            source:
              type: "string"
              description: "The source IP address or CIDR block"
              example: "10.0.0.5"
            destination:
              type: "string"
              description: "The destination IP address or CIDR block"
              example: "192.168.0.0/24"
            direction:
              type: "string"
              description: "Whether the traffic to be matched is ingress or egress"
              enum:
                - ingress
                - egress
            action:
              type: "string"
              description: "Whether to allow or deny matching traffic"
              enum:
                - allow
                - deny
            before:
              properties:
                id: {description: The unique identifier for this rule, example: 8daca77a-4980-4d33-8f3e-7038797be8f9, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', format: url, type: string}
              type: object
            code: {description: 'The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.', example: 0, type: integer, x-isnullable: true}
            port_max:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 65535
              description: The inclusive upper bound of TCP/UDP destination port range
            port_min:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP destination port range
            destination_port_max:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 65535
              description: The inclusive upper bound of TCP/UDP destination port range
            destination_port_min:
              example: 22
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP destination port range
            source_port_max:
              example: 65535
              maximum: 65535
              minimum: 1
              type: integer
              default: 65335
              description: The inclusive upper bound of TCP/UDP source port range
            source_port_min:
              example: 49152
              maximum: 65535
              minimum: 1
              type: integer
              default: 1
              description: The inclusive lower bound of TCP/UDP source port range
            protocol: {description: Must be `all` to match all protocols., example: all,
              type: string}
            type: {description: 'The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.', example: 3,type: integer, x-isnullable: true}
          title: TupleRuleTemplateNetworkACLContext
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl_rule"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a rule
      tags: [Network]
  /public_gateways:
    get:
      consumes: [application/json]
      description: This request retrieves all public gateways. A public gateway is
        a virtual network device associated with a VPC which allows access to the
        Internet. A public gateway resides in a zone and can only be connected to
        subnets in the same zone.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the specified zone,
        in: query, name: zone.name, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          identifier, in: query, name: vpc.id, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          CRN, in: query, name: vpc.crn, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          name, in: query, name: vpc.name, required: false, type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/public_gateways?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              public_gateways:
                description: Collection of public gateways
                items:
                  $ref: "#/definitions/public_gateway"
                type: array
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [public_gateways]
            title: PublicGatewayCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves public gateways
      tags: [Network]
    post:
      description: This request creates a new public gateway from a public gateway
        template. A public gateway can be created with an existing unbound floating
        address. If a floating address is not supplied, one will be created and bound
        to the public gateway. Once a public gateway is created, its external address
        cannot be unbound. The only way to rebind a floating address bound to a public
        gateway is to delete the gateway.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          properties:
            floating_ip:
              example: {address: 203.0.113.1}
              properties:
                address: {description: The globally unique IP address, example: 203.0.113.1,
                  type: string}
                crn: {description: The CRN for this floating ip, example: 'crn:v1:bluemix:public::us-south::gt:floating-ip:203.0.113.1',
                  format: crn, type: string}
                id: {description: The unique identifier for this floating ip, example: 56969d60-43e9-465c-883c-b9f7363e78e8,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: FloatingIPTemplateBasic
              type: object
            resource_group:
              description: The resource group for this network ACL
              properties:
                id: {description: The unique identifier for this resource group, example: 56969d60-43e9-465c-883c-b9f7363e78e8,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: ResourceGroupIdentity
              type: object
            name: {description: The user-defined name for this public gateway, example: my-gateway,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            vpc:
              description: The VPC this public gateway will serve
              properties:
                id: {description: The unique identifier for this VPC, example: 4727d842-f94f-4a2d-824a-9bc9b02c523b,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: VPCIdentity
              type: object
            zone:
              description: The Zone where this public gateway will be created
              properties:
                name: {description: The name for this zone, example: us-south-1, format: name,
                  pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: ZoneIdentity
              type: object
          required: [vpc, zone]
          title: PublicGatewayTemplate
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/public_gateway"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a public gateway
      tags: [Network]
  /public_gateways/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a public gateway. This operation cannot be
        reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The public gateway identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified public gateway
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single public gateway specified by the
        identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The public gateway idenitifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/public_gateway"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified public gateway
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a public gateway's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The public gateway identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-public_gateway}
          properties:
            name: {description: The user-defined name for this public gateway, example: my-public_gateway,
             format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/public_gateway"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a public gateway's name
      tags: [Network]
  /regions:
    get:
      consumes: [application/json]
      description: "This request retrieves all regions. Each\_region\_is a separate\
        \ geographic area containing multiple isolated zones. Resources can be provisioned\
        \ into a one or more zones in a region. Each zone is isolated, but connected\
        \ to other zones in the same region with low-latency and high-bandwidth links.\
        \ Regions represent the top-level of fault isolation available. Resources\
        \ deployed within a single region also benefit from the low latency afforded\
        \ by geographic proximity."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              regions:
                description: Array of Region objects
                items:
                  $ref: "#/definitions/region"
                type: array
            required: [regions]
            title: RegionCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all regions
      tags: [Geography]
  /regions/{name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single region specified by the name in
        the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The region name, in: path, name: name, required: true, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/region"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a region
      tags: [Geography]
  /regions/{region_name}/zones:
    get:
      consumes: [application/json]
      description: This request retrieves all zones in a region. Zones represent logically-isolated
        data centers with high-bandwidth, low-latency interconnects to other zones
        in the same region. Faults in a zone do not impact other zones.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The region name, in: path, name: region_name, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              zones:
                description: Collection of zones
                items: 
                  $ref: "#/definitions/zone"
                type: array
            required: [zones]
            title: ZoneCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all zones in a region
      tags: [Geography]
  /regions/{region_name}/zones/{zone_name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single zone specified by the region and
        zone names in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The region name, in: path, name: region_name, required: true,
        type: string}
      - {description: The zone name, in: path, name: zone_name, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/zone"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a zone
      tags: [Geography]
  /security_groups:
    get:
      consumes: [application/json]
      description: Retrieves a paginated list of all security groups belonging to
        this account.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the VPC of the specified
          identifier, in: query, name: vpc.id, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          CRN, in: query, name: vpc.crn, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          name, in: query, name: vpc.name, required: false, type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/security_groups?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/security_groups?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              security_groups:
                description: Collection of security groups
                items:
                  $ref: "#/definitions/security_group"
                type: array
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [security_groups]
            title: SecurityGroupCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all security groups
      tags: [Network]
    post:
      description: Creates a new security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: 'The user-assigned name of this security group. If
                the user does not provide a name, one will be automatically assigned.
                Security group names must be unique, within the scope of a user account.',
              example: allow_ssh, type: string}
            rules:
              description: Collection of rule templates for rules to be created along
                with the security group
              items:
                description: When 'protocol' is either of 'tcp' or 'udp', then the
                  rule may also contain fields to specify a port range.
                example:
                  direction: ingress
                  ip_version: ipv4
                  port_max: 22
                  port_min: 22
                  protocol: tcp
                  remote: {cidr: 192.168.0.0/24}
                properties:
                  direction:
                    description: The direction of traffic to enforce (ingress, egress)
                    enum: [ingress, egress]
                    example: ingress
                    type: string
                  ip_version:
                    description: The IP version to enforce (ipv4, ipv6). The format
                      of 'remote.address' or 'remote.cidr_block' must match this field,
                      if they are used. Also, if 'remote' references another security
                      group (ie. using remote.id, remote.name, remote.crn) then this
                      rule will only apply to IP addresses (network interfaces) in
                      that group which match this ip_version.
                    enum: [ipv4, ipv6]
                    example: ipv4
                    type: string
                  protocol:
                    default: all
                    description: The protocol to enforce. Must be one of (icmp, tcp,
                      udp, all). Defaults to 'all' if omitted.
                    enum: [all, icmp, tcp, udp]
                    example: tcp
                    type: string
                  remote:
                    description: Uniquely identifies a security group using any one
                      of ID, CRN, or name.
                    properties:
                      address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12,
                        type: string}
                      cidr_block: {description: 'A range of IPv4 or IPv6 addresses,
                          in CIDR format.', example: 10.0.0.0/24, type: string}
                      crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
                        format: crn, type: string}
                      id: {description: The security group's unique identifier., example: be5df5ca-12a0-494b-907e-aa6ec2bfa271,
                        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                        type: string}
                      name: {description: The security group's user-defined name.,
                        example: my-security-group, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                        type: string}
                    required: [name]
                    title: SecurityGroupIdentityByName
                    type: object
                title: SecurityGroupRuleTemplate
              type: array
              x-omitempty: true
            vpc:
              description: The VPC the server is to be a part of
              example: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
              properties:
                crn: {description: The CRN for this VPC, example: 'crn:v1:bluemix:public:gt::a/123456::vpc:4727d842-f94f-4a2d-824a-9bc9b02c523b',
                  format: crn, type: string}
                id: {description: The unique identifier for this VPC, example: 4727d842-f94f-4a2d-824a-9bc9b02c523b,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this VPC, example: my-vpc,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: VPCIdentityByName
              type: object
            resource_group:
              description: The resource group for this security group
              properties: 
                id: {description: The unique identifier for this resource group, example: 56969d60-43e9-465c-883c-b9f7363e78e8,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string} 
          title: SecurityGroupTemplate
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/security_group"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a security group
      tags: [Network]
  /security_groups/{id}:
    delete:
      consumes: [application/json]
      description: Deletes a security group. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes a security group
      tags: [Network]
    get:
      consumes: [application/json]
      description: Retrieves a single security group specified by the identifier in
        the URL path.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/security_group"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a security group
      tags: [Network]
    patch:
      consumes: [application/json]
      description: Updates the properties of an existing security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: request body
        required: true
        schema:
          properties:
            name: {description: The user-assigned name of this security group. If the user does not provide a name one will be automatically assigned. Security group names must be unique within the scope of a user account, example: allow-ssh, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          title: SecurityGroupPatch
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/security_group"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a security group
      tags: [Network]
  /security_groups/{security_group_id}/network_interfaces:
    get:
      consumes: [application/json]
      description: Retrieves a paginated collection of all the network interfaces
        in a security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              network_interfaces:
                description: Collection of network interfaces
                items:
                  $ref: "#/definitions/server_network_interface"
                type: array
            required: [network_interfaces]
            title: NetworkInterfaceCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a security group's network interfaces
      tags: [Network]
  /security_groups/{security_group_id}/network_interfaces/{id}:
    delete:
      consumes: [application/json]
      description: Removes a network interface from a security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Removes a network interface from a security group.
      tags: [Network]
    get:
      consumes: [application/json]
      description: Gets a network interface in a security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/server_network_interface"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Get a network interface in a security group
      tags: [Network]
    put:
      consumes: [application/json]
      description: Adds an existing network interface to an existing security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: request body
        required: true
        schema:
          $ref: "#/definitions/DummyEmptyTemplate"
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/server_network_interface"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Adds a network interface to a security group
      tags: [Network]
  /security_groups/{security_group_id}/rules:
    get:
      consumes: [application/json]
      description: Retrieves all the rules of a particular security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            description: Collection of rules in a security group
            properties:
              rules:
                description: Array of rules
                items:
                  $ref: "#/definitions/security_group_rule"
                type: array
            required: [rules]
            title: SecurityGroupRuleCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all the rules of a security group
      tags: [Network]
    post:
      description: Creates a new rule on an existing security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            direction:
              description: The direction of traffic to enforce (ingress, egress)
              enum: [ingress, egress]
              example: ingress
              type: string
            ip_version:
              description: The IP version to enforce (ipv4, ipv6). The format
                of 'remote.address' or 'remote.cidr_block' must match this field,
                if they are used. Also, if 'remote' references another security
                group (ie. using remote.id, remote.name, remote.crn) then this
                rule will only apply to IP addresses (network interfaces) in
                that group which match this ip_version.
              enum: [ipv4, ipv6]
              example: ipv4
              type: string
            protocol:
              default: all
              description: The protocol to enforce. Must be one of (icmp, tcp,
                udp, all). Defaults to 'all' if omitted.
              enum: [all, icmp, tcp, udp]
              example: tcp
              type: string
            remote:
              description: Uniquely identifies a security group using any one
                of ID, CRN, or name.
              properties:
                address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12,
                  type: string}
                cidr_block: {description: 'A range of IPv4 or IPv6 addresses,
                    in CIDR format.', example: 10.0.0.0/24, type: string}
                crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
                  format: crn, type: string}
                id: {description: The security group's unique identifier., example: be5df5ca-12a0-494b-907e-aa6ec2bfa271,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              required: [name]
              title: SecurityGroupIdentityByName
              type: object
            code: {description: 'The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.', example: 0, type: integer,x-isnullable: true}
            port_max: {description: 'The highest port in the range of ports
                to be matched; if unspecified, `65535` is used.', example: 65535,
              type: integer,x-isnullable: true}
            port_min: {description: 'The lowest port in the range of ports to
                be matched; if unspecified, `1` is used.', example: 49152, type: integer,x-isnullable: true}
            type: {description: 'The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.', example: 3,type: integer,x-isnullable: true}
          required: [direction, protocol]
          title: SecurityGroupRuleTemplate
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/security_group_rule"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a security group rule
      tags: [Network]
  /security_groups/{security_group_id}/rules/{id}:
    delete:
      description: Deletes a rule from a security group. This operation cannot be
        reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      consumes: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes a security group rule
      tags: [Network]
    get:
      consumes: [application/json]
      description: Retrieves a single security group rule specified by identifier.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/security_group_rule"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a security group rule
      tags: [Network]
    patch:
      consumes: [application/json]
      description: Updates the properties of an existing rule on a security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The security group identifier, in: path, name: security_group_id,
        required: true, type: string}
      - {description: The rule identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            direction:
              description: The direction of traffic to enforce (ingress, egress)
              enum: [ingress, egress]
              example: ingress
              type: string
            ip_version:
              description: The IP version to enforce (ipv4, ipv6). The format
                of 'remote.address' or 'remote.cidr_block' must match this field,
                if they are used. Also, if 'remote' references another security
                group (ie. using remote.id, remote.name, remote.crn) then this
                rule will only apply to IP addresses (network interfaces) in
                that group which match this ip_version.
              enum: [ipv4, ipv6]
              example: ipv4
              type: string
            remote:
              description: Uniquely identifies a security group using any one
                of ID, CRN, or name.
              properties:
                address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12,
                  type: string}
                cidr_block: {description: 'A range of IPv4 or IPv6 addresses,
                    in CIDR format.', example: 10.0.0.0/24, type: string}
                crn: {description: The security group's CRN, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271',
                  format: crn, type: string}
                id: {description: The security group's unique identifier., example: be5df5ca-12a0-494b-907e-aa6ec2bfa271,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              required: [name]
              title: SecurityGroupIdentityByName
              type: object
            code: {description: 'The ICMP traffic code to allow. Valid values from 0 to 255. If unspecified, all codes are allowed. This can only be specified if type is also specified.', example: 0, type: integer,x-isnullable: true}
            port_max: {description: 'The highest port in the range of ports
                to be matched; if unspecified, `65535` is used.', example: 65535,
              type: integer,x-isnullable: true}
            port_min: {description: 'The lowest port in the range of ports to
                be matched; if unspecified, `1` is used.', example: 49152, type: integer,x-isnullable: true}
            type: {description: 'The ICMP traffic type to allow. Valid values from 0 to 254. If unspecified, all types are allowed by this rule.', example: 3,type: integer,x-isnullable: true}
          title: SecurityGroupRuleTemplate
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/security_group_rule"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a security group rule
      tags: [Network]
  /instance/profiles:
    get:
      consumes: [application/json]
      description: This request retrieves all instance profiles available in the region.
        A instance profile specifies the performance characteristics and pricing model
        for a instance.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      produces: [application/json]
      responses:
        200:
          description: instance profiles retrieved successfully
          schema:
            properties:
              first:
                properties:
                  href: {example: 'https://us-south.iaas.cloud.ibm.com/v1/instance/profiles?limit=20'}
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next: {$ref: '#/definitions/Next'}
              profiles:
                description: Collection of instance profiels
                items: {$ref: '#/definitions/instance_profile'}
                type: array
                x-omitempty: true
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            title: instanceProfileCollection
            type: object
      summary: Retrieves all instance profiles
      tags: [Compute]
  /instance/profiles/{name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single instance profile specified by the
        name in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance profile name, in: path, name: name, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance_profile'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified instance action
      tags: [Compute]
  /instances:
    get:
      consumes: [application/json]
      description: This request retrieves all instances in the region.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the specified zone,
        in: query, name: zone.name, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          identifier, in: query, name: vpc.id, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          CRN, in: query, name: vpc.crn, required: false, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          name, in: query, name: vpc.name, required: false, type: string}
      - {description: Filters the collection to instances on the subnet of the specified
          identifier, in: query, name: network_interfaces.subnet.id, required: false,
        type: string}
      - {description: Filters the collection to instances on the subnet of the specified
          CRN, in: query, name: network_interfaces.subnet.crn, required: false, type: string}
      - {description: Filters the collection to instances on the subnet of the specified
          name, in: query, name: network_interfaces.subnet.name, required: false,
        type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/instances?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                type: object
              instances:
                description: Collection of instances
                items: {$ref: '#/definitions/instance'}
                type: array
                x-omitempty: true
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next: {$ref: '#/definitions/Next'}
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            title: instanceCollection
            type: object
      summary: Retrieves all instances
      tags: [Compute]
    post:
      description: This request provisions a new instance for a instance template.
        The instance template object is structured in the same way as a retrieved
        instance, and contains the information necessary to provision the new instance
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          example:
            image: {name: my-image}
            keys:
            - {fingerprint: yxavE4CIOL2NlsqcurRO3xGjkP6m/0mp8ugojH5yxlY}
            type: virtual
            vpc: {name: my-vpc}
          properties:
            boot_volume_attachment:
              description: The boot volume interface for the instance
              properties:
                name: {description: The user-defined name for this volume interface,
                  example: my-volume-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                  type: string}
                delete_volume_on_instance_delete: {default: true, type: boolean, x-isnullable: false, x-omitempty: false}
                volume:
                  description: The identity of the volume to attach to the instance
                    or a template for a new volume
                  properties:
                    billing_term:
                      default: hourly
                      description: The billing term for the volume
                      enum: [hourly, monthly]
                      example: hourly
                      type: string
                    capacity: {default: 100, description: The capacity of the volume
                        in gigabytes, example: 100, maximum: 64000, minimum: 10, type: integer}
                    encryption_key:
                      description: The encryption key for the volume
                      properties:
                        crn: {description: The CRN for the volume encryption key,
                          example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::encryption-key:1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
                          format: crn, type: string}
                      title: VolumeEncryptionKey
                      type: object
                    iops:
                      description: The bandwidth for the volume
                      enum: [1000, 10000, 100000]
                      type: integer
                    name: {description: The user-defined name for this volume, example: my-volume,
                      format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                    profile:
                      properties:
                        crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                          format: crn, type: string}
                        name: {description: The user-defined name for this resource,
                          example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                          type: string}
                      title: reference
                      type: object
                    resource_group:
                      properties:
                        id: {description: The unique identifier for this resource,
                          example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                          type: string}
                      title: idreference
                      type: object
                    source_snapshot:
                      properties:
                        crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                          format: crn, type: string}
                        id: {description: The unique identifier for this resource,
                          example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                          type: string}
                        name: {description: The user-defined name for this resource,
                          example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                          type: string}
                      title: reference
                      type: object                    
                    type:
                      description: The volume type
                      enum: [boot, data]
                      type: string
                  title: BootVolumeTemplateinstanceContext
                  type: object
              title: VolumeAttachmentTemplateinstanceContext
              type: object
            image:
              description: The the identity of the image to be used when provisioning
                the instance
              example: {id: 72b27b5c-f4b0-48bb-b954-5becc7c1dcb8}
              properties:
                crn: {description: The CRN for this image, example: 'crn:v1:bluemix:public:rias:us-south-1:a/123456::image:72b27b5c-f4b0-48bb-b954-5becc7c1dcb8',
                  format: crn, type: string}
                id: {description: The unique identifier for this image, example: 72b27b5c-f4b0-48bb-b954-5becc7c1dcb8,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this image, example: my-image,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: ImageIdentityByName
              type: object
            keys:
              description: The public SSH keys to install on the instance; if no keys
                are provided the instance will be inaccessible unless the image used
                provides a means of access
              example:
              - {id: a6b1a881-2ce8-41a3-80fc-36316a73f803}
              items:
                properties:
                  crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
                    format: crn, type: string}
                  fingerprint: {description: The SHA256 fingerprint of the public
                      key, example: yxavE4CIOL2NlsqcurRO3xGjkP6m/0mp8ugojH5yxlY, type: string}
                  id: {description: The unique identifier for this key, example: a6b1a881-2ce8-41a3-80fc-36316a73f803,
                    format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                    type: string}
                  name: {description: The user-defined name for this key, example: my-key,
                    format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                title: KeyIdentityByFingerprint
                type: object
              type: array
              x-omitempty: true
            name: {description: The user-defined name for this instance, example: my-instance,
              format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
            network_interfaces:
              description: Collection of network interfaces to create for the instance
              items:
                description: network interface
                properties:
                  name: {description: The user-defined name for this network interface,
                    example: my-network-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                    type: string}
                  primary_ipv4_address: {description: The primary IPv4 address, example: 10.0.0.5,
                    type: string}
                  secondary_addresses:
                    description: Collection seconary IP addresses
                    example: [10.0.0.6, '2001:0db8:85a3:0000:0000:8a2e:0370:7335']
                    items: {description: A secondary IP address, type: string}
                    type: array
                    x-omitempty: true
                  security_groups:
                    items:
                      properties:
                        crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                          format: crn, type: string}
                        id: {description: The unique identifier for this resource,
                          example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                          type: string}
                        name: {description: The user-defined name for this resource,
                          example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                          type: string}
                      title: reference
                      type: object
                    type: array
                    x-omitempty: true
                  subnet:
                    properties:
                      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                        format: crn, type: string}
                      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                        type: string}
                      name: {description: The user-defined name for this resource,
                        example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                        type: string}
                    title: reference
                    type: object
                title: NetworkInterfaceTemplate
                type: object
              type: array
              x-omitempty: true
            primary_network_interface:
              description: Primary network interface
              properties:
                floating_ips:
                  description: Optional array of identities and/or templates of floating
                    IPs to associate with this network interface
                  example:
                  - {name: my-new-floating-ip}
                  items:
                    properties:
                      address: {description: The globally unique IP address, example: 203.0.113.1,
                        type: string}
                      crn: {description: The CRN for this floating IP, example: 'crn:v1:bluemix:public::us-south::gt:floating-ip:203.0.113.1',
                        format: crn, type: string}
                      name: {description: The user-defined name for this floating
                          IP, example: my-floating-ip, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                        type: string}
                      resource_group:
                        properties:
                          id: {description: The unique identifier for this resource,
                            example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                            type: string}
                        title: idreference
                        type: object
                    title: FloatingIPTemplateBasic
                    type: object
                  type: array
                  x-omitempty: true
                name: {description: The user-defined name for this network interface,
                  example: my-network-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                  type: string}
                primary_ipv4_address: {description: The primary IPv4 address, example: 10.0.0.5,
                  type: string}
                secondary_addresses:
                  description: Collection seconary IP addresses
                  example: [10.0.0.6, '2001:0db8:85a3:0000:0000:8a2e:0370:7335']
                  items: {description: A secondary IP address, type: string}
                  type: array
                  x-omitempty: true
                security_groups:
                  items:
                    properties:
                      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                        format: crn, type: string}
                      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                        type: string}
                      name: {description: The user-defined name for this resource,
                        example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                        type: string}
                    title: reference
                    type: object
                  type: array
                  x-omitempty: true
                subnet:
                  properties:
                    crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                      format: crn, type: string}
                    id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                      format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                      type: string}
                    name: {description: The user-defined name for this resource, example: my-snapshot,
                      format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                  title: reference
                  type: object
              title: PrimaryNetworkInterfaceTemplate
              type: object
            profile:
              properties:
                crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: reference
              type: object
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            user_data: {description: User data to be made available when setting up
                the instance, type: string}
            volume_attachments:
              description: Collection of volume interfaces
              items:
                description: The boot volume interface for the instance
                properties:
                  name: {description: The user-defined name for this volume interface,
                    example: my-volume-interface, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                    type: string}
                  delete_volume_on_instance_delete: {default: false, description: 'If set to true, when deleting the instance the volume will also be deleted', type: boolean}                  
                  volume:
                    description: The identity of the volume to attach to the instance
                      or a template for a new volume
                    properties:
                      billing_term:
                        default: hourly
                        description: The billing term for the volume
                        enum: [hourly, monthly]
                        example: hourly
                        type: string
                      capacity: {default: 100, description: The capacity of the volume
                          in gigabytes, example: 100, minimum: 10,
                        type: integer}
                      crn: {description: The CRN for this volume, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::volume:1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
                        format: crn, type: string}
                      encryption_key:
                        description: The encryption key for the volume
                        properties:
                          crn: {description: The CRN for the volume encryption key,
                            example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::encryption-key:1a6b7274-678d-4dfb-8981-c71dd9d4daa5',
                            format: crn, type: string}
                        title: VolumeEncryptionKey
                        type: object
                      id: {description: The unique identifier for this volume, example: 1a6b7274-678d-4dfb-8981-c71dd9d4daa5,
                        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                        type: string}
                      iops:
                        description: The bandwidth for the volume
                        enum: [1000, 10000, 100000]
                        type: integer
                      name: {description: The user-defined name for this volume, example: my-volume,
                        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                      profile:
                        properties:
                          crn: {description: The CRN for this profile, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                            format: crn, type: string}
                          name: {description: The user-defined name for this resource,
                            example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                            type: string}
                        title: reference
                        type: object
                      resource_group:
                        properties:
                          id: {description: The unique identifier for this resource,
                            example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                            type: string}
                        title: idreference
                        type: object
                      source_snapshot:
                        properties:
                          crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                            format: crn, type: string}
                          id: {description: The unique identifier for this resource,
                            example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f, format: uuid,
                            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                            type: string}
                          name: {description: The user-defined name for this resource,
                            example: my-snapshot, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',
                            type: string}
                        title: reference
                        type: object
                      type:
                        description: The volume type
                        enum: [boot, data]
                        type: string
                    title: BootVolumeTemplateinstanceContext
                    type: object
                title: VolumeAttachmentTemplateinstanceContext
                type: object
              type: array
              x-omitempty: true
            vpc:
              description: The VPC the instance is to be a part of
              example: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
              properties:
                crn: {description: The CRN for this VPC, example: 'crn:v1:bluemix:public:gt::a/123456::vpc:4727d842-f94f-4a2d-824a-9bc9b02c523b',
                  format: crn, type: string}
                id: {description: The unique identifier for this VPC, example: 4727d842-f94f-4a2d-824a-9bc9b02c523b,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this VPC, example: my-vpc,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: VPCIdentityByName
              type: object
            zone: {$ref: '#/definitions/NameReference'}
          title: instanceFromImageTemplate
          type: object
      responses:
        201:
          description: dummy
          schema: {$ref: '#/definitions/instance'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a instance
      tags: [Compute]
  /instances/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a instance. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified instance
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request retrieves a single instance specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves a instance
      tags: [Compute]
    patch:
      consumes: [application/json]
      description: This request updates a instance with the information in a provided
        instance patch. The instance patch object is structured in the same way as
        a retrieved instance and contains only the information to be updated.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this network ACL, example: my-network-acl,
              format: name, pattern: '^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$', type: string}
            profile:
              properties:
                crn: {description: The CRN for this profile, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: reference
              type: object
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [Compute]
  /instances/{instance_id}/initialization:
    get:
      tags:
      - "Compute"
      summary: "Retrieves configuration used to initialize the instance."
      description: "Retrieves configuration variables used to initialize the instance such as SSH keys and the Windows administrator password."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: "The initialization configuration was retrieved successfully."
          schema: {$ref: '#/definitions/InstanceInitialization'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
  /instances/{instance_id}/actions:
    post:
      description: This request creates a new action which will be queued up to run
        as soon as any currently pending or running actions have completed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            type:
              description: The type of action
              enum: [start, stop, reboot, reset]
              type: string
            force:
              description: If set to true, the action will be forced immediately, and all queued actions deleted. Ignored for the start action.
              type: boolean
          title: instanceActionTemplate
          type: object
      responses:
        201:
          description: dummy
          schema: {$ref: '#/definitions/instance_action'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a new action
      tags: [Compute]
  /instances/{instance_id}/network_interfaces:
    get:
      consumes: [application/json]
      description: This request retrieves all network interfaces on a instance. A
        network interface is an abstract representation of a network interface card
        and connects a instance to a subnet. instances may have more than one network
        interface, but each network interface can be attached to only one subnet.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, x-isnullable: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              network_interfaces:
                description: Collection of network interfaces
                items: {$ref: '#/definitions/instance_network_interface'}
                type: array
                x-omitempty: true
            title: NetworkInterfaceCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all network interfaces on a instance
      tags: [Compute]
    post:
      description: This request creates a new network interface from a network interface
        template. The specified subnet must reside in the same VPC as the instance.
        The network interface template object is structured in the same way as a retrieved
        network interface, and contains the information necessary to create the new
        network interface. Each primary and secondary address in the network interface
        must be contained by one of the specified subnet's CIDR blocks.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example:
            total_ipv4_address_count: 256
            vpc: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
            zone: {name: us-south-1}
          properties:
            name: {description: The user-defined name for this interface, example: my-interface,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            port_speed: {description: The network interface port speed in Mbps, example: 10000,
              type: integer}
            primary_ipv4_address: {description: The primary IPv4 address, example: 10.0.0.5,
              type: string}
            primary_ipv6_address: {description: The primary IPv6 address in any valid
                notation as specified by RFC 4291, example: '2001:0db8:85a3:0000:0000:8a2e:0370:7334',
              type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            secondary_addresses:
              description: Collection seconary IP addresses
              example: [10.0.0.6, '2001:0db8:85a3:0000:0000:8a2e:0370:7335']
              items: {description: A secondary IP address, type: string}
              type: array
              x-omitempty: true
            security_groups:
              example:
              - {id: be5df5ca-12a0-494b-907e-aa6ec2bfa271}
              - {crn: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271'}
              - {name: allow_ssh}
              items:
                properties:
                  crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                    format: crn, type: string}
                  id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                    format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                    type: string}
                  name: {description: The user-defined name for this resource, example: my-snapshot,
                    format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                title: reference
                type: object
              type: array
              x-omitempty: true
            subnet:
              description: The associated subnet
              example: {id: 7ec86020-1c6e-4889-b3f0-a15f2e50f87e}
              properties:
                crn: {description: The CRN for this subnet, example: 'crn:v1:staging:public:gt:us-south-1:a/123456::network-interface:10c02d81-0ecb-4dc5-897d-28392913b81e',
                  format: crn, type: string}
                id: {description: The unique identifier for this subnet, example: 10c02d81-0ecb-4dc5-897d-28392913b81e,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this subnet, example: my-network-interface,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: SubnetReference
              type: object
          title: NetworkInterfaceTemplate
          type: object
      responses:
        201:
          description: dummy
          schema: {$ref: '#/definitions/instance_network_interface'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a network inferface
      tags: [Compute]
  /instances/{instance_id}/network_interfaces/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a network interface. This operation cannot
        be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified network_interface
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request retrieves a single network interface specified by
        the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance_network_interface'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified network interface
      tags: [Compute]
    patch:
      consumes: [application/json]
      description: This request updates a network interface with the information in
        a provided network interface patch. The network interface patch object is
        structured in the same way as a retrieved network interface and can contain
        an updated name and/or port speed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-intf}
          properties:
            name: {description: The user-defined name for this interface, example: my-interface,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            port_speed: {description: The network interface port speed in Mbps, example: 10000,
              type: integer}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance_network_interface'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a network inferface
      tags: [Compute]
  /instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips:
    get:
      consumes: [application/json]
      description: This request retrieves all floating IPs associated with a network
        interface.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: network_interface_id,
        required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: The associated floating IPs were retrieved successfully.
          schema:
            description: Collection of floating IPs
            properties:
              floating_ips:
                description: Collection of floating IPs
                items: {$ref: '#/definitions/floating_ip'}
                type: array
                x-omitempty: true
            title: UnpaginatedFloatingIPCollection
            type: object
        404:
          description: A network interface with the specified identifier could not
            be found.
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all floating IPs associated with a network interface
      tags: [Compute]
  /instances/{instance_id}/network_interfaces/{network_interface_id}/floating_ips/{address}:
    delete:
      consumes: [application/json]
      description: This request disassociates the specified floating IP from the specified
        network interface
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: network_interface_id,
        required: true, type: string}
      - {description: The floating IP address, in: path, name: address, required: true,
        type: string}
      produces: [application/json]
      responses:
        204: {description: The floating IP was disassociated successfully.}
        400:
          description: The specified floating IP could not be disassociated.
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: The specified floating IP address is not associated with the
            network interface with the specified identifier
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Disassociates specified floating IP
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request a retrieves a specified floating IP address if it
        is associated with the network interface and instance specified in the URL
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: network_interface_id,
        required: true, type: string}
      - {description: The floating IP address, in: path, name: address, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: The associated floating IP was retrieved successfully.
          schema: {$ref: '#/definitions/floating_ip'}
        404:
          description: The floating IP address is not associated with a network interface
            with the specified identifier
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves associated floating IP
      tags: [Compute]
    put:
      consumes: [application/json]
      description: This request associates the specified floating IP with the specified
        network interface
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The network interface identifier, in: path, name: network_interface_id,
        required: true, type: string}
      - {description: The floating IP address, in: path, name: address, required: true,
        type: string}
      - in: body
        name: request body
        required: true
        schema:
          $ref: "#/definitions/DummyEmptyTemplate"
      produces: [application/json]
      responses:
        201:
          description: The floating IP was successfully associated with the network
            interface.
          schema: {$ref: '#/definitions/floating_ip'}
        400:
          description: The specified floating IP could not be associated with the
            specified network interface.
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Associates a floating IP with a network interface
      tags: [Compute]
  /instances/{instance_id}/volume_attachments:
    get:
      consumes: [application/json]
      description: This request retrieves all volume interfaces for a instance. A
        volume interface is the attachment of a volume to a instance. Each instance
        may have many volume interfaces but each volume interface attaches exactly
        one instance to exactly one volume.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              volume_attachments:
                description: Collection of volume attachments
                items: {$ref: '#/definitions/instance_volume_attachment'}
                type: array
                x-omitempty: true
            title: VolumeAttachmentCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all volumes attached to a instance
      tags: [Compute]
    post:
      description: This request creates a new volume interface from a volume interface
        template. The volume interface template object is structured in the same way
        as a retrieved volume interface, and contains the information necessary to
        create the new volume interface. The creation of a new volume interface attaches
        a volume to a instance.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this subnet, example: my-subnet,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            delete_volume_on_instance_delete:
              description: If set to true, when deleting the instance the volume will also be deleted
              type: boolean
            volume:
              description: The identity of the volume to attach to the instance
              example: {id: a4e28308-8ee7-46ab-8108-9f881f22bdbf}
              properties:
                crn: {description: The CRN for this volume, example: 'crn:v1:bluemix:public:rias:us-south:a/123456::volume:a4e28308-8ee7-46ab-8108-9f881f22bdbf',
                  format: crn, type: string}
                id: {description: The unique identifier for this volume, example: a4e28308-8ee7-46ab-8108-9f881f22bdbf,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this volume, example: my-volume,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: VolumeIdentity
              type: object
          title: VolumeAttachmentTemplate
          type: object
      responses:
        201:
          description: dummy
          schema: {$ref: '#/definitions/instance_volume_attachment'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a volume interface, attaching a volume to a instance
      tags: [Compute]
  /instances/{instance_id}/volume_attachments/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a volume interface. The deletion of a volume
        interface detaches a volume from a instance.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The volume interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes a volume interface, detaching a volume from a instance
      tags: [Compute]
    get:
      consumes: [application/json]
      description: This request retrieves a single volume interface specified by the
        identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The volume interface identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance_volume_attachment'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified volume interface
      tags: [Compute]
    patch:
      consumes: [application/json]
      description: This request updates a volume interface with the information in
        a provided volume interface patch. The volume interface patch object is structured
        in the same way as a retrieved volume interface and can contain an updated
        name and/or bandwidth.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The instance identifier, in: path, name: instance_id, required: true,
        type: string}
      - {description: The volume interface identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-volumeattachment}
          properties:
            name: {description: The user-defined name for this volumeattachment, example: my-volumeattachment,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            delete_volume_on_instance_delete:
              description: If set to true, when deleting the instance the volume will also be deleted
              type: boolean
              x-isnullable: true
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema: {$ref: '#/definitions/instance_volume_attachment'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a volume inferface
      tags: [Compute]
  /subnets:
    get:
      consumes: [application/json]
      description: This request retrieves all subnets in the region. Subnets are contiguous
        ranges of IP addresses specified in CIDR block notation. Each subnet is within
        a particular zone and cannot span multiple zones or regions.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, type: string, x-isnullable: false}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, type: integer}
      - {description: Filters the collection to resources within the specified zone,
        in: query, name: zone.name,  type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          identifier, in: query, name: vpc.id, type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          CRN, in: query, name: vpc.crn,  type: string}
      - {description: Filters the collection to resources within the VPC of the specified
          name, in: query, name: vpc.name, type: string}
      - {description: Filters the collection to subnets with the network ACL of the
          specified identifier, in: query, name: network_acl.id, 
        type: string}
      - {description: Filters the collection to subnets with the network ACL of the
          specified CRN, in: query, name: network_acl.crn,  type: string}
      - {description: Filters the collection to subnets with the network ACL of the
          specified name, in: query, name: network_acl.name,  type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/subnets?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/subnets?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              subnets:
                description: Collection of subnets
                items:
                  $ref: "#/definitions/subnet"
                type: array
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
            required: [subnets]
            title: SubnetCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all subnets
      tags: [Network]
    post:
      description: This request creates a new subnet from a subnet template. The subnet
        template object is structured in the same way as a retrieved subnet, and contains
        the information necessary to create the new subnet.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          example:
            total_ipv4_address_count: 256
            vpc: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
            zone: {name: us-south-1}
          properties:
            ip_version:
              description: The IP version(s) supported by this subnet; if unspecified,
                `ipv4` is used
              enum: [ipv4, ipv6, both]
              example: both
              type: string
            ipv4_cidr_block: {description: 'The IPv4 range of the subnet, expressed
                in CIDR format', example: 10.0.0.0/24, type: string}
            name: {description: The user-defined name for this subnet, example: my-subnet,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            network_acl:
              description: The network ACL to use for this subnet; if unspecified,
                the default network ACL for the VPC is used
              example: {id: a4e28308-8ee7-46ab-8108-9f881f22bdbf}
              properties:
                crn: {description: The CRN for this network ACL, example: 'crn:v1:bluemix:public:rias:us-south:a/123456::network-acl:a4e28308-8ee7-46ab-8108-9f881f22bdbf',
                  format: crn, type: string}
                id: {description: The unique identifier for this network ACL, example: a4e28308-8ee7-46ab-8108-9f881f22bdbf,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this network ACL, example: my-network-acl,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: NetworkACLIdentityByName
              type: object
            public_gateway:
              description: The public gateway to handle internet bound traffic for
                this subnet.
              properties:
                id: {description: The unique identifier for this public gateway, example: dc5431ef-1fc6-4861-adc9-a59d077d1241,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: PublicGatewayIdentity
              type: object
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            total_ipv4_address_count: {description: The total number of IPv4 addresses
                required, example: 256, format: int64, type: integer}
            vpc:
              description: The VPC the subnet is to be a part of
              example: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
              properties:
                crn: {description: The CRN for this VPC, example: 'crn:v1:bluemix:public:gt::a/123456::vpc:4727d842-f94f-4a2d-824a-9bc9b02c523b',
                  format: crn, type: string}
                id: {description: The unique identifier for this VPC, example: 4727d842-f94f-4a2d-824a-9bc9b02c523b,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this VPC, example: my-vpc,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: VPCIdentityByName
              type: object
            zone:
              description: The zone the subnet is to reside in
              properties:
                name: {description: The name for this zone, example: us-south-1, format: name,
                  pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: ZoneIdentity
              type: object
          title: SubnetTemplate
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/subnet"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a subnet
      tags: [Network]
  /subnets/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a subnet. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified subnet
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single subnet specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/subnet"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified subnet
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a subnet with the information in a provided
        subnet patch. The subnet patch object is structured in the same way as a retrieved
        subnet and contains only the information to be updated.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-vpc}
          properties:
            name: {description: The user-defined name for this subnet, example: my-subnet,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            network_acl:
              properties:
                href: {description: The URL for this resource, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5/snapshots/349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                  type: string}
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
              title: reference
              type: object
            public_gateway:
              properties:
                href: {description: The URL for this resource, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes/1a6b7274-678d-4dfb-8981-c71dd9d4daa5/snapshots/349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                  type: string}
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
              title: reference
              type: object
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/subnet"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified subnet
      tags: [Network]
  /subnets/{subnet_id}/network_acl:
    get:
      consumes: [application/json]
      description: This request retrieves the network ACL attached to the subnet specified
        by the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: subnet_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves attached public gatway
      tags: [Network]
    put:
      consumes: [application/json]
      description: This request attaches the network ACL specified in the request
        body to the subnet specified by the subnet identifier in the URL. If a network
        ACL is already attached to the subnet, it is detached before the new network
        ACL is attached.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: subnet_id, required: true,
        type: string}
      - in: body
        name: request body
        required: true
        schema:
          properties:
            id: {description: The unique identifier for this network ACL, example: a4e28308-8ee7-46ab-8108-9f881f22bdbf,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', type: string}
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/network_acl"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Attaches a network ACL to a subnet
      tags: [Network]
  /subnets/{subnet_id}/public_gateway:
    delete:
      consumes: [application/json]
      description: This request detaches the public gateway from the subnet specified
        by the subnet identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: subnet_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Detaches a public gateway from a subnet
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves the public gateway attached to the subnet
        specified by the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: subnet_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/public_gateway"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves attached public gateway
      tags: [Network]
    put:
      consumes: [application/json]
      description: This request attaches the public gateway specified in the request
        body to the subnet specified by the subnet identifier in the URL. If a public
        gateway is already attached to the subnet, it is detached before the new public
        gateway is attached.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The subnet identifier, in: path, name: subnet_id, required: true,
        type: string}
      - in: body
        name: request body
        required: true
        schema:
          properties:
            id: {description: The unique identifier for this gateway, example: a4e28308-8ee7-46ab-8108-9f881f22bdbf,
              format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', type: string}
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/public_gateway"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Attaches a public gateway to a subnet
      tags: [Network]

  /share/profiles:
    get:
      consumes: [application/json]
      description: This request retrieves all file share profiles available in the region. A file share profile specifies the performance characteristics and pricing model for a file share.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
              profiles:
                description: Collection of share profiles
                items:
                  $ref: "#/definitions/ShareProfile"
                type: array
            required: [properties]
            title: ShareProfileCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all file share profiles
      tags: [Storage]

  /share/profiles/{name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single file share profile specified by the name in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share profile name, in: path, name: name, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/ShareProfile"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified file share profile
      tags: [Storage]

  /shares:
    get:
      consumes: [application/json]
      description: This request retrieves all file shares.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers, in: query, name: resource_group.id, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
              shares:
                description: Collection of file shares
                items:
                  $ref: "#/definitions/share"              
                type: array
            title: ShareCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified file share profile
      tags: [Storage]
    post:
      consumes: [application/json]
      description: This request provisions a new file share from a share template. The share template object is structured in the same way as a retrieved share, and contains the information necessary to provision the new file share.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: ShareTemplate
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this file share, example: my-share,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            profile:
              properties:
                name: {description: The name for this share profile,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$',type: string}
                crn: {description: The CRN for this share profile,
                  format: crn, type: string}            
              title: profile
              type: object
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: ResourceGroupIdentity
              type: object
            targets:
              description: Mount targets for the file share
              items:
                  $ref: "#/definitions/ShareTargetWithZoneTemplate"
              type: array
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/share"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a file share
      tags: [Storage]

  /shares/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a file share. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: File share deleted successfully
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified file share
      tags: [Storage]
    get:
      consumes: [application/json]
      description: This request retrieves a single file share specified by the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/share"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified volume
      tags: [Storage]
    patch:
      consumes: [application/json]
      description: This request updates a file share's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
                name: {description: The user-defined name for this volume, example: my-volume, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          title: SharePatch
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/share"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified volume
      tags: [Storage]
  /shares/{share_id}/targets:
    get:
      consumes: [application/json]
      description: This request retrieves all mount targets for a file share. A mount target is a network endpoint at which a file share may be mounted and exists within a particular zone and subnet.
      parameters:
        - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
        - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
        - {description: The file share identifier, in: path, name: share_id, required: true, type: string}
        - {description: Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers, in: query, name: resource_group.id, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              targets:
                description: Collection of file share mount targets
                items:
                  $ref: '#/definitions/sharetarget'
                type: array
            title: ShareTargetCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all mount targets for a file share
      tags: [Storage]
    post:
      consumes: [application/json]
      description: This request creates a new mount target from a target template. If specified, the mount target address must be contained by and available in a provided subnet.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: share_id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
                name: {description: The user-defined name for this file share mount target, example: my-share-target,
                    format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                resource_group:
                  properties:
                    id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                    format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                    type: string}
                  title: ResourceGroupIdentity
                  type: object
                Security_groups:
                  items:
                    properties:
                      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                          format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                          type: string}
                      name: {description: The user-defined name for this resource, example: my-snapshot,
                          format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                          format: crn, type: string}
                    title: reference
                    type: object
                  type: array
                  example:
                  - id: "be5df5ca-12a0-494b-907e-aa6ec2bfa271"
                  - crn: "crn:v1:bluemix:public:gt:us-south-1:a/123456::security-group:be5df5ca-12a0-494b-907e-aa6ec2bfa271"
                  - name: "allow_ssh"
                zone:
                  description: The zone to place the file share mount target in
                  properties:
                    name: {description: The name for this zone, example: us-south-1, format: name,pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                  title: ZoneIdentity
                  type: object
                address: {description: A single IPv4 or IPv6 address., example: 10.0.1.12, type: string}
                subnet:
                    properties:
                      id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                        format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                        type: string}
                      name: {description: The user-defined name for this resource, example: my-snapshot,
                        format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                      crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                        format: crn, type: string}
                    title: reference
          type: object
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/sharetarget"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a mount target for a file share
      tags: [Storage]

  /shares/{share_id}/targets/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a file share mount target. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: share_id, required: true, type: string}
      - {description: The mount target identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: Mount target deleted successfully
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified file share mount target
      tags: [Storage]
    get:
      consumes: [application/json]
      description: This request retrieves a single file share mount target specified by the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: share_id, required: true, type: string}
      - {description: The mount target identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: The the specified tag exists on the specified resource.
          schema: {$ref: '#/definitions/sharetarget'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified file share mount target
      tags: [Storage]
    patch:
      consumes: [application/json]
      description: This request updates a mount target with the information in a provided target patch. The target patch object is structured in the same way as a retrieved mount target and can contain an updated name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The file share identifier, in: path, name: share_id, required: true, type: string}
      - {description: The mount target identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this file share mount target, example: my-share-target, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          title: ShareTargetPatch
      produces: [application/json]
      responses:
        200:
          description: The mount target was updated successfully.
          schema: {$ref: '#/definitions/sharetarget'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates a file share mount target
      tags: [Storage]

  /volume/profiles:
    get:
      consumes: [application/json]
      description: This request retrieves all volume profiles available in the region. A volume profile specifies the performance characteristics and pricing model for a volume.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
              profiles:
                description: Collection of share profiles
                items:
                  $ref: "#/definitions/volume_profile"
                type: array
            required: [properties]
            title: VolumeProfileCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all volume profiles
      tags: [Storage]

  /volume/profiles/{name}:
    get:
      consumes: [application/json]
      description: This request retrieves a single volume profile specified by the name in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume profile name, in: path, name: name, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/volume_profile"
            title: VolumeProfile
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified volume profile
      tags: [Storage]

  /volumes:
    get:
      consumes: [application/json]
      description: This request retrieves all volumes in the region. Volumes are network-connected
        block storage devices which may be attached to one or more servers in the
        same region.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      - {description: Filters the collection to resources within the specified zone,
        in: query, name: zone.name, required: false, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/volumes?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
              volumes:
                description: Collection of volumes
                items:
                  $ref: "#/definitions/volume"
                type: array
            required: [volumes]
            title: VolumeCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all volumes
      tags: [Storage]
    post:
      description: This request creates a new volume from a volume template. The volume
        template object is structured in the same way as a retrieved volume, and contains
        the information necessary to create the new volume.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          example:
            capacity: 100
            iops: 10000
            type: data
            vpc: {id: 4727d842-f94f-4a2d-824a-9bc9b02c523b}
            zone: {name: us-south-1}
          properties:
            auto_delete: {default: false, description: 'If set to true, this volume
                will be automatically deleted if the only server it is attached to
                is deleted', type: boolean}
            encryption_key:
              properties:
                crn: {description: The CRN for this key, example: 'crn:v1:bluemix:public:gt::a/123456::key:a6b1a881-2ce8-41a3-80fc-36316a73f803',
                  format: crn, type: string}
              title: VolumeEncryptionKey
              type: object
            capacity: {default: 100, description: The capacity of the volume in gigabytes,
              example: 100, minimum: 10, type: integer, x-isnullable: true}
            iops:
              description: The bandwidth for the volume
              enum: [1000, 10000, 100000]
              type: integer 
              x-isnullable: true
            name: {description: The user-defined name for this volume, example: my-volume,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
            profile:
              properties:
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
              title: reference
              type: object          
            zone:
              description: The location of the volume
              properties:
                name: {description: The name for this zone, example: us-south-1, format: name,
                  pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              required: [name]
              title: ZoneIdentity
              type: object
          title: VolumeTemplateFromSnapshot
          type: object
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/volume"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a volume
      tags: [Storage]
  /volumes/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a volume. This operation cannot be reversed.
        In order for this request to succeed, the volume must not be attached to any
        servers.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified volume
      tags: [Storage]
    get:
      consumes: [application/json]
      description: This request retrieves a single volume specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/volume"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified volume
      tags: [Storage]
    patch:
      consumes: [application/json]
      description: This request updates a volume with the information in a provided
        volume patch. The volume patch object is structured in the same way as a retrieved
        volume and can contain an updated name, IOPS rate, or (increased) capacity
        for the volume.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          properties:
            name: {description: The user-defined name for this volume, example: my-volume,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            capacity: {default: 100, description: The capacity of the volume in gigabytes,
              example: 100, maximum: 64000, minimum: 10, type: integer}
            iops:
              description: The bandwidth for the volume
              enum: [1000, 10000, 100000]
              type: integer
            profile:
              properties:
                name: {description: The user-defined name for this resource, example: my-snapshot,
                  format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
                crn: {description: The CRN for this snapshot, example: 'crn:v1:bluemix:public:gt:us-south-1:a/123456::snapshot:349a61d8-7ab1-420f-a690-5fed76ef9d4f',
                  format: crn, type: string}
              title: reference
              type: object
          title: VolumePatch
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/volume"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified volume
      tags: [Storage]
  /volumes/{volume_id}/snapshots:
    get:
      consumes: [application/json]
      description: This request retrieves all snapshots of the volume specified by
        the identifier in the URL. A snapshot preserves the state of a volume at the
        time the snapshot is created.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: volume_id, required: true,
        type: string}
      - {description: Filters the collection to resources within the resource group
          of the specified identifier, in: query, name: resource_group.id, required: false,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              snapshots:
                description: Collection of snapshots
                items:
                  $ref: "#/definitions/volume_snapshot"
                type: array
            required: [snapshots]
            title: SnapshotCollection
            type: object
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all snapshots of a volume
      tags: [Storage]
    post:
      description: This request creates a new snapshot of the volume specified by
        the identifier in the URL. The new snapshot's name is specified in the snapshot
        template.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: volume_id, required: true,
        type: string}
      - in: body
        name: body
        required: false
        schema:
          properties:
            name: {description: The user-defined name for this subnet, example: my-subnet,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
          title: VPCTemplate
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/volume_snapshot"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a snapshot for a volume
      tags: [Storage]
  /volumes/{volume_id}/snapshots/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a snapshot. This operation cannot be reversed.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: volume_id, required: true,
        type: string}
      - {description: The snapshot identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified snapshot
      tags: [Storage]
    get:
      consumes: [application/json]
      description: This request retrieves a single snapshot specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: volume_id, required: true,
        type: string}
      - {description: The snapshot identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/volume_snapshot"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified snapshot
      tags: [Storage]
    patch:
      consumes: [application/json]
      description: This request updates a snapshot's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The volume identifier, in: path, name: volume_id, required: true,
        type: string}
      - {description: The snapgshot identifier, in: path, name: id, required: true,
        type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-snapshot}
          properties:
            name: {description: The user-defined name for this snapshot, example: my-snapshot,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/volume_snapshot"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified snapshot
      tags: [Storage]
  /vpcs:
    get:
      consumes: [application/json]
      description: This request retrieves all VPCs. A VPC is a virtual network that
        belongs to an account and provides logical isolation from other networks.
        A VPC is made up of resources in one or more zones. VPCs are global and each
        can contain resources in zones from any region.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers, in: query, name: resource_group.id, required: false,
        type: string}
      - {description:  "The `classic_access` parameter filters the returned collection by the supplied field.\nIf the supplied field is `true`, only Classic Access VPCs will be returned.\nIf the supplied field is `false`, only VPCs without Classic Access will be returned.\n",in: query, name: classic_access, required: false, type: boolean}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              first:
                description: A reference to the first page of resources
                properties:
                  href: {description: The URL for the first page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/vpcs?limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              limit: {description: The maximum number of resources can be returned
                  by the request, example: 20, format: int64, maximum: 100, minimum: 1,
                type: integer}
              next:
                description: A reference to the next page of resources; this reference
                  is included for all pages except the last page
                properties:
                  href: {description: The URL for the next page of resources, example: 'http://us-south.iaas.cloud.ibm.com/v1/vpcs?start=9d5a91a3e2cbd233b5a5b33436855ed1&limit=20',
                    format: url, pattern: '^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$',
                    type: string}
                required: [href]
                type: object
              total_count: {description: The total number of resources across all
                  pages, example: 132, format: int64, minimum: 0, type: integer}
              vpcs:
                description: Collection of VPCs
                items:
                  $ref: '#/definitions/vpc'
                type: array
            required: [vpcs]
            title: VPCCollection
            type: object
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all VPCs
      tags: [Network]
    post:
      description: This request creates a new VPC from a VPC template. The VPC template
        object is structured in the same way as a retrieved VPC, and contains the
        information necessary to create the new VPC.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: false
        schema:
          properties:
            address_prefix_management:
              default: auto
              description: >-
                Indicates whether a default address prefix should be automatically
                created for each
                zone in this VPC. If `manual`, this VPC will be created with no
                default address
                prefixes.
              enum:
                - auto
                - manual
              example: manual
              type: string
            classic_access: {description: "Indicates whether this VPC is connected to Classic Infrastructure. If true, this VPC's\nresources have private network connectivity to the account's Classice Infrastructure\nresources. Only one VPC on an account may be connected in this way. This value is set at\ncreation and subsequently immutable.\n",
              type: boolean}
            name: {description: The user-defined name for this VPC, example: my-vpc,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            resource_group:
              properties:
                id: {description: The unique identifier for this resource, example: 349a61d8-7ab1-420f-a690-5fed76ef9d4f,
                  format: uuid, pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
                  type: string}
              title: idreference
              type: object
          title: VPCTemplate
      responses:
        201:
          description: dummy
          schema:
            $ref: '#/definitions/vpc'
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates a VPC
      tags: [Network]
  /vpcs/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a VPC. This operation cannot be reversed.
        In order for this request to succeed, the VPC must not contain any servers
        or volumes.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified VPC
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single VPC specified by the identifier
        in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC idenitifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: '#/definitions/vpc'
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified VPC
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a VPC's name.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: body
        required: true
        schema:
          example: {name: my-vpc}
          properties:
            name: {description: The user-defined name for this vpc, example: my-vpc,
              format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: '#/definitions/vpc'
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        500:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates specified VPC
      tags: [Network]
  /vpcs/{vpc_id}/default_security_group:
    get:
      consumes: [application/json]
      description: This request retrieves the default security group for the VPC specified by the identifier in the URL. The default security group is applied to any new network interfaces in the VPC which do not specify a security group.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: vpc_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/default_security_group"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves default security group
      tags: [Network]
  /vpcs/{vpc_id}/address_prefixes:
    get:
      consumes: [application/json]
      description: This request retrieves all address pool prefixes for a VPC.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: vpc_id, required: true,
        type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            properties:
              address_prefixes:
                description: Collection of address prefixes
                items:
                  $ref: '#/definitions/address_prefix'
                type: array
            title: AddressPoolPrefixCollection
              
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves all address pool prefixes for a VPC
      tags: [Network]
    post:
      consumes: [application/json]
      description: This request creates a new prefix from a prefix template. The prefix template object is structured in the same way as a retrieved prefix, and contains the information necessary to create the new prefix.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: vpc_id, required: true,
        type: string}
      - in: body
        name: AddressPoolPrefixTemplate
        required: true
        schema:
          properties:
            cidr: {description: The CIDR block for this prefix., example: 10.0.0.0/24, type: string}
            name: {description: 'The user-defined name for this prefix. By default, the base IP address will be the name. For example, for 10.0.0.0/24 the name will be 10.0.0.0.', example: my-address-pool-prefix-2, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
            zone:
              description: The name for this zone
              properties:
                name: {description: The name for this zone, example: us-south-1, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
              title: ZoneIdentity
      produces: [application/json]
      responses:
        201:
          description: dummy
          schema:
            $ref: "#/definitions/address_prefix"
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        504:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Creates an address pool prefix
      tags: [Network]
  /vpcs/{vpc_id}/address_prefixes/{id}:
    delete:
      consumes: [application/json]
      description: This request deletes a prefix. This operation cannot be reversed. Delete will fail if existing subnets use addresses from this prefix.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: vpc_id, required: true, type: string}
      - {description: The prefix identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        204:
          description: The prefix was deleted successfully.
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Deletes specified address pool prefix
      tags: [Network]
    get:
      consumes: [application/json]
      description: This request retrieves a single prefix specified by the identifier in the URL.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC idenitifier, in: path, name: vpc_id, required: true, type: string}
      - {description: The prefix identifier, in: path, name: id, required: true, type: string}
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: "#/definitions/address_prefix"
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Retrieves specified VPC
      tags: [Network]
    patch:
      consumes: [application/json]
      description: This request updates a prefix with the information in a provided prefix patch. The prefix patch object is structured in the same way as a retrieved prefix and contains only the information to be updated. The update will fail if it would result in existing subnets falling outside of the address pool. The update will fail if the new prefix overlaps any other prefix in the VPC's address pools.
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: The VPC identifier, in: path, name: vpc_id, required: true, type: string}
      - {description: The prefix identifier, in: path, name: id, required: true, type: string}
      - in: body
        name: AddressPoolPrefixPatch
        required: true
        schema:
          example: {name: my-vpc}
          properties:
            cidr: {description: The CIDR block for this prefix., example: 10.0.0.0/24, type: string}
            name: {description: 'The user-defined name for this prefix. By default, the base IP address will be the name. For example, for 10.0.0.0/24 the name will be 10.0.0.0.', example: my-address-pool-prefix-2, format: name, pattern: '^[A-Za-z][-A-Za-z0-9_]*$', type: string}
          type: object
      produces: [application/json]
      responses:
        200:
          description: dummy
          schema:
            $ref: '#/definitions/address_prefix'
        400:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: error
          schema: {$ref: '#/definitions/riaaserror'}
      summary: Updates an address pool prefix
      tags: [Network]

  /ike_policies:
    get:
      consumes: [application/json]
      description: "Retrieves a paginated list of all IKE policies belonging to this account."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      produces: [application/json]
      responses:
        200:
          description: "The IKE policies were retrieved successfully."
          schema:
            $ref: "#/definitions/IKEPolicyCollection"
      tags: [VPNaaS]            
    post:
      consumes: [application/json]
      summary: "Creates an IKE policy"
      description: "Creates a new IKE policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/IKEPolicyTemplate"
      responses:
        201:
          description: "The IKE policy was created successfully."
          schema:
            $ref: "#/definitions/IKEPolicy"
        400:
          description: "An invalid IKE policy template was provided."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /ike_policies/{id}:
    get:
      summary: "Retrieves the specified IKE policy"
      description: "This request retrieves a single IKE policy specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IKE policy idenitifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The IKE policy was retrieved successfully."
          schema:
            $ref: "#/definitions/IKEPolicy"
        404:
          description: "An IKE policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    patch:
      summary: "Updates an IKE policy"
      description: "Updates the properties of an existing IKE policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IKE policy identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The IKE policy patch."
        required: true
        schema:
          $ref: "#/definitions/IKEPolicyPatch"
      responses:
        200:
          description: "The IKE policy was updated successfully."
          schema:
            $ref: "#/definitions/IKEPolicy"
        400:
          description: "An invalid IKE policy patch was provided."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    delete:
      summary: "Deletes an IKE policy"
      description: "Deletes an IKE policy. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IKE policy identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The IKE policy was deleted successfully."
        404:
          description: "An IKE policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
        409:
          description: "The IKE policy is in use and cannot be removed."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /ike_policies/{id}/connections:
    get:
      summary: "Retrieves all the connections that use the specified policy"
      description: "Retrieves all the connections that use the specified policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The policy identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The VPN connections were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnectionCollection"
        404:
          description: "A policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            

  /ipsec_policies:
    get:
      summary: "Retrieves all IPsec policies"
      description: "Retrieves a paginated list of all IPsec policies belonging to this account."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      responses:
        200:
          description: "The IPsec policies were retrieved successfully."
          schema:
            $ref: "#/definitions/IPsecPolicyCollection"
      tags: [VPNaaS]            
    post:
      summary: "Creates an IPsec policy"
      description: "Creates a new IPsec policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        description: "The IPsec policy template."
        required: true
        schema:
          $ref: "#/definitions/IPsecPolicyTemplate"
      responses:
        201:
          description: "The IPsec policy was created successfully."
          schema:
            $ref: "#/definitions/IPsecPolicy"
        400:
          description: "An invalid IPsec policy template was provided."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /ipsec_policies/{id}:
    get:
      summary: "Retrieves the specified IPsec policy"
      description: "This request retrieves a single IPsec policy specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IPsec policy idenitifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The IPsec policy was retrieved successfully."
          schema:
            $ref: "#/definitions/IPsecPolicy"
        404:
          description: "An IPsec policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    patch:
      tags:
      - "VPNaaS"
      summary: "Updates an IPsec policy"
      description: "Updates the properties of an existing IPsec policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IPsec policy identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The IPsec policy patch."
        required: true
        schema:
          $ref: "#/definitions/IPsecPolicyPatch"
      responses:
        200:
          description: "The IPsec policy was updated successfully."
          schema:
            $ref: "#/definitions/IPsecPolicy"
        400:
          description: "An invalid IPsec policy patch was provided."
          schema:
            $ref: "#/definitions/riaaserror"
    delete:
      tags:
      - "VPNaaS"
      summary: "Deletes an IPsec policy"
      description: "Deletes an IPsec policy. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The IPsec policy identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The IPsec policy was deleted successfully."
        404:
          description: "An IPsec policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
        409:
          description: "The IPsec policy is in use and cannot be removed."
          schema:
            $ref: "#/definitions/riaaserror"
  /ipsec_policies/{id}/connections:
    get:
      summary: "Retrieves all the connections that use the specified policy"
      description: "Retrieves all the connections that use the specified policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The policy identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The VPN connections were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnectionCollection"
        404:
          description: "A policy with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]
  /vpn_gateways:
    get:
      summary: "Retrieves all VPN gateways"
      description: "Retrieves a paginated list of all VPN gateways belonging to this account."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers,
        in: query, name: resource_group.id, required: false, type: string}
      responses:
        200:
          description: "The VPN gateways were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayCollection"
      tags: [VPNaaS]            
    post:
      summary: "Creates a VPN gateway"
      description: "Creates a new VPN gateway."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        description: "The VPN gateway template."
        required: true
        schema:
          $ref: "#/definitions/VPNGatewayTemplate"
      responses:
        201:
          description: "The VPN gateway was created successfully."
          schema:
            $ref: "#/definitions/VPNGateway"
        400:
          description: "An invalid VPN gateway template was provided."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /vpn_gateways/{id}:
    get:
      summary: "Retrieves the specified VPN gateway"
      description: "This request retrieves a single VPN gateway specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The VPN gateway idenitifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The VPN gateway was retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGateway"
        404:
          description: "A VPN gateway with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    patch:
      tags:
      - "VPNaaS"
      summary: "Updates a VPN gateway"
      description: "Updates the properties of an existing VPN gateway."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The VPN gateway patch."
        required: true
        schema:
          $ref: "#/definitions/VPNGatewayPatch"
      responses:
        200:
          description: "The VPN gateway was updated successfully."
          schema:
            $ref: "#/definitions/VPNGateway"
        400:
          description: "An invalid VPN gateway patch was provided."
          schema:
            $ref: "#/definitions/riaaserror"
    delete:
      tags:
      - "VPNaaS"
      summary: "Deletes a VPN gateway"
      description: "Deletes a VPN gateway. This operation deletes all the VPN connections associated to this VPN gateway. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The VPN gateway was deleted successfully."
        404:
          description: "A VPN gateway with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
  /vpn_gateways/{vpn_gateway_id}/connections:
    get:
      summary: "Retrieves all the connections of a VPN gateway"
      description: "Retrieves all the connections of a particular VPN gateway."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "status",
          description: "Filters the collection to VPN connections with the specified status",
          in: "query",
          x-isnullable: true,
          type: "string"}
      responses:
        200:
          description: "The VPN connections were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnectionCollection"
        404:
          description: "A VPN gateway with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    post:
      tags:
      - "VPNaaS"
      summary: "Creates a VPN connection"
      description: "Creates a new VPN connection."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The VPN connection template."
        required: true
        schema:
          $ref: "#/definitions/VPNGatewayConnectionTemplate"
      responses:
        201:
          description: "The VPN connection was created successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnection"
        400:
          description: "An invalid VPN connection template was provided."
          schema:
            $ref: "#/definitions/riaaserror"
  /vpn_gateways/{vpn_gateway_id}/connections/{id}:
    get:
      summary: "Retrieves the specified VPN connection"
      description: "This request retrieves a single VPN connection specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection idenitifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The VPN connection was retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnection"
        404:
          description: "A VPN connection with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    patch:
      tags:
      - "VPNaaS"
      summary: "Updates a VPN connection"
      description: "Updates the properties of an existing VPN connection."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The VPN connection patch."
        required: true
        schema:
          $ref: "#/definitions/VPNGatewayConnectionPatch"
      responses:
        200:
          description: "The VPN connection was updated successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnection"
        400:
          description: "An invalid VPN connection patch was provided."
          schema:
            $ref: "#/definitions/riaaserror"
    delete:
      tags:
      - "VPNaaS"
      summary: "Deletes a VPN connection"
      description: "Deletes a VPN connection. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The VPN connection was deleted successfully."
        404:
          description: "A VPN connection with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
            
  /vpn_gateways/{vpn_gateway_id}/connections/{id}/local_cidrs:
    get:
      summary: "Retrieves all local CIDRs for a resource"
      description: "This request retrieves all local CIDRs for the resource specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id", in: "path",description: "The VPN gateway identifier",required: true,type: "string"}
      - {name: "id",in: "path",description: "The VPN connection identifier",required: true,type: "string"}
      responses:
        200:
          description: "The CIDRs were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnectionLocalCIDRs"
        404:
          description: "A resource with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /vpn_gateways/{vpn_gateway_id}/connections/{id}/local_cidrs/{prefix_address}/{prefix_length}:
    get:
      summary: "Checks if a specific CIDR exists on a specific resource"
      description: "This request succeeds if a CIDR exists on the resource and fails otherwise."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The specified CIDR exists on the specified resource."
        404:
          description: "The specified CIDR does not exist on the specified resource or the specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    put:
      summary: "Sets a CIDR on a resource"
      description: "This request adds the specified CIDR to the specified resource. A request body is not required, and if supplied, is ignored. It succeeds if the CIDR already exists on the resource."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The CIDR was successfully set on the resource."
        400:
          description: "The supplied CIDR was invalid."
          schema:
            $ref: "#/definitions/riaaserror"
        404:
          description: "The specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    delete:
      summary: "Removes a CIDR from a resource"
      description: "This request removes a CIDR from a resource."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The CIDR was successfully removed from the resource."
        404:
          description: "The the specified CIDR does not exist on the specified resource or the specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /vpn_gateways/{vpn_gateway_id}/connections/{id}/peer_cidrs:
    get:
      summary: "Retrieves all peer CIDRs for a resource"
      description: "This request retrieves all peer CIDRs for the resource specified by the identifier in the URL."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The CIDRs were retrieved successfully."
          schema:
            $ref: "#/definitions/VPNGatewayConnectionPeerCIDRs"
        404:
          description: "A resource with the specified identifier could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
  /vpn_gateways/{vpn_gateway_id}/connections/{id}/peer_cidrs/{prefix_address}/{prefix_length}:
    get:
      summary: "Checks if a specific CIDR exists on a specific resource"
      description: "This request succeeds if a CIDR exists on the resource and fails otherwise."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The specified CIDR exists on the specified resource."
        404:
          description: "The specified CIDR does not exist on the specified resource or the specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    put:
      summary: "Sets a CIDR on a resource"
      description: "This request adds the specified CIDR to the specified resource. A request body is not required, and if supplied, is ignored. It succeeds if the CIDR already exists on the resource."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The CIDR was successfully set on the resource."
        400:
          description: "The supplied CIDR was invalid."
          schema:
            $ref: "#/definitions/riaaserror"
        404:
          description: "The specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]            
    delete:
      summary: "Removes a CIDR from a resource"
      description: "This request removes a CIDR from a resource."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "vpn_gateway_id",
        in: "path",
        description: "The VPN gateway identifier",
        required: true,
          type: "string"}
      - {name: "id",
        in: "path",
        description: "The VPN connection identifier",
        required: true,
          type: "string"}
      - {name: "prefix_address",
        in: "path",
        description: "The prefix address part of the CIDR",
        required: true,
          type: "string"}
      - {name: "prefix_length",
        in: "path",
        description: "The prefix length part of the CIDR",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The CIDR was successfully removed from the resource."
        404:
          description: "The the specified CIDR does not exist on the specified resource or the specified resource could not be found."
          schema:
            $ref: "#/definitions/riaaserror"
      tags: [VPNaaS]

  /load_balancers/:
    get:
      summary: "Retrieves all load balancers"
      description: "Retrieves a paginated list of all load balancers belonging to this account."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {description: Filters the collection to resources within one of the resource groups identified in a comma-separated list of resource group identifiers, in: query, name: resource_group.id, required: false,
        type: string}
      responses:
        200:
          description: "The load balancers were retrieved successfully."
          schema:
            $ref: "#/definitions/LoadBalancerCollection"
      tags: [LBaas]

    post:
      summary: "Creates and provisions a load balancer"
      description: "Creates and provisions a new load balancer."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - in: body
        name: body
        description: "The load balancer template"
        required: true
        schema:
          $ref: "#/definitions/LoadBalancerTemplate"
      responses:
        201:
          description: "The load balancer was created successfully."
          schema:
            $ref: "#/definitions/LoadBalancer"
        400:
          description: "An invalid load balancer template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}:
    get:
      summary: "Retrieves a load balancer"
      description: "Retrieves a single load balancer specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The load balancer was retrieved successfully."
          schema:
            $ref: "#/definitions/LoadBalancer"
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    patch:
      summary: "Updates a load balancer"
      description: "Updates a load balancer."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The load balancer template"
        required: true
        schema:
          $ref: "#/definitions/LoadBalancerTemplatePatch"
      responses:
        200:
          description: "The load balancer provision request was accepted."
          schema:
            $ref: "#/definitions/LoadBalancer"
        400:
          description: "An invalid load balancer template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    delete:
      summary: "Deletes a load balancer"
      description: "Deletes a load balancer. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The load balancer deletion request was accepted."
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners:
    get:
      summary: "Retrieves all listeners of the load balancer"
      description: "Retrieves a list of all listeners belonging to the load balancer."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The listeners of the load balancer were retrieved successfully."
          schema:
            $ref: "#/definitions/ListenerCollection"
      tags: [LBaas]

    post:
      summary: "Creates a listener"
      description: "Creates a new listener to the load balancer."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The listener template"
        required: true
        schema:
          $ref: "#/definitions/ListenerTemplate"
      responses:
        201:
          description: "The listener was created successfully."
          schema:
            $ref: "#/definitions/Listener"
        400:
          description: "An invalid listener template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners/{listener_id}:
    get:
      summary: "Retrieves a listener"
      description: "Retrieves a single listener specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: listener_id,
        in: "path",
        description: "The listener identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The listener was retrieved successfully."
          schema:
            $ref: "#/definitions/Listener"
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    patch:
      summary: "Updates a listener"
      description: "Updates a listener from a listener template."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: listener_id,
        in: "path",
        description: "The listener identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The listener template"
        required: true
        schema:
          $ref: "#/definitions/ListenerTemplatePatch"
      responses:
        200:
          description: "The listener update request was accepted."
          schema:
            $ref: "#/definitions/Listener"
        400:
          description: "An invalid listener template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    delete:
      summary: "Deletes a listener"
      description: "Deletes a listener. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: listener_id,
        in: "path",
        description: "The listener identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The listener deletion request was accepted."
        404:
          description: "A load balancer or listener with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners/{listener_id}/policies:
    get:
      summary: "Retrieves all policies of the listener"
      description: "Retrieves a list of all policies belonging to the load balancer listener."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: "The infrastructure generation for the request. For the API behavior documented here, use 1.", in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      responses:
        200:
          description: "The policies of the listener were retrieved successfully."
          schema:
            $ref: "#/definitions/ListenerPolicyCollection"
      tags: [LBaas]
    post:
      summary: "Create a policy for the load balancer listener"
      description: "Creates a new policy to the load balancer listener."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: "The infrastructure generation for the request. For the API behavior documented here, use 1.", in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - in: body
        name: body
        description: "The policy template"
        required: true
        schema:
          $ref: "#/definitions/ListenerPolicyTemplate"
      responses:
        201:
          description: "The policy was created successfully."
          schema:
            $ref: "#/definitions/ListenerPolicy"
        400:
          description: "An invalid policy template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer or listener with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners/{listener_id}/policies/{policy_id}:
    get:
      summary: "Retrieve a policy of the load balancer listener"
      description: "Retrieve a single policy specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      responses:
        200:
          description: "The policy was retrieved successfully."
          schema:
            $ref: "#/definitions/ListenerPolicy"
        404:
          description: "A load balancer or listener with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    patch:
      summary: "Update a policy of the load balancer listener"
      description: "Updates a policy from a policy template."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      - in: body
        name: body
        description: "The policy template"
        required: true
        schema:
          $ref: "#/definitions/ListenerPolicyTemplatePatch"
      responses:
        200:
          description: "The policy update request was accepted."
          schema:
            $ref: "#/definitions/ListenerPolicy"
        400:
          description: "An invalid policy template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer or listener with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    delete:
      summary: "Delete a policy of the load balancer listener"
      description: "Deletes a policy of the load balancer listener. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      responses:
        204:
          description: "The policy deletion request was accepted."
        404:
          description: "A load balancer or listener with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners/{listener_id}/policies/{policy_id}/rules:
    get:
      summary: "List all rules of the load balancer listener policy"
      description: "Retrieves a list of all rules belonging to the load balancer listener policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      responses:
        200:
          description: "The rules of the policy were retrieved successfully."
          schema:
            $ref: "#/definitions/ListenerPolicyRuleCollection"
        404:
          description: "A load balancer, listener or policy with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    post:
      summary: "Create a rule for the load balancer listener policy"
      description: "Creates a new rule for the load balancer listener policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: "The infrastructure generation for the request. For the API behavior documented here, use 1.", in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      - in: body
        name: body
        description: "The policy rule template"
        required: true
        schema:
          $ref: "#/definitions/ListenerPolicyRuleTemplate"
      responses:
        201:
          description: "The rule was created successfully."
          schema:
            $ref: "#/definitions/ListenerPolicyRule"
        400:
          description: "An invalid policy rule template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer, listener or policy with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/listeners/{listener_id}/policies/{policy_id}/rules/{rule_id}:
    get:
      summary: "Retrieve a rule of the load balancer listener policy"
      description: "Retrieves a single rule specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      - {name: rule_id, in: "path", description: "The rule identifier", required: true, type: "string"}
      responses:
        200:
          description: "The rule was retrieved successfully."
          schema:
            $ref: "#/definitions/ListenerPolicyRule"
        404:
          description: "A load balancer, listener or policy with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    patch:
      summary: "Update a rule of the load balancer listener policy"
      description: "Updates a rule of the load balancer listener policy."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      - {name: rule_id, in: "path", description: "The rule identifier", required: true, type: "string"}
      - in: body
        name: body
        description: "The rule template"
        required: true
        schema:
          $ref: "#/definitions/ListenerPolicyRuleTemplatePatch"
      responses:
        200:
          description: "The rule update request was accepted."
          schema:
            $ref: "#/definitions/ListenerPolicyRule"
        400:
          description: "An invalid rule template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer, listener or policy with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    delete:
      summary: "Delete a rule from the load balancer listener policy"
      description: "Deletes a rule from the load balancer listener policy. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id, in: "path", description: "The load balancer identifier", required: true, type: "string"}
      - {name: listener_id, in: "path", description: "The listener identifier", required: true, type: "string"}
      - {name: policy_id, in: "path", description: "The policy identifier", required: true, type: "string"}
      - {name: rule_id, in: "path", description: "The rule identifier", required: true, type: "string"}
      responses:
        204:
          description: "The rule deletion request was accepted."
        404:
          description: "A load balancer, listener or policy with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/pools:
    get:
      summary: "Retrieves all pools of the load balancer"
      description: "Retrieves a list of all pools belonging to the load balancer."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The pools of the load balancer were retrieved successfully."
          schema:
            $ref: "#/definitions/PoolCollection"
      tags: [LBaas]

    post:
      summary: "Creates a pool"
      description: "This request creates a new pool from a pool template."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: "id",
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The pool template"
        required: true
        schema:
          $ref: "#/definitions/PoolTemplate"
      responses:
        201:
          description: "The pool was created successfully."
          schema:
            $ref: "#/definitions/Pool"
        400:
          description: "An invalid pool template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/pools/{pool_id}:
    get:
      summary: "Retrieves a pool"
      description: "Retrieves a single pool specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The pool was retrieved successfully."
          schema:
            $ref: "#/definitions/Pool"
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    patch:
      summary: "Updates a pool"
      description: "Updates a pool from a pool template."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The pool template"
        required: true
        schema:
          $ref: "#/definitions/PoolTemplatePatch"
      responses:
        200:
          description: "The pool update request was accepted."
          schema:
            $ref: "#/definitions/Pool"
        400:
          description: "An invalid pool template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A pool with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    delete:
      summary: "Deletes a pool"
      description: "Deletes a pool. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The pool deletion request was accepted."
        404:
          description: "A load balancer or pool with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/pools/{pool_id}/members:
    get:
      summary: "Retrieves all members of the pool"
      description: "Retrieves a paginated list of all members belonging to the pool."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {description: A server-supplied token determining what resource to start the
          page on, in: query, name: start, required: false, type: string}
      - {default: 50, description: The number of resources to return on a page, format: int32,
        in: query, maximum: 100, minimum: 1, name: limit, required: false, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The members of the load balancer pool were retrieved successfully."
          schema:
            $ref: "#/definitions/MemberCollection"
      tags: [LBaas]

    post:
      summary: "Creates a member"
      description: "Creates a new member and adds the member to the pool."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The member template"
        required: true
        schema:
          $ref: "#/definitions/MemberTemplate"
      responses:
        201:
          description: "The member was created successfully."
          schema:
            $ref: "#/definitions/Member"
        400:
          description: "An invalid member template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer or pool with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    put:
      summary: "Updates members of the pool"
      description: "Updates members of the load balancer pool from a member template collection."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The template of member collection"
        required: true
        schema:
          $ref: "#/definitions/MemberCollectionTemplate"
      responses:
        202:
          description: "The update request was accepted."
          schema:
            $ref: "#/definitions/MemberCollection"
        400:
          description: "An invalid member template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A load balancer or pool with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

  /load_balancers/{id}/pools/{pool_id}/members/{member_id}:
    get:
      summary: "Retrieves a member"
      description: "Retrieves a single member specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - {name: member_id,
        in: "path",
        description: "The member identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The member was retrieved successfully."
          schema:
            $ref: "#/definitions/Member"
        404:
          description: "A member with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
    patch:
      summary: "Updates a member"
      description: "Updates an existing member from a member template."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - {name: member_id,
        in: "path",
        description: "The member identifier",
        required: true,
          type: "string"}
      - in: body
        name: body
        description: "The member template"
        required: true
        schema:
          $ref: "#/definitions/MemberTemplatePatch"
      responses:
        200:
          description: "The member update request was accepted."
          schema:
            $ref: "#/definitions/Member"
        400:
          description: "An invalid pool template was provided."
          schema: {$ref: '#/definitions/riaaserror'}
        404:
          description: "A pool with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]

    delete:
      summary: "Deletes a member from the pool"
      description: "Deletes a member from the pool. This operation cannot be reversed."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      - {name: pool_id,
        in: "path",
        description: "The pool identifier",
        required: true,
          type: "string"}
      - {name: member_id,
        in: "path",
        description: "The member identifier",
        required: true,
          type: "string"}
      responses:
        204:
          description: "The member deletion request was accepted."
        404:
          description: "A load balancer, pool or member with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
  /load_balancers/{id}/statistics:
    get:
      summary: "Retrieves statistics of a load balancer"
      description: "Retrieves statistics of a load balancer specified by the identifier in the URL path."
      parameters:
      - {description: Requests the version of the API as of a date in the format `YYYY-MM-DD`. Any date up to the current date may be provided. Specify the current date to request the latest version., in: query, name: version, required: true, format: data, type: string}
      - {description: The infrastructure generation for the request., in: query, name: generation, required: true, type: integer}
      - {name: id,
        in: "path",
        description: "The load balancer identifier",
        required: true,
          type: "string"}
      responses:
        200:
          description: "The load balancer statistics was retrieved successfully."
          schema:
            $ref: "#/definitions/LoadBalancerStatistics"
        404:
          description: "A load balancer with the specified identifier could not be found."
          schema: {$ref: '#/definitions/riaaserror'}
      tags: [LBaas]
  /vpcs/{vpc_id}/routes:
    parameters:
      - $ref: '#/parameters/version'
      - $ref: '#/parameters/generation'
      - $ref: '#/parameters/vpcId'
    get:
      consumes: [application/json]
      description:
        This request retrieves all user-defined routes for a VPC. Each route is
        zone-specific and

        directs any packets matching its destination CIDR block to a `next_hop`
        IP address. The most

        specific route matching a packet's destination will be used. If multiple
        equally-specific

        routes exist, traffic will be distributed across them.
      parameters:
        - $ref: '#/parameters/zone'
      produces: [application/json]
      operationId: list_vpc_routes
      responses:
        200:
          schema: { $ref: '#/definitions/RouteCollection' }
          description: The routes were retrieved successfully.
        404:
          schema: {$ref: '#/definitions/riaaserror'}
          description: The specified VPC could not be found.
      summary: List all user-defined routes for a VPC
      tags:
        [VPCs]
    post:
      description: >-
        This request creates a new route. The route template object is
        structured in the same way as

        a retrieved route, and contains the information necessary to create the
        new route. The

        request will fail if the new route will cause a loop.
      operationId: create_vpc_route
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: RouteTemplate
        required: true
        schema:
          $ref: '#/definitions/RouteTemplate'
      responses:
        201:
          schema:
            $ref: '#/definitions/Route'
          description: The route was created successfully.
        400:
          schema:
            $ref: '#/definitions/riaaserror'
          description: An invalid route template was provided.
        404:
          schema:
            $ref: '#/definitions/riaaserror'
          description: The specified VPC could not be found.
        409:
          schema:
            $ref: '#/definitions/riaaserror'
          description: The route template conflicts with another route in the VPC.
      summary: Create a route on your VPC
      tags:
        - VPCs
  /vpcs/{vpc_id}/routes/{id}:
    parameters:
      - $ref: '#/parameters/version'
      - $ref: '#/parameters/generation'
      - $ref: '#/parameters/vpcId'
      - $ref: '#/parameters/vpcRouteIdUnqualified'
    delete:
      description: This request deletes a route. This operation cannot be reversed.
      operationId: delete_vpc_route
      consumes: [application/json]
      produces: [application/json]
      responses:
        204:
          description: The route was deleted successfully.
        404:
          schema: {$ref: '#/definitions/riaaserror'}
          description: A route with the specified identifier could not be found.
      summary: Delete the specified route
      tags:
        - VPCs
    get:
      description: >-
        This request retrieves a single route specified by the identifier in the
        URL.
      operationId: get_vpc_route
      consumes: [application/json]
      produces: [application/json]
      responses:
        200:
          schema:
            $ref: '#/definitions/Route'
          description: The route was retrieved successfully.
        404:
          schema: {$ref: '#/definitions/riaaserror'}
          description: A route with the specified identifier could not be found.
      summary: Retrieve the specified route
      tags:
        - VPCs
    patch:
      description: >-
        This request updates a route with the information in a provided route
        patch. The route patch

        object is structured in the same way as a retrieved route and contains
        only the information

        to be updated.
      operationId: update_vpc_route
      parameters:
      - in: body
        name: RoutePatch
        schema:
          $ref: '#/definitions/RoutePatch'
        description: The route patch
        required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/Route'
          description: The route was updated successfully.
        400:
          schema: {$ref: '#/definitions/riaaserror'}
          description: An invalid route patch was provided.
        404:
          schema: {$ref: '#/definitions/riaaserror'}
          description: A route with the specified identifier could not be found.
      summary: Update a route
      tags:
        - VPCs
security:
- iamToken: []
securityDefinitions:
  iamToken: {in: header, name: User Email, type: apiKey}
swagger: '2.0'