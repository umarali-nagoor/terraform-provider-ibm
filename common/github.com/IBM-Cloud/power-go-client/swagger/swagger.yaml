consumes:
  - application/json
produces:
  - application/json
swagger: "2.0"
info:
  description: Power IAAS API
  title: Power iaas API
  contact:
    name: Power iaas Service Broker
    url: https://github.ibm.com/power-iaas
    email: kylej@us.ibm.com
  version: 1.0.0
paths:
  /auth/v1/callback:
    get:
      security: []
      tags:
        - Authentication
      summary: Returns an accessToken (and set cookie)
      operationId: serviceBroker.auth.callback
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/callback-registration:
    get:
      security: []
      tags:
        - Authentication
      summary: Associates the user with a tenant and returns an accessToken
      operationId: serviceBroker.auth.registration.callback
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/device/code:
    post:
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Authentication
      summary: Request a authorization device code
      operationId: serviceBroker.auth.device.code.post
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceCode'
        "403":
          description: Quota exceeded
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/device/token:
    post:
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Authentication
      summary: Poll for authorization device token
      operationId: serviceBroker.auth.device.token.post
      parameters:
        - description: Parameters for polling authorization device code
          name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              deviceCode:
                description: The deviceCode that the authorization server returned
                type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Authorization pending
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: User refused grant
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Polling too frequently
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/info/token:
    get:
      tags:
        - Authentication
      summary: Information about current access token
      operationId: serviceBroker.auth.info.token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenExtra'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/info/user:
    get:
      tags:
        - Authentication
      summary: Information about current user
      operationId: serviceBroker.auth.info.user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/login:
    get:
      security: []
      tags:
        - Authentication
      summary: Login
      operationId: serviceBroker.auth.login
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/userID'
      - $ref: '#/parameters/redirectURL'
      - $ref: '#/parameters/accessType'
  /auth/v1/logout:
    get:
      tags:
        - Authentication
      summary: Logout
      operationId: serviceBroker.auth.logout
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /auth/v1/registration:
    get:
      security: []
      tags:
        - Authentication
      summary: Registration of a new Tenant and Login
      operationId: serviceBroker.auth.registration
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/registrationTenantID'
      - $ref: '#/parameters/registrationEntitlementID'
      - $ref: '#/parameters/plan'
      - $ref: '#/parameters/icn'
      - $ref: '#/parameters/regions'
      - $ref: '#/parameters/redirectURL'
  /auth/v1/token:
    post:
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Authentication
      summary: Request a new token from a refresh token
      operationId: serviceBroker.auth.token.post
      parameters:
        - description: Parameters for requesting a new Token from a Refresh Token
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Authorization pending
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: User refused grant
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Polling too frequently
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /bluemix_v1/service_instances/{instance_id}:
    get:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - BluemixServiceInstances
      summary: Get the current state information associated with the service instance
      operationId: bluemix.serviceInstance.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - basic: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - BluemixServiceInstances
      summary: Update (disable or enable) the state of a provisioned service instance.
      operationId: bluemix.serviceInstance.put
      parameters:
        - description: parameters for the requested state of a provisioned service
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/instance_id'
  /broker/v1/hardware-platforms:
    get:
      produces:
        - application/json
      tags:
        - HardwarePlatforms
      summary: Available hardware statistics and limits
      operationId: serviceBroker.hardwareplatforms.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HardwarePlatforms'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /broker/v1/health:
    get:
      security: []
      produces:
        - application/json
      tags:
        - IaasServiceBroker
      summary: Get current server health
      operationId: serviceBroker.health
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /broker/v1/openstacks:
    get:
      produces:
        - application/json
      tags:
        - OpenStacks
      summary: List all OpenStack instances being managed
      operationId: serviceBroker.openstacks.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OpenStacks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - OpenStacks
      summary: Create a new OpenStack instance to be managed
      operationId: serviceBroker.openstacks.post
      parameters:
        - description: Parameters for the creation of a new Open Stack Instance
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OpenStackCreate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OpenStack'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OpenStack'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /broker/v1/version:
    get:
      produces:
        - application/json
      tags:
        - IaasServiceBroker
      summary: Get current server version
      operationId: serviceBroker.version
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Version'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /pcloud/v1/cloud-instances/{cloud_instance_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudInstances
      summary: Get a Cloud Instance's current state/information
      operationId: pcloud.cloudinstances.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CloudInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudInstances
      summary: Update / Upgrade a Cloud Instance
      operationId: pcloud.cloudinstances.put
      parameters:
        - description: Parameters for updating a Power Cloud Instance
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CloudInstanceUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CloudInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudInstances
      summary: Delete a Power Cloud Instance
      operationId: pcloud.cloudinstances.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images:
    get:
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: List all images for this cloud instance
      operationId: pcloud.cloudinstances.images.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Images'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: Create a new Image (from available images)
      operationId: pcloud.cloudinstances.images.post
      parameters:
        - description: Parameters for the creation of a new image from available images
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateImage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images/{image_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: Detailed info of an image
      operationId: pcloud.cloudinstances.images.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudImages
      summary: Delete an Image from a Cloud Instance
      operationId: pcloud.cloudinstances.images.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images/{image_id}/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: Export an image
      operationId: pcloud.cloudinstances.images.export.post
      parameters:
        - description: Parameters for exporting an image
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExportImage'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks:
    get:
      produces:
        - application/json
      tags:
        - PCloudNetworks
      summary: Get a all networks in this cloud instance
      operationId: pcloud.networks.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Networks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudNetworks
      summary: Create a new Network
      operationId: pcloud.networks.post
      parameters:
        - description: Parameters for the creation of a new network
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NetworkCreate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Network'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks/{network_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudNetworks
      summary: Get a network's current state/information
      operationId: pcloud.networks.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudNetworks
      summary: Update a Network
      operationId: pcloud.networks.put
      parameters:
        - description: Parameters to update a Network
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NetworkUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudNetworks
      summary: Delete a Network
      operationId: pcloud.networks.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/network_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances:
    get:
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Get all the pvm instances for this cloud instance
      operationId: pcloud.pvminstances.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PVMInstances'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Create a new Power VM Instance
      operationId: pcloud.pvminstances.post
      parameters:
        - description: Parameters for the creation of a new tenant
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceCreate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Get a PVM Instance's current state/information
      operationId: pcloud.pvminstances.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PVMInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Update a PCloud PVM Instance
      operationId: pcloud.pvminstances.put
      parameters:
        - description: Parameters to update a PCloud PVM Instance
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceUpdate'
      responses:
        "202":
          description: Accepted (this is a long running operation)
          schema:
            $ref: '#/definitions/PVMInstanceUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudPVMInstances
      summary: Delete a PCloud PVM Instance
      operationId: pcloud.pvminstances.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/action:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Perform an action (start stop reboot) on a PVMInstance
      operationId: pcloud.pvminstances.action.post
      parameters:
        - description: Parameters for the desired action
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceAction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/capture:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Capture a PVMInstance and create a deployable image
      operationId: pcloud.pvminstances.capture.post
      parameters:
        - description: Parameters for the capture PVMInstance
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceCapture'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted, upload to cloud storage in progress
          schema:
            $ref: '#/definitions/Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/console:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudPVMInstances
      summary: Generate the noVNC Console URL
      operationId: pcloud.pvminstances.console.post
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceConsole'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes:
    get:
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: List all volumes attached to a PVMInstance
      operationId: pcloud.pvminstances.volumes.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volumes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes/{volume_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Detailed info of a volume attached to a PVMInstance
      operationId: pcloud.pvminstances.volumes.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Attach a volume to a PVMInstance
      operationId: pcloud.pvminstances.volumes.post
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Detach a volume from a PVMInstance
      operationId: pcloud.pvminstances.volumes.delete
      responses:
        "202":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
      - $ref: '#/parameters/volume_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes:
    get:
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: List all volumes for this cloud instance
      operationId: pcloud.cloudinstances.volumes.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volumes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Create a new data Volume
      operationId: pcloud.cloudinstances.volumes.post
      parameters:
        - description: Parameters for the creation of a new data volume
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDataVolume'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/{volume_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Detailed info of a volume
      operationId: pcloud.cloudinstances.volumes.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudVolumes
      summary: Update a cloud instance volume
      operationId: pcloud.cloudinstances.volumes.put
      parameters:
        - description: Parameters to update a cloud instance volume
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVolume'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudVolumes
      summary: Delete a cloud instance volume
      operationId: pcloud.cloudinstances.volumes.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_id'
  /pcloud/v1/images:
    get:
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: List all images available for copying into Cloud Instances
      operationId: pcloud.images.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Images'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /pcloud/v1/images/{image_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudImages
      summary: Detailed info of an available image
      operationId: pcloud.images.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/image_id'
  /pcloud/v1/tenants/{tenant_id}:
    get:
      produces:
        - application/json
      tags:
        - PCloudTenants
      summary: Get a Tenant's current state/information
      operationId: pcloud.tenants.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudTenants
      summary: Update a tenant
      operationId: pcloud.tenants.put
      parameters:
        - description: Parameters for updating a Tenant
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TenantUpdate'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/tenant_id'
  /pcloud/v1/tenants/{tenant_id}/sshkeys:
    get:
      produces:
        - application/json
      tags:
        - PCloudTenantsSSHKeys
      summary: List a Tenant's SSH Keys
      operationId: pcloud.tenants.sshkeys.getall
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKeys'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudTenantsSSHKeys
      summary: Add a new SSH key to the Tenant
      operationId: pcloud.tenants.sshkeys.post
      parameters:
        - description: Parameters for the creation of a new SSH key
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SSHKey'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/tenant_id'
  /pcloud/v1/tenants/{tenant_id}/sshkeys/{sshkey_name}:
    get:
      produces:
        - application/json
      tags:
        - PCloudTenantsSSHKeys
      summary: Get a Tenant's SSH Key by name
      operationId: pcloud.tenants.sshkeys.get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - PCloudTenantsSSHKeys
      summary: Update an SSH Key
      operationId: pcloud.tenants.sshkeys.put
      parameters:
        - description: Parameters for updating a Tenant's SSH Key
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SSHKey'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - PCloudTenantsSSHKeys
      summary: Delete a Tenant's SSH key
      operationId: pcloud.tenants.sshkeys.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/tenant_id'
      - $ref: '#/parameters/sshkey_name'
  /v1/swagger.json:
    get:
      security: []
      tags:
        - SwaggerSpec
      summary: Get swagger json spec
      operationId: serviceBroker.swaggerspec
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
  /v2/catalog:
    get:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - Catalog
      summary: get the catalog of services that the service broker offers
      operationId: catalog.get
      parameters:
        - $ref: '#/parameters/APIVersion'
      responses:
        "200":
          description: catalog response
          schema:
            $ref: '#/definitions/Catalog'
  /v2/service_instances/{instance_id}:
    get:
      security:
        - basic: []
      tags:
        - ServiceInstances
      summary: gets a service instance
      operationId: serviceInstance.get
      parameters:
        - $ref: '#/parameters/APIVersion'
        - $ref: '#/parameters/OriginatingIdentity'
        - $ref: '#/parameters/instance_id'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstanceResource'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - basic: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ServiceInstances
      summary: provision a service instance
      operationId: serviceInstance.provision
      parameters:
        - description: parameters for the requested service instance provision
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceProvisionRequest'
        - $ref: '#/parameters/accepts_incomplete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstanceProvision'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceInstanceProvision'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/ServiceInstanceAsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - ServiceInstances
      summary: deprovision a service instance
      operationId: serviceInstance.deprovision
      parameters:
        - $ref: '#/parameters/accepts_incomplete'
        - $ref: '#/parameters/service_id'
        - $ref: '#/parameters/plan_id'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
    patch:
      security:
        - basic: []
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ServiceInstances
      summary: update a service instance
      operationId: serviceInstance.update
      parameters:
        - description: parameters for the requested service instance update
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceUpdateRequest'
        - $ref: '#/parameters/accepts_incomplete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/ServiceInstanceAsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/OriginatingIdentity'
      - $ref: '#/parameters/instance_id'
  /v2/service_instances/{instance_id}/last_operation:
    get:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - ServiceInstances
      summary: last requested operation state for service instance
      operationId: serviceInstance.lastOperation.get
      parameters:
        - type: string
          description: id of the service associated with the instance
          name: service_id
          in: query
        - type: string
          description: id of the plan associated with the instance
          name: plan_id
          in: query
        - type: string
          description: a provided identifier for the operation
          name: operation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LastOperationResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/instance_id'
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:
    get:
      security:
        - basic: []
      tags:
        - ServiceBindings
      summary: gets a service binding
      operationId: serviceBinding.get
      parameters:
        - $ref: '#/parameters/APIVersion'
        - $ref: '#/parameters/OriginatingIdentity'
        - $ref: '#/parameters/instance_id'
        - $ref: '#/parameters/binding_id'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceBindingResource'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - ServiceBindings
      summary: generation of a service binding
      operationId: serviceBinding.binding
      parameters:
        - description: parameters for the requested service binding
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceBindingRequest'
        - $ref: '#/parameters/accepts_incomplete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceBinding'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceBinding'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - basic: []
      tags:
        - ServiceBindings
      summary: deprovision of a service binding
      operationId: serviceBinding.unbinding
      parameters:
        - $ref: '#/parameters/service_id'
        - $ref: '#/parameters/plan_id'
        - $ref: '#/parameters/accepts_incomplete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/OriginatingIdentity'
      - $ref: '#/parameters/instance_id'
      - $ref: '#/parameters/binding_id'
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:
    get:
      security:
        - basic: []
      produces:
        - application/json
      tags:
        - ServiceBindings
      summary: last requested operation state for service binding
      operationId: serviceBinding.lastOperation.get
      parameters:
        - type: string
          description: id of the service associated with the instance
          name: service_id
          in: query
        - type: string
          description: id of the plan associated with the instance
          name: plan_id
          in: query
        - type: string
          description: a provided identifier for the operation
          name: operation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LastOperationResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/instance_id'
      - $ref: '#/parameters/binding_id'
definitions:
  AccessToken:
    type: object
    required:
      - accessToken
    properties:
      accessToken:
        description: Access Token
        type: string
  AsyncOperation:
    type: object
    properties:
      operation:
        type: string
  Catalog:
    type: object
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/Service'
  CloudInstance:
    type: object
    required:
      - cloudInstanceID
      - name
      - tenantID
      - openstackID
      - region
      - processors
      - procUnits
      - memory
      - enabled
      - initialized
      - pvmInstances
    properties:
      cloudInstanceID:
        description: Cloud Instance ID
        type: string
      enabled:
        description: Indicates if the cloud instance is enabled
        type: boolean
      initialized:
        description: Indicates if the cloud instance is initialized and ready for
          use
        type: boolean
      instances:
        description: Number of power instances allowed
        type: number
      memory:
        description: Amount of memory allowed
        type: number
      name:
        description: Cloud Instance Name
        type: string
      openstackID:
        description: The open stack ID that controls this cloud instance
        type: string
      procUnits:
        description: Number of processor units allowed
        type: number
      processors:
        description: Number of processors allowed
        type: number
      pvmInstances:
        description: PVM instances owned by the Cloud Instance
        type: array
        items:
          $ref: '#/definitions/PVMInstanceReference'
      region:
        description: The region the cloud instance lives
        type: string
      storage:
        description: Amount of storage allowed (TB)
        type: number
      tenantID:
        description: The tenant ID that owns this cloud instance
        type: string
  CloudInstanceCreate:
    type: object
    required:
      - tenantID
      - region
      - processors
      - procUnits
      - memory
    properties:
      instances:
        description: Number of power instances allowed
        type: number
        x-isnullable: true
      memory:
        description: Amount of memory allowed
        type: number
      procUnits:
        description: Number of processor units allowed
        type: number
      processors:
        description: Number of processors allowed
        type: number
      region:
        description: The region the cloud instance lives
        type: string
      storage:
        description: Amount of storage allowed (TB)
        type: number
        x-isnullable: true
      tenantID:
        description: The tenant ID that owns this cloud instance
        type: string
  CloudInstanceReference:
    type: object
    required:
      - cloudInstanceID
      - name
      - region
      - enabled
      - initialized
      - href
    properties:
      cloudInstanceID:
        description: Cloud Instance ID
        type: string
      enabled:
        description: Indicates if the cloud instance is enabled
        type: boolean
      href:
        description: Link to Cloud Instance resource
        type: string
      initialized:
        description: Indicates if the cloud instance is initialized and ready for
          use
        type: boolean
      name:
        description: Cloud Instance Name
        type: string
      region:
        description: The region the cloud instance lives
        type: string
  CloudInstanceUpdate:
    type: object
    properties:
      instances:
        description: Number of power instances allowed
        type: number
        x-isnullable: true
      memory:
        description: Amount of memory allowed
        type: number
        x-isnullable: true
      procUnits:
        description: Number of processor units allowed
        type: number
        x-isnullable: true
      processors:
        description: Number of processors allowed
        type: number
        x-isnullable: true
      storage:
        description: Amount of storage allowed (TB)
        type: number
        x-isnullable: true
  Context:
    description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)
      for more details.
    type: object
  CreateDataVolume:
    type: object
    required:
      - name
      - size
      - diskType
    properties:
      diskType:
        description: Type of Disk {ssd, standard}
        type: string
        default: standard
        enum:
          - ssd
          - standard
      name:
        description: Volume Name
        type: string
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size (GB)
        type: number
  CreateImage:
    type: object
    required:
      - source
    properties:
      accessKey:
        description: Service access key
        type: string
      imageID:
        description: Image ID of existing source image; required for copy image
        type: string
      imageName:
        description: Name to give created image; required for import image
        type: string
      imagePath:
        description: Path to image starting with service endpoint and ending with
          image filename
        type: string
      osType:
        description: Image OS Type
        type: string
        enum:
          - aix
          - ibmi
          - redhat
          - sles
      secretKey:
        description: Service secret key
        type: string
      source:
        description: Source of the image
        type: string
        enum:
          - root-project
          - url
  DashboardClient:
    type: object
    properties:
      id:
        type: string
      redirect_uri:
        type: string
      secret:
        type: string
  DeviceCode:
    type: object
    required:
      - deviceCode
      - userCode
      - verificationURL
      - expiresIn
      - interval
    properties:
      deviceCode:
        description: This code lets the device running the app securely determine
          whether the user has granted or denied access
        type: string
      expiresIn:
        description: The length of time, in seconds, that the device_code and user_code
          are valid
        type: number
      interval:
        description: The length of time, in seconds, that your device should wait
          between polling requests
        type: number
      userCode:
        description: The value given to the user to enter on device authentication
          page
        type: string
      verificationURL:
        description: A URL that the user must navigate to, on a separate device, to
          enter the user_code and grant or deny access to your application. Your user
          interface will also display this value
        type: string
  Error:
    type: object
    properties:
      description:
        type: string
      error:
        type: string
  ExportImage:
    type: object
    required:
      - bucketName
      - accessKey
    properties:
      accessKey:
        description: Cloud Object Storage Access key
        type: string
      bucketName:
        description: Cloud Object Storage Bucket name
        type: string
      region:
        description: Cloud Object Storage Region; required for IBM COS
        type: string
        default: us-east
        enum:
          - us-east
          - us-south
      secretKey:
        description: Cloud Object Storage Secret key
        type: string
  HardwarePlatform:
    description: Hardware platform detailing its limits and statistics
    type: object
    properties:
      description:
        description: Description
        type: string
      memory:
        description: Configured Memory GB
        type: number
      processorMemoryRatio:
        description: Processor to Memory (GB) Ratio
        type: number
      processors:
        description: Configured Processors
        type: number
      sharedProcessorStep:
        description: Allowable granularity for shared processors
        type: number
      type:
        description: Short code for hardware
        type: string
  HardwarePlatforms:
    description: A map of hardware platforms detailing their limits and statistics
    type: object
    additionalProperties:
      $ref: '#/definitions/HardwarePlatform'
  Health:
    type: object
    required:
      - status
    properties:
      status:
        description: Returns a description of the current servers health
        type: string
  IPAddressRange:
    type: object
    required:
      - startingIPAddress
      - endingIPAddress
    properties:
      endingIPAddress:
        description: Ending IP Address
        type: string
      startingIPAddress:
        description: Starting IP Address
        type: string
  Image:
    type: object
    required:
      - imageID
      - name
      - size
      - creationDate
      - lastUpdateDate
    properties:
      creationDate:
        description: Creation Date
        type: string
        format: date-time
      description:
        description: Description
        type: string
      imageID:
        description: Image ID
        type: string
      lastUpdateDate:
        description: Last Update Date
        type: string
        format: date-time
      name:
        description: Image Name
        type: string
      size:
        description: Image Size
        type: number
      specifications:
        type: object
        $ref: '#/definitions/ImageSpecifications'
      state:
        description: Image State
        type: string
  ImageReference:
    type: object
    required:
      - imageID
      - name
      - href
    properties:
      href:
        description: Link to Image resource
        type: string
      imageID:
        description: Image ID
        type: string
      name:
        description: Image Name
        type: string
  ImageSpecifications:
    type: object
    properties:
      architecture:
        description: Architecture
        type: string
      containerFormat:
        description: Container Format
        type: string
      diskFormat:
        description: Disk Format
        type: string
      endianness:
        description: Endianness
        type: string
      hypervisorType:
        description: Hypervisor Type
        type: string
      imageType:
        description: Image Type
        type: string
      operatingSystem:
        description: Operating System
        type: string
  Images:
    type: object
    required:
      - images
    properties:
      images:
        description: Images
        type: array
        items:
          $ref: '#/definitions/ImageReference'
  JSONSchemaObject:
    type: object
  LastOperationResource:
    type: object
    required:
      - state
    properties:
      description:
        type: string
      state:
        type: string
        enum:
          - in progress
          - succeeded
          - failed
  Metadata:
    description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)
      for more details.
    type: object
  Network:
    type: object
    required:
      - networkID
      - name
      - type
      - vlanID
      - cidr
      - dnsServers
      - ipAddressRanges
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
      dnsServers:
        description: DNS Servers
        type: array
        items:
          type: string
      gateway:
        description: Gateway IP Address
        type: string
      ipAddressRanges:
        description: IP Address Ranges
        type: array
        items:
          $ref: '#/definitions/IPAddressRange'
      name:
        description: Network Name
        type: string
      networkID:
        description: Unique Network ID
        type: string
      publicIPAddressRanges:
        description: Public IP Address Ranges (for pub-vlan networks)
        type: array
        items:
          $ref: '#/definitions/IPAddressRange'
        x-omitempty: true
      type:
        description: Type of Network {vlan, vxlan}
        type: string
        default: vlan
        enum:
          - vlan
          - vxlan
      vlanID:
        description: VLAN ID
        type: number
  NetworkCreate:
    type: object
    required:
      - type
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
      dnsServers:
        description: DNS Servers
        type: array
        items:
          type: string
      gateway:
        description: Gateway IP Address
        type: string
      ipAddressRanges:
        description: IP Address Ranges
        type: array
        items:
          $ref: '#/definitions/IPAddressRange'
      name:
        description: Network Name
        type: string
      type:
        description: Type of Network - 'vlan' (private network) 'pub-vlan' (public
          network)
        type: string
        default: vlan
        enum:
          - vlan
          - pub-vlan
  NetworkReference:
    type: object
    required:
      - networkID
      - name
      - vlanID
      - type
      - href
    properties:
      href:
        description: Link to Network resource
        type: string
      name:
        description: Network Name
        type: string
      networkID:
        description: Unique Network ID
        type: string
      type:
        description: Type of Network {vlan, vxlan}
        type: string
        default: vlan
        enum:
          - vlan
          - vxlan
      vlanID:
        description: VLAN ID
        type: number
  NetworkUpdate:
    type: object
    properties:
      dnsServers:
        description: Replaces the current DNS Servers
        type: array
        items:
          type: string
        x-isnullable: true
      gateway:
        description: Replaces the current Gateway IP Address
        type: string
        x-isnullable: true
      ipAddressRanges:
        description: Replaces the current IP Address Ranges
        type: array
        items:
          $ref: '#/definitions/IPAddressRange'
        x-isnullable: true
      name:
        description: Replaces the current Network Name
        type: string
        x-isnullable: true
  Networks:
    type: object
    required:
      - networks
    properties:
      networks:
        description: Network References
        type: array
        items:
          $ref: '#/definitions/NetworkReference'
  Object:
    type: object
  OpenStack:
    type: object
    required:
      - id
      - name
      - ipAddress
      - region
      - nextVLANID
    properties:
      id:
        description: Unique identifier for the OpenStack instance
        type: string
      ipAddress:
        description: Internal IP address of the OpenStack instance
        type: string
      name:
        description: Shortname of the OpenStack instance
        type: string
      nextVLANID:
        description: Next available VLAN ID to be used for a network creation
        type: number
      region:
        description: The region where the open stack lives
        type: string
  OpenStackCreate:
    type: object
    required:
      - name
      - ipAddress
      - region
    properties:
      ipAddress:
        description: Internal IP address of the OpenStack instance
        type: string
      name:
        description: Shortname of the OpenStack instance
        type: string
      region:
        description: The region where the open stack lives
        type: string
  OpenStacks:
    type: object
    required:
      - openStacks
    properties:
      openStacks:
        description: OpenStacks managed by Power IAAS
        type: array
        items:
          $ref: '#/definitions/OpenStack'
  PVMInstance:
    type: object
    required:
      - pvmInstanceID
      - serverName
      - imageID
      - processors
      - procType
      - memory
      - diskSize
      - networkIDs
      - volumeIDs
      - status
    properties:
      addresses:
        description: The list of addresses and their network information
        type: array
        items:
          $ref: '#/definitions/PVMInstanceAddress'
      creationDate:
        description: Date/Time of PVM creation
        type: string
        format: date-time
      diskSize:
        description: Size of allocated disk (in GB)
        type: number
      fault:
        description: Fault information (if occurred)
        type: object
        properties:
          code:
            description: The fault status of the server, if any
            type: number
          created:
            description: The date and time the fault occurred
            type: string
            format: date-time
          details:
            description: The fault details of the server, if any
            type: string
          message:
            description: The fault message of the server, if any
            type: string
      health:
        description: PVM's health status details
        type: object
        properties:
          lastUpdate:
            description: Date/Time of PVM last health status change
            type: string
          reason:
            description: The health status reason, if any
            type: string
          status:
            description: The PVM's health status value
            type: string
      imageID:
        description: The ImageID used by the server
        type: string
      maxmem:
        description: Maximum amount of memory that can be allocated (in GB, for resize)
        type: number
      maxproc:
        description: Maximum number of processors that can be allocated (for resize)
        type: number
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        description: whether the instance can be migrated
        type: boolean
        default: true
      minmem:
        description: Minimum amount of memory that can be allocated (in GB, for resize)
        type: number
      minproc:
        description: Minimum number of processors that can be allocated (for resize)
        type: number
      networkIDs:
        description: List of Network IDs
        type: array
        items:
          description: Network ID
          type: string
      procType:
        description: Processor type (dedicated or shared)
        type: string
        default: dedicated
        enum:
          - dedicated
          - shared
      processors:
        description: Number of processors allocated
        type: number
      progress:
        description: The progress of an operation
        type: number
      pvmInstanceID:
        description: PCloud PVM Instance ID
        type: string
      serverName:
        description: Name of the server
        type: string
      status:
        description: The status of the instance
        type: string
      sysType:
        description: System type used to host the instance
        type: string
        default: unknown
        enum:
          - s922
          - e880
          - unknown
      updatedDate:
        description: Date/Time of PVM last update
        type: string
        format: date-time
      volumeIDs:
        description: List of volume IDs
        type: array
        items:
          description: Volume ID
          type: string
  PVMInstanceAction:
    type: object
    required:
      - action
    properties:
      action:
        description: Name of the action to take; can be start, stop, hard-reboot,
          soft-reboot
        type: string
        enum:
          - start
          - stop
          - hard-reboot
          - soft-reboot
  PVMInstanceAddress:
    description: A map containing information about a network address
    type: object
    properties:
      externalIP:
        description: The external ip address (for pub-vlan networks)
        type: string
        x-omitempty: true
      ip:
        description: The ip address
        type: string
      macAddress:
        description: The mac address of the network interface
        type: string
      networkID:
        description: ID of the primary network to use for the server
        type: string
      networkName:
        description: The name of the network the address is on
        type: string
      type:
        description: The address type (fixed or dynamic)
        type: string
      version:
        description: The version of the information provided
        type: number
  PVMInstanceCapture:
    type: object
    required:
      - captureName
      - captureDestination
    properties:
      captureDestination:
        description: Destination for the deployable image
        type: string
        default: cloud-storage
        enum:
          - image-catalog
          - cloud-storage
          - both
      captureName:
        description: Name of the deployable image created for the captured PVMInstance
        type: string
      captureVolumeIDs:
        description: List of Data volume IDs to include in the captured PVMInstance
        type: array
        items:
          description: Volume ID
          type: string
      cloudStorageAccessKey:
        description: Cloud Storage Access key
        type: string
      cloudStorageImagePath:
        description: Cloud Storage Image Path (bucket-name [/folder/../..])
        type: string
      cloudStorageRegion:
        description: Cloud Storage Region
        type: string
        default: us-east
        enum:
          - us-east
          - us-south
      cloudStorageSecretKey:
        description: Cloud Storage Secret key
        type: string
  PVMInstanceConsole:
    type: object
    required:
      - consoleURL
    properties:
      consoleURL:
        description: The URL to the noVNC console for the PVM Instance
        type: string
  PVMInstanceCreate:
    type: object
    required:
      - serverName
      - imageID
      - processors
      - procType
      - memory
      - volumeIDs
      - networkIDs
    properties:
      imageID:
        description: Image ID of the image to use for the server
        type: string
      keyPairName:
        description: The name of the SSH key pair provided to the server for authenticating
          users (looked up in the tenant's list of keys)
        type: string
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        description: Indicates if the server is allowed to migrate between hosts
        type: boolean
        default: true
      networkIDs:
        description: List of Network IDs
        type: array
        items:
          description: Network ID
          type: string
      procType:
        description: Processor type (dedicated or shared)
        type: string
        default: dedicated
        enum:
          - dedicated
          - shared
      processors:
        description: Number of processors allocated
        type: number
      replicantAffinityPolicy:
        description: Affinity policy for replicants being created; affinity for the
          same host, anti-affinity for different hosts, none for no preference
        type: string
        default: none
        enum:
          - affinity
          - anti-affinity
          - none
      replicantNamingScheme:
        description: How to name the created vms
        type: string
        default: suffix
        enum:
          - prefix
          - suffix
      replicants:
        description: Number of duplicate instances to create in this request
        type: number
      serverName:
        description: Name of the server to create
        type: string
      sysType:
        description: System type used to host the instance
        type: string
        default: any
        enum:
          - s922
          - e880
          - any
      volumeIDs:
        description: List of volume IDs
        type: array
        items:
          description: Volume ID
          type: string
  PVMInstanceList:
    description: A list of PVMInstances
    type: array
    items:
      $ref: '#/definitions/PVMInstance'
  PVMInstanceReference:
    type: object
    required:
      - pvmInstanceID
      - serverName
      - href
    properties:
      href:
        description: Link to Cloud Instance resource
        type: string
      pvmInstanceID:
        description: PCloud PVM Instance ID
        type: string
      serverName:
        description: Name of the server
        type: string
  PVMInstanceUpdate:
    type: object
    properties:
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        description: Indicates if the server is allowed to migrate between hosts
        type: boolean
        default: true
      procType:
        description: Processor type (dedicated or shared)
        type: string
        enum:
          - dedicated
          - shared
      processors:
        description: Number of processors allocated
        type: number
      serverName:
        description: Name of the server to create
        type: string
  PVMInstanceUpdateResponse:
    type: object
    properties:
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      procType:
        description: Processor type (dedicated or shared)
        type: string
        enum:
          - dedicated
          - shared
      processors:
        description: Number of processors allocated
        type: number
      serverName:
        description: Name of the server to create
        type: string
      statusUrl:
        description: URL to check for status of the operation (for now, just the URL
          for the GET on the server, which has status information from powervc)
        type: string
  PVMInstances:
    type: object
    required:
      - pvmInstances
    properties:
      pvmInstances:
        description: PVM Instance References
        type: array
        items:
          $ref: '#/definitions/PVMInstanceReference'
  PeeringNetwork:
    type: object
    required:
      - projectName
      - cidr
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
      projectName:
        description: Name of project to be peered
        type: string
  Plan:
    type: object
    required:
      - id
      - name
      - description
    properties:
      bindable:
        type: boolean
      description:
        type: string
      free:
        type: boolean
        default: true
      id:
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        type: string
      schemas:
        $ref: '#/definitions/SchemasObject'
  Principal:
    type: object
    properties:
      token:
        description: OAuth2 Token
        $ref: '#/definitions/Token'
      userAccess:
        description: User Access
        $ref: '#/definitions/UserAccess'
      userEmail:
        description: Email of User
        type: string
      userID:
        description: ID of User
        type: string
  SSHKey:
    type: object
    required:
      - name
      - sshKey
    properties:
      creationDate:
        description: Date of sshkey creation
        type: string
        format: date-time
        x-go-custom-tag: datastore:"creationDate"
        x-isnullable: true
      name:
        description: User defined name for the SSH key
        type: string
        x-go-custom-tag: datastore:"name"
      sshKey:
        description: SSH RSA key
        type: string
        x-go-custom-tag: datastore:"sshKey"
  SSHKeys:
    type: object
    required:
      - sshKeys
    properties:
      sshKeys:
        description: SSH Keys
        type: array
        items:
          $ref: '#/definitions/SSHKey'
  SchemaParameters:
    type: object
    properties:
      parameters:
        $ref: '#/definitions/JSONSchemaObject'
  SchemasObject:
    type: object
    properties:
      service_binding:
        $ref: '#/definitions/ServiceBindingSchemaObject'
      service_instance:
        $ref: '#/definitions/ServiceInstanceSchemaObject'
  Service:
    type: object
    required:
      - name
      - id
      - description
      - bindable
      - plans
    properties:
      bindable:
        type: boolean
      dashboard_client:
        $ref: '#/definitions/DashboardClient'
      description:
        type: string
      iam_compatible:
        type: boolean
      id:
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        type: string
      plan_updateable:
        type: boolean
      plans:
        type: array
        items:
          $ref: '#/definitions/Plan'
      provisionable:
        type: boolean
      rc_compatible:
        type: boolean
      requires:
        type: array
        items:
          type: string
          enum:
            - syslog_drain
            - route_forwarding
            - volume_mount
      tags:
        type: array
        items:
          type: string
      unique_api_key:
        type: boolean
  ServiceBinding:
    type: object
    properties:
      credentials:
        $ref: '#/definitions/Object'
      route_service_url:
        type: string
      syslog_drain_url:
        type: string
      volume_mounts:
        type: array
        items:
          $ref: '#/definitions/ServiceBindingVolumeMount'
  ServiceBindingRequest:
    type: object
    required:
      - service_id
      - plan_id
    properties:
      app_guid:
        type: string
        x-deprecated: true
      bind_resource:
        $ref: '#/definitions/ServiceBindingResourceObject'
      context:
        $ref: '#/definitions/Context'
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
  ServiceBindingResource:
    type: object
    properties:
      credentials:
        $ref: '#/definitions/Object'
      parameters:
        $ref: '#/definitions/Object'
      route_service_url:
        type: string
      syslog_drain_url:
        type: string
      volume_mounts:
        type: array
        items:
          $ref: '#/definitions/ServiceBindingVolumeMount'
  ServiceBindingResourceObject:
    type: object
    properties:
      app_guid:
        type: string
      route:
        type: string
  ServiceBindingSchemaObject:
    type: object
    properties:
      create:
        $ref: '#/definitions/SchemaParameters'
  ServiceBindingVolumeMount:
    type: object
    required:
      - driver
      - container_dir
      - mode
      - device_type
      - device
    properties:
      container_dir:
        type: string
      device:
        $ref: '#/definitions/ServiceBindingVolumeMountDevice'
      device_type:
        type: string
        enum:
          - shared
      driver:
        type: string
      mode:
        type: string
        enum:
          - r
          - rw
  ServiceBindingVolumeMountDevice:
    type: object
    required:
      - volume_id
    properties:
      mount_config:
        $ref: '#/definitions/Object'
      volume_id:
        type: string
  ServiceInstance:
    type: object
    required:
      - active
      - enable
      - last_active
    properties:
      active:
        description: Indicates (from the viewpoint of the provider) whether the service
          instance is (perceived) active or not and is meaningful if enabled is true.
          The default value is true if not specified.
        type: boolean
      enable:
        description: Indicates the current state of the service instance.
        type: boolean
      last_active:
        description: Indicates when the service instance was last accessed or modified,
          and is meaningful if enabled is true AND active is false. Represented as
          milliseconds since the epoch, but does not need to be accurate to the second/hour.
        type: number
  ServiceInstanceAsyncOperation:
    type: object
    properties:
      dashboard_url:
        type: string
      operation:
        type: string
  ServiceInstancePreviousValues:
    type: object
    properties:
      organization_id:
        type: string
        x-deprecated: true
      plan_id:
        type: string
      service_id:
        type: string
        x-deprecated: true
      space_id:
        type: string
        x-deprecated: true
  ServiceInstanceProvision:
    type: object
    properties:
      dashboard_url:
        type: string
  ServiceInstanceProvisionRequest:
    type: object
    required:
      - service_id
      - plan_id
    properties:
      context:
        $ref: '#/definitions/Context'
      organization_guid:
        type: string
        x-deprecated: true
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
      space_guid:
        type: string
        x-deprecated: true
  ServiceInstanceRequest:
    type: object
    required:
      - enabled
    properties:
      enabled:
        description: Indicates the current state of the service instance.
        type: boolean
      initiator_id:
        description: Optional string stating the reason code for the service instance
          state change. Valid values are BMX_ACCT_ACTIVATE, BMX_SERVICE_INSTANCE_BELOW_CAP
          for enable calls, and BMX_ACCT_SUSPEND, BMX_SERVICE_INSTANCE_ABOVE_CAP for
          disable calls.
        type: string
      reason_code:
        description: Optional string showing the user id initiating the call
        type: string
  ServiceInstanceResource:
    type: object
    properties:
      dashboard_url:
        type: string
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
  ServiceInstanceSchemaObject:
    type: object
    properties:
      create:
        $ref: '#/definitions/SchemaParameters'
      update:
        $ref: '#/definitions/SchemaParameters'
  ServiceInstanceUpdateRequest:
    type: object
    required:
      - service_id
    properties:
      context:
        $ref: '#/definitions/Context'
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      previous_values:
        $ref: '#/definitions/ServiceInstancePreviousValues'
      service_id:
        type: string
  Tenant:
    type: object
    required:
      - tenantID
      - enabled
      - creationDate
      - cloudInstances
    properties:
      cloudInstances:
        description: Cloud Instances owned by the Tenant
        type: array
        items:
          $ref: '#/definitions/CloudInstanceReference'
      creationDate:
        description: Date of Tenant creation
        type: string
        format: date-time
      enabled:
        description: Indicates if the tenant is enabled
        type: boolean
      icn:
        description: IBM Customer Number
        type: string
        x-omitempty: true
      peeringNetworks:
        description: Peering Network Information (optional)
        type: array
        items:
          $ref: '#/definitions/PeeringNetwork'
        x-omitempty: true
      sshKeys:
        description: Tenant SSH Keys
        type: array
        items:
          $ref: '#/definitions/SSHKey'
      tenantID:
        description: Tenant ID
        type: string
  TenantCreate:
    type: object
    required:
      - tenantID
    properties:
      billingAccountID:
        description: Billing account ID
        type: string
      entitlementID:
        description: Entitlement ID
        type: string
      sshKeys:
        description: Tenant SSH Keys
        type: array
        items:
          $ref: '#/definitions/SSHKey'
      tenantID:
        description: Tenant ID
        type: string
  TenantUpdate:
    type: object
    properties:
      icn:
        description: IBM Customer Number
        type: string
        x-isnullable: true
  Token:
    type: object
    required:
      - accessToken
      - type
      - refreshToken
      - expires
    properties:
      accessToken:
        description: AccessToken
        type: string
      expires:
        description: Token Expires
        type: string
        format: date-time
      refreshToken:
        description: Refresh Token
        type: string
      type:
        description: Token Type
        type: string
  TokenExtra:
    type: object
    required:
      - token
      - serverTime
      - expiresIn
      - valid
    properties:
      expiresIn:
        description: Number of seconds token will expire
        type: number
      serverTime:
        description: Time on the service broker
        type: string
        format: date-time
      token:
        description: OAuth Token
        $ref: '#/definitions/Token'
      valid:
        description: Is this token valid
        type: boolean
  TokenRequest:
    type: object
    required:
      - refreshToken
      - source
    properties:
      refreshToken:
        description: The refresh token to request the new Access Token
        type: string
      source:
        description: Source type of the token request (web or cli)
        type: string
        default: cli
        enum:
          - web
          - cli
  UpdateVolume:
    type: object
    properties:
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      name:
        description: Name
        type: string
        x-isnullable: true
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: New Volume size
        type: number
  UserAccess:
    description: Keeps tracks of individual user's access and roles
    type: object
    properties:
      _id:
        description: User ID
        type: string
        x-go-custom-tag: datastore:"id"
        x-go-name: UserID
      _rev:
        type: string
        x-go-custom-tag: datastore:"-"
      baseRole:
        description: Base Role for this User
        type: string
        default: user-readonly
        enum:
          - user-admin
          - user-readonly
          - service-admin
          - service-readonly
          - disabled
          - pending
        x-go-custom-tag: datastore:"baseRole"
        x-isnullable: false
      cloudInstances:
        description: A map of cloudInstanceID to role
        x-go-custom-tag: datastore:"cloudInstances"
        $ref: '#/definitions/UserAccessCloudInstanceMap'
      memberOf:
        description: Member of (Tenants)
        type: array
        items:
          type: string
        x-go-custom-tag: datastore:"memberOf"
      notes:
        description: Notes for development (not used internally)
        type: string
        x-go-custom-tag: datastore:"notes,noindex,omitempty"
  UserAccessCloudInstanceMap:
    type: object
    additionalProperties:
      type: string
      default: user-readonly
      enum:
        - user-admin
        - user-readonly
        - service-admin
        - service-readonly
        - disabled
        - pending
      x-isnullable: false
    x-go-type:
      import:
        alias: datastore
        package: github.ibm.com/power-iaas/service-broker/models/datastore
      type: UserAccessCloudInstanceMap
  UserInfo:
    type: object
    required:
      - id
      - name
      - email
    properties:
      email:
        description: User Email
        type: string
      id:
        description: User ID
        type: string
      imageURL:
        description: User Image URL
        type: string
      memberOf:
        description: Member of the following tenants
        type: array
        items:
          description: Tenant Project ID
          type: string
      name:
        description: User Name
        type: string
  Version:
    type: object
    properties:
      buildDate:
        description: Returns the build time
        type: string
      goVersion:
        description: Returns the current go runtime version
        type: string
      hostname:
        description: Hostname of the responding system
        type: string
      version:
        description: Returns the git versioning information
        type: string
  Volume:
    type: object
    required:
      - volumeID
      - name
      - size
      - creationDate
      - lastUpdateDate
    properties:
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      creationDate:
        description: Creation Date
        type: string
        format: date-time
      diskType:
        description: Type of Disk
        type: string
      lastUpdateDate:
        description: Last Update Date
        type: string
        format: date-time
      name:
        description: Volume Name
        type: string
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size
        type: number
      state:
        description: Volume State
        type: string
      volumeID:
        description: Volume ID
        type: string
  VolumeReference:
    type: object
    required:
      - volumeID
      - name
      - size
      - shareable
      - bootable
      - href
    properties:
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      href:
        description: Link to Volume resource
        type: string
      name:
        description: Volume Name
        type: string
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size
        type: number
      volumeID:
        description: Volume ID
        type: string
  Volumes:
    type: object
    required:
      - volumes
    properties:
      volumes:
        description: Volumes
        type: array
        items:
          $ref: '#/definitions/VolumeReference'
parameters:
  APIVersion:
    type: string
    description: version number of the Service Broker API that the Platform will use
    name: X-Broker-API-Version
    in: header
    required: true
  OriginatingIdentity:
    type: string
    description: identity of the user that initiated the request from the Platform
    name: X-Broker-API-Originating-Identity
    in: header
  accepts_incomplete:
    type: boolean
    description: asynchronous operations supported
    name: accepts_incomplete
    in: query
  accessType:
    enum:
      - online
      - offline
    type: string
    default: online
    description: Determines if a refresh token is returned
    name: access_type
    in: query
  binding_id:
    type: string
    description: binding id of binding to create
    name: binding_id
    in: path
    required: true
  cloud_instance_id:
    type: string
    description: Cloud Instance ID of a PCloud Instance
    name: cloud_instance_id
    in: path
    required: true
  icn:
    type: string
    description: IBM Customer Number (ICN) for this tenant
    name: icn
    in: query
    required: true
  image_id:
    type: string
    description: Image ID of a image
    name: image_id
    in: path
    required: true
  instance_id:
    type: string
    description: instance id of instance to provision
    name: instance_id
    in: path
    required: true
  network_id:
    type: string
    description: Network ID
    name: network_id
    in: path
    required: true
  plan:
    type: string
    description: Plan for this tenant and entitlement
    name: plan
    in: query
    required: true
  plan_id:
    type: string
    description: id of the plan associated with the instance being deleted
    name: plan_id
    in: query
    required: true
  pvm_instance_id:
    type: string
    description: PCloud PVM Instance ID
    name: pvm_instance_id
    in: path
    required: true
  redirectURL:
    type: string
    description: The URL to redirect to after login/registration
    name: redirect_url
    in: query
  regions:
    type: array
    items:
      type: string
    description: An array of regions matching the number of cloud-instances in the
      plan
    name: regions
    in: query
    required: true
  registrationEntitlementID:
    type: string
    description: Entitlement ID of for this tenant
    name: entitlement_id
    in: query
    required: true
  registrationTenantID:
    type: string
    description: Tenant ID of a pcloud tenant
    name: tenant_id
    in: query
    required: true
  service_id:
    type: string
    description: id of the service associated with the instance being deleted
    name: service_id
    in: query
    required: true
  sshkey_name:
    type: string
    description: SSH key name for a pcloud tenant
    name: sshkey_name
    in: path
    required: true
  tenant_id:
    type: string
    description: Tenant ID of a pcloud tenant
    name: tenant_id
    in: path
    required: true
  userID:
    type: string
    description: The user id of the user
    name: user_id
    in: query
  volume_id:
    type: string
    description: Volume ID
    name: volume_id
    in: path
    required: true
securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: implicit
    authorizationUrl: /auth/v1/login
    x-google-audiences: 903592228867-h2v4860vq0lvids6bvqvr4ssjsobqeok.apps.googleusercontent.com
    x-google-issuer: https://accounts.google.com
  basic:
    type: basic
security:
  - OauthSecurity: []
externalDocs:
  description: IBM Power IAAS Service Broker
  url: https://github.ibm.com/power-iaas/service-broker
