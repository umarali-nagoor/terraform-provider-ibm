// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PVMInstanceSysType System type used to host the instance
// swagger:model PVMInstanceSysType
type PVMInstanceSysType string

const (

	// PVMInstanceSysTypeS922 captures enum value "s922"
	PVMInstanceSysTypeS922 PVMInstanceSysType = "s922"

	// PVMInstanceSysTypeE880 captures enum value "e880"
	PVMInstanceSysTypeE880 PVMInstanceSysType = "e880"

	// PVMInstanceSysTypeUnknown captures enum value "unknown"
	PVMInstanceSysTypeUnknown PVMInstanceSysType = "unknown"
)

// for schema
var pVmInstanceSysTypeEnum []interface{}

func init() {
	var res []PVMInstanceSysType
	if err := json.Unmarshal([]byte(`["s922","e880","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pVmInstanceSysTypeEnum = append(pVmInstanceSysTypeEnum, v)
	}
}

func (m PVMInstanceSysType) validatePVMInstanceSysTypeEnum(path, location string, value PVMInstanceSysType) error {
	if err := validate.Enum(path, location, value, pVmInstanceSysTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this p VM instance sys type
func (m PVMInstanceSysType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePVMInstanceSysTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
