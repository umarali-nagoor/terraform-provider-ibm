// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PVMInstanceUpdate p VM instance update
// swagger:model PVMInstanceUpdate
type PVMInstanceUpdate struct {

	// Amount of memory allocated (in GB)
	Memory float64 `json:"memory,omitempty"`

	// Indicates if the server is allowed to migrate between hosts
	Migratable *bool `json:"migratable,omitempty"`

	// Processor type (dedicated or shared)
	// Enum: [dedicated shared]
	ProcType string `json:"procType,omitempty"`

	// Number of processors allocated
	Processors float64 `json:"processors,omitempty"`

	// Name of the server to create
	ServerName string `json:"serverName,omitempty"`
}

// Validate validates this p VM instance update
func (m *PVMInstanceUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProcType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var pVmInstanceUpdateTypeProcTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dedicated","shared"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pVmInstanceUpdateTypeProcTypePropEnum = append(pVmInstanceUpdateTypeProcTypePropEnum, v)
	}
}

const (

	// PVMInstanceUpdateProcTypeDedicated captures enum value "dedicated"
	PVMInstanceUpdateProcTypeDedicated string = "dedicated"

	// PVMInstanceUpdateProcTypeShared captures enum value "shared"
	PVMInstanceUpdateProcTypeShared string = "shared"
)

// prop value enum
func (m *PVMInstanceUpdate) validateProcTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, pVmInstanceUpdateTypeProcTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PVMInstanceUpdate) validateProcType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProcType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProcTypeEnum("procType", "body", m.ProcType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PVMInstanceUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PVMInstanceUpdate) UnmarshalBinary(b []byte) error {
	var res PVMInstanceUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
