// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExportImage export image
// swagger:model ExportImage
type ExportImage struct {

	// Cloud Object Storage Access key
	// Required: true
	AccessKey *string `json:"accessKey"`

	// Cloud Object Storage Bucket name
	// Required: true
	BucketName *string `json:"bucketName"`

	// Cloud Object Storage Region; required for IBM COS
	// Enum: [us-east us-south]
	Region *string `json:"region,omitempty"`

	// Cloud Object Storage Secret key
	SecretKey string `json:"secretKey,omitempty"`
}

// Validate validates this export image
func (m *ExportImage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBucketName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExportImage) validateAccessKey(formats strfmt.Registry) error {

	if err := validate.Required("accessKey", "body", m.AccessKey); err != nil {
		return err
	}

	return nil
}

func (m *ExportImage) validateBucketName(formats strfmt.Registry) error {

	if err := validate.Required("bucketName", "body", m.BucketName); err != nil {
		return err
	}

	return nil
}

var exportImageTypeRegionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["us-east","us-south"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		exportImageTypeRegionPropEnum = append(exportImageTypeRegionPropEnum, v)
	}
}

const (

	// ExportImageRegionUsEast captures enum value "us-east"
	ExportImageRegionUsEast string = "us-east"

	// ExportImageRegionUsSouth captures enum value "us-south"
	ExportImageRegionUsSouth string = "us-south"
)

// prop value enum
func (m *ExportImage) validateRegionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, exportImageTypeRegionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExportImage) validateRegion(formats strfmt.Registry) error {

	if swag.IsZero(m.Region) { // not required
		return nil
	}

	// value enum
	if err := m.validateRegionEnum("region", "body", *m.Region); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExportImage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExportImage) UnmarshalBinary(b []byte) error {
	var res ExportImage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
